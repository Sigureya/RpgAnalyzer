{"version":3,"file":"rpg-analyzer.es.js","sources":["../node_modules/@sigureya/rpg-data-tools/dist/rpg-data-tools.es.js","../src/extracText/dummy.ts"],"sourcesContent":["import { COMMENT_BODY as f, CHANGE_NICKNAME as p, CHANGE_PROFILE as b, CHANGE_NAME as v, SHOW_SCROLLING_TEXT as I, SHOW_CHOICES_ITEM as N, SHOW_CHOICES as x, SHOW_MESSAGE as T } from \"@sigureya/rpgtypes\";\nconst r = () => [0, 0, 0, 0, 0, 0, 0, 0], W = (e) => ({\n  id: 0,\n  name: \"\",\n  nickname: \"\",\n  profile: \"\",\n  note: \"\",\n  classId: 0,\n  initialLevel: 1,\n  maxLevel: 99,\n  characterIndex: 0,\n  characterName: \"\",\n  faceIndex: 0,\n  faceName: \"\",\n  battlerName: \"\",\n  traits: [],\n  equips: [],\n  ...e\n}), _ = (e) => ({\n  battlerHue: 0,\n  id: 0,\n  name: \"\",\n  note: \"\",\n  battlerName: \"\",\n  traits: [],\n  params: r(),\n  exp: 0,\n  gold: 0,\n  dropItems: [],\n  actions: [],\n  ...e\n}), q = (e) => ({\n  price: 0,\n  id: 0,\n  name: \"\",\n  note: \"\",\n  iconIndex: 0,\n  description: \"\",\n  etypeId: 0,\n  params: r(),\n  traits: [],\n  ...e\n}), z = (e) => ({\n  price: 0,\n  id: 0,\n  name: \"\",\n  note: \"\",\n  iconIndex: 0,\n  description: \"\",\n  etypeId: 0,\n  wtypeId: 0,\n  params: r(),\n  traits: [],\n  damage: u(),\n  ...e\n}), P = (e) => ({\n  id: 0,\n  name: \"\",\n  note: \"\",\n  traits: [],\n  learnings: [],\n  params: r(),\n  expParams: [],\n  ...e\n}), u = (e) => ({\n  type: 0,\n  elementId: 0,\n  formula: \"0\",\n  variance: 20,\n  critical: !1,\n  ...e\n}), U = (e) => ({\n  id: 0,\n  name: \"\",\n  iconIndex: 0,\n  description: \"\",\n  note: \"\",\n  price: 0,\n  consumable: !1,\n  scope: 0,\n  occasion: 0,\n  speed: 0,\n  successRate: 100,\n  repeats: 1,\n  tpGain: 0,\n  hitType: 0,\n  animationId: 0,\n  damage: u(),\n  effects: [],\n  ...e\n}), X = (e) => ({\n  animationId: 0,\n  damage: u(),\n  description: \"\",\n  hitType: 0,\n  iconIndex: 0,\n  id: 0,\n  message1: \"\",\n  message2: \"\",\n  mpCost: 0,\n  name: \"\",\n  note: \"\",\n  occasion: 0,\n  repeats: 1,\n  requiredWtypeId1: 0,\n  requiredWtypeId2: 0,\n  scope: 0,\n  speed: 0,\n  stypeId: 0,\n  successRate: 100,\n  tpCost: 0,\n  tpGain: 0,\n  effects: [],\n  messageType: 0,\n  ...e\n}), Y = (e) => ({\n  id: 0,\n  name: \"\",\n  iconIndex: 0,\n  restriction: 0,\n  priority: 50,\n  motion: 0,\n  overlay: 0,\n  removeAtBattleEnd: !1,\n  removeByRestriction: !1,\n  autoRemovalTiming: 0,\n  minTurns: 1,\n  maxTurns: 1,\n  removeByDamage: !1,\n  chanceByDamage: 100,\n  removeByWalking: !1,\n  stepsToRemove: 100,\n  message1: \"\",\n  message2: \"\",\n  message3: \"\",\n  message4: \"\",\n  traits: [],\n  note: \"\",\n  ...e\n}), $ = (e) => ({\n  autoplayBgm: !0,\n  autoplayBgs: !1,\n  battleback1Name: \"\",\n  battleback2Name: \"\",\n  data: [],\n  disableDashing: !1,\n  displayName: \"\",\n  encounterList: [],\n  events: [],\n  height: 0,\n  note: \"\",\n  width: 0,\n  x: 0,\n  y: 0,\n  parallaxName: \"\",\n  parallaxLoopX: !1,\n  parallaxLoopY: !1,\n  parallaxShow: !1,\n  parallaxSx: 0,\n  parallaxSy: 0,\n  ...e\n}), j = (e) => ({\n  id: 0,\n  name: \"\",\n  note: \"\",\n  x: 0,\n  y: 0,\n  pages: [S()],\n  ...e\n}), w = (e) => ({\n  actorId: 0,\n  actorValid: !1,\n  itemId: 0,\n  itemValid: !1,\n  selfSwitchCh: \"\",\n  selfSwitchValid: !1,\n  switch1Id: 0,\n  switch1Valid: !1,\n  switch2Id: 0,\n  switch2Valid: !1,\n  variableId: 0,\n  variableValid: !1,\n  variableValue: 0,\n  ...e\n}), y = (e) => ({\n  characterIndex: 0,\n  characterName: \"\",\n  direction: 6,\n  pattern: 0,\n  tileId: 0,\n  ...e\n}), S = (e) => ({\n  conditions: w(),\n  image: y(),\n  moveRoute: {\n    list: [],\n    repeat: !1,\n    wait: !1,\n    skippable: !1\n  },\n  directionFix: !1,\n  moveFrequency: 0,\n  list: [],\n  ...e\n}), c = () => ({\n  name: \"\",\n  pan: 0,\n  pitch: 100,\n  volume: 90\n}), K = (e = {}) => ({\n  local: e.local ?? \"\",\n  gameTitle: e.gameTitle ?? \"\",\n  currencyUnit: e.currencyUnit ?? \"\",\n  title1Name: e.title1Name ?? \"\",\n  terms: e.terms ?? A(),\n  title2Name: e.title2Name ?? \"\",\n  optAutosave: e.optAutosave ?? !1,\n  attackMotions: e.attackMotions ?? [],\n  startMapId: e.startMapId ?? 0,\n  startX: e.startX ?? 0,\n  startY: e.startY ?? 0,\n  switches: e.switches ?? [],\n  windowTone: e.windowTone ?? [0, 0, 0, 0],\n  editMapId: e.editMapId ?? 0,\n  testTroopId: e.testTroopId ?? 0,\n  testBattlers: e.testBattlers ?? [],\n  versionId: e.versionId ?? 0,\n  advanced: e.advanced ?? D(),\n  armorTypes: e.armorTypes ?? [],\n  elements: e.elements ?? [],\n  variables: e.variables ?? [],\n  equipTypes: e.equipTypes ?? [],\n  sounds: e.sounds ?? R(),\n  titleBgm: e.titleBgm ?? c(),\n  gameoverMe: e.gameoverMe ?? c(),\n  battleBgm: e.battleBgm ?? c(),\n  defeatMe: e.defeatMe ?? c(),\n  victoryMe: e.victoryMe ?? c(),\n  battleback1Name: e.battleback1Name ?? \"\",\n  battleback2Name: e.battleback2Name ?? \"\",\n  battlerName: e.battlerName ?? \"\",\n  weaponTypes: e.weaponTypes ?? [],\n  skillTypes: e.skillTypes ?? [],\n  optDisplayTp: e.optDisplayTp ?? !1,\n  optDrawTitle: e.optDrawTitle ?? !1,\n  optExtraExp: e.optExtraExp ?? !1,\n  optFloorDeath: e.optFloorDeath ?? !1,\n  optFollowers: e.optFollowers ?? !1,\n  optKeyItemsNumber: e.optKeyItemsNumber ?? !1,\n  optSideView: e.optSideView ?? !1,\n  optSlipDeath: e.optSlipDeath ?? !1,\n  optTransparent: e.optTransparent ?? !1,\n  boat: e.boat ?? m(),\n  ship: e.ship ?? m(),\n  airship: e.airship ?? m(),\n  tileSize: e.tileSize ?? 0\n}), A = (e = {}) => ({\n  messages: k(e.messages ?? {}),\n  commands: M(e.commands ?? {}),\n  params: C(e.params ?? {}),\n  basic: E(e.basic ?? {})\n}), E = (e = {}) => [\n  e.level ?? \"\",\n  e.levelA ?? \"\",\n  e.hp ?? \"\",\n  e.hpA ?? \"\",\n  e.mp ?? \"\",\n  e.mpA ?? \"\",\n  e.tp ?? \"\",\n  e.tpA ?? \"\",\n  e.experience ?? \"\",\n  e.exp ?? \"\"\n], C = (e = {}) => [\n  e.mhp ?? \"\",\n  e.mmp ?? \"\",\n  e.atk ?? \"\",\n  e.def ?? \"\",\n  e.mat ?? \"\",\n  e.mdf ?? \"\",\n  e.agi ?? \"\",\n  e.luk ?? \"\",\n  e.hit ?? \"\",\n  e.eva ?? \"\"\n], M = (e = {}) => [\n  e.fight ?? \"\",\n  e.escape ?? \"\",\n  e.attack ?? \"\",\n  e.guard ?? \"\",\n  e.item ?? \"\",\n  e.skill ?? \"\",\n  e.equip ?? \"\",\n  e.status ?? \"\",\n  e.formation ?? \"\",\n  e.save ?? \"\",\n  e.gameEnd ?? \"\",\n  e.options ?? \"\",\n  e.weapon ?? \"\",\n  e.armor ?? \"\",\n  e.keyItem ?? \"\",\n  e.equip2 ?? \"\",\n  e.optimize ?? \"\",\n  e.clear ?? \"\",\n  e.newGame ?? \"\",\n  e.continue_ ?? \"\",\n  e.notUsed20 ?? \"\",\n  e.toTitle ?? \"\",\n  e.cancel ?? \"\",\n  e.notUsed23 ?? \"\",\n  e.buy ?? \"\",\n  e.sell ?? \"\"\n], k = (e = {}) => ({\n  alwaysDash: e.alwaysDash ?? \"\",\n  commandRemember: e.commandRemember ?? \"\",\n  touchUI: e.touchUI ?? \"\",\n  bgmVolume: e.bgmVolume ?? \"\",\n  bgsVolume: e.bgsVolume ?? \"\",\n  meVolume: e.meVolume ?? \"\",\n  seVolume: e.seVolume ?? \"\",\n  possession: e.possession ?? \"\",\n  expTotal: e.expTotal ?? \"\",\n  expNext: e.expNext ?? \"\",\n  saveMessage: e.saveMessage ?? \"\",\n  loadMessage: e.loadMessage ?? \"\",\n  file: e.file ?? \"\",\n  autosave: e.autosave ?? \"\",\n  partyName: e.partyName ?? \"\",\n  emerge: e.emerge ?? \"\",\n  preemptive: e.preemptive ?? \"\",\n  surprise: e.surprise ?? \"\",\n  escapeStart: e.escapeStart ?? \"\",\n  escapeFailure: e.escapeFailure ?? \"\",\n  victory: e.victory ?? \"\",\n  defeat: e.defeat ?? \"\",\n  obtainExp: e.obtainExp ?? \"\",\n  obtainGold: e.obtainGold ?? \"\",\n  obtainItem: e.obtainItem ?? \"\",\n  levelUp: e.levelUp ?? \"\",\n  obtainSkill: e.obtainSkill ?? \"\",\n  useItem: e.useItem ?? \"\",\n  criticalToEnemy: e.criticalToEnemy ?? \"\",\n  criticalToActor: e.criticalToActor ?? \"\",\n  actorDamage: e.actorDamage ?? \"\",\n  actorRecovery: e.actorRecovery ?? \"\",\n  actorGain: e.actorGain ?? \"\",\n  actorLoss: e.actorLoss ?? \"\",\n  actorDrain: e.actorDrain ?? \"\",\n  actorNoDamage: e.actorNoDamage ?? \"\",\n  actorNoHit: e.actorNoHit ?? \"\",\n  enemyDamage: e.enemyDamage ?? \"\",\n  enemyRecovery: e.enemyRecovery ?? \"\",\n  enemyGain: e.enemyGain ?? \"\",\n  enemyLoss: e.enemyLoss ?? \"\",\n  enemyDrain: e.enemyDrain ?? \"\",\n  enemyNoDamage: e.enemyNoDamage ?? \"\",\n  enemyNoHit: e.enemyNoHit ?? \"\",\n  evasion: e.evasion ?? \"\",\n  magicEvasion: e.magicEvasion ?? \"\",\n  magicReflection: e.magicReflection ?? \"\",\n  counterAttack: e.counterAttack ?? \"\",\n  substitute: e.substitute ?? \"\",\n  buffAdd: e.buffAdd ?? \"\",\n  debuffAdd: e.debuffAdd ?? \"\",\n  buffRemove: e.buffRemove ?? \"\",\n  actionFailure: e.actionFailure ?? \"\"\n}), D = (e = {}) => ({\n  gameId: e.gameId ?? 0,\n  screenWidth: e.screenWidth ?? 0,\n  screenHeight: e.screenHeight ?? 0,\n  uiAreaWidth: e.uiAreaWidth ?? 0,\n  uiAreaHeight: e.uiAreaHeight ?? 0,\n  windowOpacity: e.windowOpacity ?? 0,\n  screenScale: e.screenScale ?? 0,\n  numberFontFilename: e.numberFontFilename ?? \"\",\n  mainFontFilename: e.mainFontFilename ?? \"\",\n  fallbackFonts: e.fallbackFonts ?? \"\",\n  fontSize: e.fontSize ?? 0\n}), m = (e = {}) => ({\n  bgm: e.bgm ?? c(),\n  characterIndex: e.characterIndex ?? 0,\n  characterName: e.characterName ?? \"\",\n  startMapId: e.startMapId ?? 0,\n  startX: e.startX ?? 0,\n  startY: e.startY ?? 0\n}), R = (e = {}) => [\n  e.cursor ?? c(),\n  e.ok ?? c(),\n  e.cancel ?? c(),\n  e.buzzer ?? c(),\n  e.equip ?? c(),\n  e.save ?? c(),\n  e.load ?? c(),\n  e.battleStart ?? c(),\n  e.escape ?? c(),\n  e.enemyAttack ?? c(),\n  e.enemyDamage ?? c(),\n  e.enemyCollapse ?? c(),\n  e.bossCollapse1 ?? c(),\n  e.bossCollapse2 ?? c(),\n  e.actorDamage ?? c(),\n  e.actorCollapse ?? c(),\n  e.playRecovery ?? c(),\n  e.playMiss ?? c(),\n  e.playEvasion ?? c(),\n  e.playMagicEvasion ?? c(),\n  e.playReflection ?? c(),\n  e.shop ?? c(),\n  e.useItem ?? c(),\n  e.useSkill ?? c()\n];\nclass F {\n  constructor(a, t, n) {\n    this.command = a, this.index = t, this.array = n;\n  }\n  joinBody(a = `\n`) {\n    return this.body().map((t) => t.parameters[0]).join(a);\n  }\n  body() {\n    const a = [];\n    for (let t = this.index + 1; t < this.array.length; t++) {\n      const n = this.array[t];\n      if (n.code === 401)\n        a.push(n);\n      else\n        break;\n    }\n    return a;\n  }\n  head() {\n    return this.command;\n  }\n  speakerName() {\n    return this.command.parameters[4];\n  }\n}\nconst Z = (e, a) => e.map((t, n, s) => {\n  switch (t.code) {\n    case T:\n      return a.showMessage(new F(t, n, s));\n    case x:\n      return a.showChoices(t, n, s);\n    case N:\n      return a.showChoicesItem(t, n, s);\n    case I:\n      return a.showScrollingText(t, n, s);\n    case v:\n      return a.changeName(t, n, s);\n    case b:\n      return a.changeProfile(t, n, s);\n    case p:\n      return a.changeNickname(t, n, s);\n    case f:\n      return a.commentBody(t, n, s);\n    default:\n      return a.other(t, n, s);\n  }\n}), d = (e, a) => `<${e}:${a}>`, l = () => /<([^<>:]+):([^>]*)>/g, J = (e, a) => o(e.note, (t, n) => a(t, n, e)), Q = (e) => o(e, (a, t) => [a, t]), o = (e, a) => {\n  const t = l(), n = [];\n  let s;\n  for (; (s = t.exec(e)) !== null; )\n    n.push(a(s[1], s[2]));\n  return n;\n}, ee = (e, a) => e.replace(l(), (t, n, s) => {\n  const i = a(n, s);\n  return d(n, i);\n}), ae = (e, a) => {\n  const t = l();\n  let n;\n  for (; (n = t.exec(e)) !== null; )\n    if (n[1] === a)\n      return n[2];\n}, te = (e, a, t) => {\n  const n = l();\n  return e.replace(n, (s, i) => i === a ? d(i, t) : s);\n}, ne = (e) => `code:${e}`, V = \"N\", B = \"V\", g = (e, a) => `\\\\${e}[${a}]`, H = (e) => g(V, e.id), ce = (e) => e.map((a) => ({\n  controlChar: H(a),\n  text: a.name\n})), se = (e) => e.variables.map((a, t) => ({\n  text: a || \"\",\n  controlChar: g(B, t)\n})).filter((a) => a.text !== \"\"), G = /* @__PURE__ */ new Set([\n  \"px\",\n  \"py\",\n  \"x\",\n  \"y\",\n  \"v\",\n  \"n\",\n  \"p\",\n  \"g\",\n  \"c\",\n  \"i\",\n  \"fs\"\n]), ie = (e, a = G) => {\n  const t = /\\\\([A-Za-z]+)\\[(\\d+)]/g, n = [];\n  let s;\n  for (; (s = t.exec(e)) !== null; ) {\n    const i = s[1].toLowerCase(), h = parseInt(s[2], 10);\n    a.has(i) && n.push({ char: s[1], id: h });\n  }\n  return n;\n}, L = (e, a, t) => a.map((n) => t(n, e[n], e)), re = (e, a, t) => L(e, a, t);\nexport {\n  F as MessageProxy,\n  ne as codeInfoText,\n  W as constructActor,\n  q as constructArmor,\n  P as constructClass,\n  u as constructDamage,\n  _ as constructEnemy,\n  U as constructItem,\n  r as constructParamArray,\n  X as constructSkill,\n  Y as constructState,\n  z as constructWeapon,\n  D as createAdvanced,\n  c as createAudio,\n  E as createBasicTerms,\n  M as createCommandsArray,\n  w as createCondtion,\n  g as createControlCharFormat,\n  S as createEventPage,\n  $ as createMap,\n  j as createMapEvent,\n  y as createMapEventImage,\n  k as createMessages,\n  d as createNoteEntity,\n  C as createParamNamesArray,\n  K as createSystemData,\n  R as createSystemSoundsArray,\n  A as createTerms,\n  m as createVehicle,\n  H as fromActor,\n  ce as fromActors,\n  se as fromSystem,\n  ie as getControlChars,\n  ae as getNoteValue,\n  l as makeRegex,\n  Z as mapTextCommand,\n  L as pickPropertys,\n  re as pickString,\n  Q as readNote,\n  o as readNoteEx,\n  J as readNoteObject,\n  ee as replaceNote,\n  te as setNoteValue\n};\n//# sourceMappingURL=rpg-data-tools.es.js.map\n","import { constructItem } from \"@sigureya/rpg-data-tools\";\r\n\r\nexport const item = constructItem({ name: \"やくそう\", price: 50 });\r\n"],"names":["u","U","item","constructItem"],"mappings":"AACK,MA+DDA,IAAI,CAAC,OAAO;AAAA,EACd,MAAM;AAAA,EACN,WAAW;AAAA,EACX,SAAS;AAAA,EACT,UAAU;AAAA,EACV,UAAU;AAAA,EACV,GAAG;AACL,IAAIC,IAAI,CAAC,OAAO;AAAA,EACd,IAAI;AAAA,EACJ,MAAM;AAAA,EACN,WAAW;AAAA,EACX,aAAa;AAAA,EACb,MAAM;AAAA,EACN,OAAO;AAAA,EACP,YAAY;AAAA,EACZ,OAAO;AAAA,EACP,UAAU;AAAA,EACV,OAAO;AAAA,EACP,aAAa;AAAA,EACb,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,aAAa;AAAA,EACb,QAAQD,EAAG;AAAA,EACX,SAAS,CAAE;AAAA,EACX,GAAG;AACL,ICxFaE,IAAOC,EAAc,EAAE,MAAM,QAAQ,OAAO,GAAI,CAAA;","x_google_ignoreList":[0]}