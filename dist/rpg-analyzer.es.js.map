{"version":3,"file":"rpg-analyzer.es.js","sources":["../node_modules/@sigureya/rpgtypes/dist/rpgtypes.es.js","../node_modules/@sigureya/rpg-data-tools/dist/rpg-data-tools.es.js","../src/extract/audio/eventCommand/fromCommand.ts","../src/extract/audio/extract.ts","../src/extract/audio/system/system.ts","../src/extract/text/mainData/mainData.ts","../src/extract/text/eventCommand/getTextFromCommand.ts","../src/extract/text/events.ts","../src/extract/image/eventCommand/fromEventCommands.ts","../src/extract/image/mainData/mainData.ts","../src/extract/image/system/system.ts"],"sourcesContent":["const E = 0, _ = 1, O = 2, s = 3, t = 32, T = 48, R = 0, c = 101, n = 401, o = 102, A = 402, N = 103, C = 104, S = 105, I = 405, L = 108, U = 408, M = 109, G = 111, H = 411, D = 112, F = 113, P = 115, B = 117, V = 118, W = 119, e = 121, Y = 122, a = 123, K = 124, l = 125, X = 126, b = 127, i = 128, r = 129, m = 132, p = 133, g = 134, k = 135, v = 136, x = 137, J = 138, f = 139, h = 140, u = 201, y = 202, Q = 203, Z = 204, d = 205, j = 206, q = 211, w = 212, z = 213, $ = 214, EE = 216, _E = 217, OE = 221, sE = 222, tE = 223, TE = 224, RE = 225, cE = 230, nE = 231, oE = 232, AE = 233, NE = 234, CE = 235, SE = 236, IE = 241, LE = 242, UE = 243, ME = 244, GE = 245, HE = 246, DE = 249, FE = 250, PE = 251, BE = 261, VE = 282, WE = 283, eE = 284, YE = 285, aE = 301, KE = 302, lE = 605, XE = 303, bE = 311, iE = 312, rE = 313, mE = 314, pE = 315, gE = 320, kE = 321, vE = 322, xE = 323, JE = 324, fE = 325, hE = 352, uE = 353, yE = 354, QE = 355, ZE = 655, dE = 356, jE = 357, qE = 0, wE = 1, zE = 2, $E = 3, E_ = 4, __ = 5, O_ = 6, s_ = 7, t_ = 8, T_ = 9, R_ = 10, c_ = 11, n_ = 12, o_ = 13, A_ = 14, N_ = 15, C_ = 16, S_ = 17, I_ = 18, L_ = 19, U_ = 20, M_ = 21, G_ = 22, H_ = 23, D_ = 24, F_ = 25, P_ = 26, B_ = 27, V_ = 28, W_ = 29, e_ = 30, Y_ = 31, a_ = 32, K_ = 33, l_ = 34, X_ = 35, b_ = 36, i_ = 37, r_ = 38, m_ = 39, p_ = 40, g_ = 41, k_ = 42, v_ = 43, x_ = 44, J_ = 45, f_ = \"bgm\", h_ = \"se\", u_ = \"me\", y_ = \"bgs\", Q_ = \"battlebacks1\", Z_ = \"battlebacks2\", d_ = \"characters\", j_ = \"enemies\", q_ = \"faces\", w_ = \"parallaxes\", z_ = \"pictures\", $_ = \"sv_actors\", EO = \"sv_enemies\", _O = \"system\", OO = \"tilesets\", sO = \"titles1\", tO = \"titles2\";\nexport {\n  aE as BATTLE_PROCESSING,\n  vE as CHANGE_ACTOR_IMAGES,\n  i as CHANGE_ARMORS,\n  WE as CHANGE_BATTLE_BACKGROUND,\n  m as CHANGE_BATTLE_BGM,\n  kE as CHANGE_CLASS,\n  f as CHANGE_DEFEAT_ME,\n  v as CHANGE_ENCOUNTER,\n  pE as CHANGE_EXP,\n  x as CHANGE_FORMATION_ACCESS,\n  l as CHANGE_GOLD,\n  bE as CHANGE_HP,\n  X as CHANGE_ITEMS,\n  k as CHANGE_MENU_ACCESS,\n  iE as CHANGE_MP,\n  gE as CHANGE_NAME,\n  JE as CHANGE_NICKNAME,\n  eE as CHANGE_PARALLAX,\n  r as CHANGE_PARTY_MEMBER,\n  EE as CHANGE_PLAYER_FOLLOWERS,\n  fE as CHANGE_PROFILE,\n  g as CHANGE_SAVE_ACCESS,\n  VE as CHANGE_TILESET,\n  rE as CHANGE_TP,\n  q as CHANGE_TRANSPARENCY,\n  xE as CHANGE_VEHICLE_IMAGE,\n  h as CHANGE_VEHICLE_ME,\n  p as CHANGE_VICTORY_ME,\n  b as CHANGE_WEAPONS,\n  J as CHANGE_WINDOW_COLOR,\n  L as COMMENT,\n  U as COMMENT_BODY,\n  B as COMMON_EVENT,\n  G as CONDITIONAL_BRANCH,\n  H as CONDITIONAL_BRANCH_ELSE,\n  a as CONTROL_SELF_SWITCH,\n  e as CONTROL_SWITCHES,\n  K as CONTROL_TIMER,\n  Y as CONTROL_VARIABLES,\n  $ as ERASE_EVENT,\n  CE as ERASE_PICTURE,\n  P as EXIT_EVENT_PROCESSING,\n  sE as FADEIN_SCREEN,\n  LE as FADEOUT_BGM,\n  HE as FADEOUT_BGS,\n  OE as FADEOUT_SCREEN,\n  E as FLAG_ID_AUTO_BATTLE,\n  _ as FLAG_ID_GUARD,\n  s as FLAG_ID_PRESERVE_TP,\n  O as FLAG_ID_SUBSTITUTE,\n  TE as FLASH_SCREEN,\n  f_ as FOLDER_AUDIO_BGM,\n  y_ as FOLDER_AUDIO_BGS,\n  u_ as FOLDER_AUDIO_ME,\n  h_ as FOLDER_AUDIO_SE,\n  Q_ as FOLDER_IMG_BATTLEBACK1,\n  Z_ as FOLDER_IMG_BATTLEBACK2,\n  d_ as FOLDER_IMG_CHACTERS,\n  j_ as FOLDER_IMG_ENEMIES,\n  q_ as FOLDER_IMG_FACES,\n  w_ as FOLDER_IMG_PARALLACES,\n  z_ as FOLDER_IMG_PICTURES,\n  $_ as FOLDER_IMG_SV_ACTORS,\n  EO as FOLDER_IMG_SV_ENEMIES,\n  _O as FOLDER_IMG_SYSTEM,\n  OO as FOLDER_IMG_TILESETS,\n  sO as FOLDER_IMG_TITLES1,\n  tO as FOLDER_IMG_TITLES2,\n  uE as GAME_OVER,\n  _E as GATHER_FOLLOWERS,\n  YE as GET_LOCATION_INFO,\n  j as GET_ONOFF_VEHICLE,\n  t as ICON_BUFF_START,\n  T as ICON_DEBUFF_START,\n  N as INPUT_NUMBER,\n  V as LABEL,\n  W as LABEL_JUMP,\n  D as LOOP,\n  F as LOOP_BREAK,\n  oE as MOVE_PICTURE,\n  XE as NAME_INPUT_PROCESSING,\n  R as NO_OPERATION,\n  hE as OPEN_SAVE_SCREEN,\n  IE as PLAY_BGM,\n  GE as PLAY_BGS,\n  DE as PLAY_ME,\n  BE as PLAY_MOVIE,\n  FE as PLAY_SE,\n  dE as PLUGIN_COMMAND_MV,\n  jE as PLUGIN_COMMAND_MZ,\n  mE as RECOVER_ALL,\n  ME as RESUME_BGM,\n  yE as RETURN_TO_TITLE_SCREEN,\n  AE as ROTATE_PICTURE,\n  v_ as ROUTE_CHANGE_BLEND_MODE,\n  e_ as ROUTE_CHANGE_FREQ,\n  g_ as ROUTE_CHANGE_IMAGE,\n  k_ as ROUTE_CHANGE_OPACITY,\n  W_ as ROUTE_CHANGE_SPEED,\n  b_ as ROUTE_DIR_FIX_OFF,\n  X_ as ROUTE_DIR_FIX_ON,\n  qE as ROUTE_END,\n  A_ as ROUTE_JUMP,\n  c_ as ROUTE_MOVE_AWAY,\n  o_ as ROUTE_MOVE_BACKWARD,\n  wE as ROUTE_MOVE_DOWN,\n  n_ as ROUTE_MOVE_FORWARD,\n  zE as ROUTE_MOVE_LEFT,\n  __ as ROUTE_MOVE_LOWER_L,\n  O_ as ROUTE_MOVE_LOWER_R,\n  T_ as ROUTE_MOVE_RANDOM,\n  $E as ROUTE_MOVE_RIGHT,\n  R_ as ROUTE_MOVE_TOWARD,\n  E_ as ROUTE_MOVE_UP,\n  s_ as ROUTE_MOVE_UPPER_L,\n  t_ as ROUTE_MOVE_UPPER_R,\n  x_ as ROUTE_PLAY_SE,\n  J_ as ROUTE_SCRIPT,\n  l_ as ROUTE_STEP_ANIME_OFF,\n  K_ as ROUTE_STEP_ANIME_ON,\n  V_ as ROUTE_SWITCH_OFF,\n  B_ as ROUTE_SWITCH_ON,\n  r_ as ROUTE_THROUGH_OFF,\n  i_ as ROUTE_THROUGH_ON,\n  p_ as ROUTE_TRANSPARENT_OFF,\n  m_ as ROUTE_TRANSPARENT_ON,\n  G_ as ROUTE_TURN_180D,\n  M_ as ROUTE_TURN_90D_L,\n  U_ as ROUTE_TURN_90D_R,\n  H_ as ROUTE_TURN_90D_R_L,\n  P_ as ROUTE_TURN_AWAY,\n  C_ as ROUTE_TURN_DOWN,\n  S_ as ROUTE_TURN_LEFT,\n  D_ as ROUTE_TURN_RANDOM,\n  I_ as ROUTE_TURN_RIGHT,\n  F_ as ROUTE_TURN_TOWARD,\n  L_ as ROUTE_TURN_UP,\n  N_ as ROUTE_WAIT,\n  a_ as ROUTE_WALK_ANIME_OFF,\n  Y_ as ROUTE_WALK_ANIME_ON,\n  UE as SAVE_BGM,\n  QE as SCRIPT_EVAL,\n  ZE as SCRIPT_EVAL_BODY,\n  Z as SCROLL_MAP,\n  C as SELECT_ITEM,\n  Q as SET_EVENT_LOCATION,\n  d as SET_MOVEMENT_ROUTE,\n  y as SET_VEHICLE_LOCATION,\n  SE as SET_WEATHER_EFFECT,\n  RE as SHAKE_SCREEN,\n  KE as SHOP_PROCESSING,\n  lE as SHOP_PROCESSING_BODY,\n  w as SHOW_ANIMATION,\n  z as SHOW_BALLOON_ICON,\n  o as SHOW_CHOICES,\n  A as SHOW_CHOICES_ITEM,\n  c as SHOW_MESSAGE,\n  n as SHOW_MESSAGE_BODY,\n  nE as SHOW_PICTURE,\n  S as SHOW_SCROLLING_TEXT,\n  I as SHOW_SCROLLING_TEXT_BODY,\n  M as SKIP,\n  PE as STOP_SE,\n  NE as TINT_PICTURE,\n  tE as TINT_SCREEN,\n  u as TRANSFER_PLAYER,\n  cE as WAIT\n};\n//# sourceMappingURL=rpgtypes.es.js.map\n","import * as r from \"@sigureya/rpgtypes\";\nimport { COMMENT as f, COMMENT_BODY as W, SCRIPT_EVAL as S, SCRIPT_EVAL_BODY as F, SHOW_MESSAGE as A, SHOW_MESSAGE_BODY as Y, SHOW_SCROLLING_TEXT as l, SHOW_SCROLLING_TEXT_BODY as N, CHANGE_NICKNAME as z, CHANGE_PROFILE as U, CHANGE_NAME as X, SHOW_CHOICES_ITEM as q, SHOW_CHOICES as x } from \"@sigureya/rpgtypes\";\nconst u = () => [0, 0, 0, 0, 0, 0, 0, 0], De = (e) => ({\n  id: 0,\n  name: \"\",\n  nickname: \"\",\n  profile: \"\",\n  note: \"\",\n  classId: 0,\n  initialLevel: 1,\n  maxLevel: 99,\n  characterIndex: 0,\n  characterName: \"\",\n  faceIndex: 0,\n  faceName: \"\",\n  battlerName: \"\",\n  traits: [],\n  equips: [],\n  ...e\n}), ke = (e) => ({\n  battlerHue: 0,\n  id: 0,\n  name: \"\",\n  note: \"\",\n  battlerName: \"\",\n  traits: [],\n  params: u(),\n  exp: 0,\n  gold: 0,\n  dropItems: [],\n  actions: [],\n  ...e\n}), Pe = (e) => ({\n  price: 0,\n  id: 0,\n  name: \"\",\n  note: \"\",\n  iconIndex: 0,\n  description: \"\",\n  etypeId: 0,\n  params: u(),\n  traits: [],\n  ...e\n}), Ve = (e) => ({\n  price: 0,\n  id: 0,\n  name: \"\",\n  note: \"\",\n  iconIndex: 0,\n  description: \"\",\n  etypeId: 0,\n  wtypeId: 0,\n  params: u(),\n  traits: [],\n  damage: p(),\n  ...e\n}), We = (e) => ({\n  id: 0,\n  name: \"\",\n  note: \"\",\n  traits: [],\n  learnings: [],\n  params: u(),\n  expParams: [],\n  ...e\n}), p = (e) => ({\n  type: 0,\n  elementId: 0,\n  formula: \"0\",\n  variance: 20,\n  critical: !1,\n  ...e\n}), Fe = (e) => ({\n  id: 0,\n  name: \"\",\n  iconIndex: 0,\n  description: \"\",\n  note: \"\",\n  price: 0,\n  consumable: !1,\n  scope: 0,\n  occasion: 0,\n  speed: 0,\n  successRate: 100,\n  repeats: 1,\n  tpGain: 0,\n  hitType: 0,\n  animationId: 0,\n  damage: p(),\n  effects: [],\n  ...e\n}), Ye = (e) => ({\n  animationId: 0,\n  damage: p(),\n  description: \"\",\n  hitType: 0,\n  iconIndex: 0,\n  id: 0,\n  message1: \"\",\n  message2: \"\",\n  mpCost: 0,\n  name: \"\",\n  note: \"\",\n  occasion: 0,\n  repeats: 1,\n  requiredWtypeId1: 0,\n  requiredWtypeId2: 0,\n  scope: 0,\n  speed: 0,\n  stypeId: 0,\n  successRate: 100,\n  tpCost: 0,\n  tpGain: 0,\n  effects: [],\n  messageType: 0,\n  ...e\n}), ze = (e) => ({\n  id: 0,\n  name: \"\",\n  iconIndex: 0,\n  restriction: 0,\n  priority: 50,\n  motion: 0,\n  overlay: 0,\n  removeAtBattleEnd: !1,\n  removeByRestriction: !1,\n  autoRemovalTiming: 0,\n  minTurns: 1,\n  maxTurns: 1,\n  removeByDamage: !1,\n  chanceByDamage: 100,\n  removeByWalking: !1,\n  stepsToRemove: 100,\n  message1: \"\",\n  message2: \"\",\n  message3: \"\",\n  message4: \"\",\n  traits: [],\n  note: \"\",\n  ...e\n}), Ue = (e) => ({\n  autoplayBgm: !0,\n  autoplayBgs: !1,\n  battleback1Name: \"\",\n  battleback2Name: \"\",\n  data: [],\n  disableDashing: !1,\n  displayName: \"\",\n  encounterList: [],\n  events: [],\n  height: 0,\n  note: \"\",\n  width: 0,\n  x: 0,\n  y: 0,\n  parallaxName: \"\",\n  parallaxLoopX: !1,\n  parallaxLoopY: !1,\n  parallaxShow: !1,\n  parallaxSx: 0,\n  parallaxSy: 0,\n  ...e\n}), Xe = (e) => ({\n  id: 0,\n  name: \"\",\n  note: \"\",\n  x: 0,\n  y: 0,\n  pages: [$()],\n  ...e\n}), K = (e) => ({\n  actorId: 0,\n  actorValid: !1,\n  itemId: 0,\n  itemValid: !1,\n  selfSwitchCh: \"\",\n  selfSwitchValid: !1,\n  switch1Id: 0,\n  switch1Valid: !1,\n  switch2Id: 0,\n  switch2Valid: !1,\n  variableId: 0,\n  variableValid: !1,\n  variableValue: 0,\n  ...e\n}), j = (e) => ({\n  characterIndex: 0,\n  characterName: \"\",\n  direction: 6,\n  pattern: 0,\n  tileId: 0,\n  ...e\n}), $ = (e) => ({\n  conditions: K(),\n  image: j(),\n  moveRoute: {\n    list: [],\n    repeat: !1,\n    wait: !1,\n    skippable: !1\n  },\n  directionFix: !1,\n  moveFrequency: 0,\n  list: [],\n  ...e\n}), a = () => ({\n  name: \"\",\n  pan: 0,\n  pitch: 100,\n  volume: 90\n}), qe = (e = {}) => ({\n  local: e.local ?? \"\",\n  gameTitle: e.gameTitle ?? \"\",\n  currencyUnit: e.currencyUnit ?? \"\",\n  title1Name: e.title1Name ?? \"\",\n  terms: e.terms ?? y(),\n  title2Name: e.title2Name ?? \"\",\n  optAutosave: e.optAutosave ?? !1,\n  attackMotions: e.attackMotions ?? [],\n  startMapId: e.startMapId ?? 0,\n  startX: e.startX ?? 0,\n  startY: e.startY ?? 0,\n  switches: e.switches ?? [],\n  windowTone: e.windowTone ?? [0, 0, 0, 0],\n  editMapId: e.editMapId ?? 0,\n  testTroopId: e.testTroopId ?? 0,\n  testBattlers: e.testBattlers ?? [],\n  versionId: e.versionId ?? 0,\n  advanced: e.advanced ?? ee(),\n  armorTypes: e.armorTypes ?? [],\n  elements: e.elements ?? [],\n  variables: e.variables ?? [],\n  equipTypes: e.equipTypes ?? [],\n  sounds: e.sounds ?? te(),\n  titleBgm: e.titleBgm ?? a(),\n  gameoverMe: e.gameoverMe ?? a(),\n  battleBgm: e.battleBgm ?? a(),\n  defeatMe: e.defeatMe ?? a(),\n  victoryMe: e.victoryMe ?? a(),\n  battleback1Name: e.battleback1Name ?? \"\",\n  battleback2Name: e.battleback2Name ?? \"\",\n  battlerName: e.battlerName ?? \"\",\n  weaponTypes: e.weaponTypes ?? [],\n  skillTypes: e.skillTypes ?? [],\n  optDisplayTp: e.optDisplayTp ?? !1,\n  optDrawTitle: e.optDrawTitle ?? !1,\n  optExtraExp: e.optExtraExp ?? !1,\n  optFloorDeath: e.optFloorDeath ?? !1,\n  optFollowers: e.optFollowers ?? !1,\n  optKeyItemsNumber: e.optKeyItemsNumber ?? !1,\n  optSideView: e.optSideView ?? !1,\n  optSlipDeath: e.optSlipDeath ?? !1,\n  optTransparent: e.optTransparent ?? !1,\n  boat: e.boat ?? d(),\n  ship: e.ship ?? d(),\n  airship: e.airship ?? d(),\n  tileSize: e.tileSize ?? 0\n}), y = (e = {}) => ({\n  messages: b(e.messages ?? {}),\n  commands: Q(e.commands ?? {}),\n  params: Z(e.params ?? {}),\n  basic: J(e.basic ?? {})\n}), J = (e = {}) => [\n  e.level ?? \"\",\n  e.levelA ?? \"\",\n  e.hp ?? \"\",\n  e.hpA ?? \"\",\n  e.mp ?? \"\",\n  e.mpA ?? \"\",\n  e.tp ?? \"\",\n  e.tpA ?? \"\",\n  e.experience ?? \"\",\n  e.exp ?? \"\"\n], Z = (e = {}) => [\n  e.mhp ?? \"\",\n  e.mmp ?? \"\",\n  e.atk ?? \"\",\n  e.def ?? \"\",\n  e.mat ?? \"\",\n  e.mdf ?? \"\",\n  e.agi ?? \"\",\n  e.luk ?? \"\",\n  e.hit ?? \"\",\n  e.eva ?? \"\"\n], Q = (e = {}) => [\n  e.fight ?? \"\",\n  e.escape ?? \"\",\n  e.attack ?? \"\",\n  e.guard ?? \"\",\n  e.item ?? \"\",\n  e.skill ?? \"\",\n  e.equip ?? \"\",\n  e.status ?? \"\",\n  e.formation ?? \"\",\n  e.save ?? \"\",\n  e.gameEnd ?? \"\",\n  e.options ?? \"\",\n  e.weapon ?? \"\",\n  e.armor ?? \"\",\n  e.keyItem ?? \"\",\n  e.equip2 ?? \"\",\n  e.optimize ?? \"\",\n  e.clear ?? \"\",\n  e.newGame ?? \"\",\n  e.continue_ ?? \"\",\n  e.notUsed20 ?? \"\",\n  e.toTitle ?? \"\",\n  e.cancel ?? \"\",\n  e.notUsed23 ?? \"\",\n  e.buy ?? \"\",\n  e.sell ?? \"\"\n], b = (e = {}) => ({\n  alwaysDash: e.alwaysDash ?? \"\",\n  commandRemember: e.commandRemember ?? \"\",\n  touchUI: e.touchUI ?? \"\",\n  bgmVolume: e.bgmVolume ?? \"\",\n  bgsVolume: e.bgsVolume ?? \"\",\n  meVolume: e.meVolume ?? \"\",\n  seVolume: e.seVolume ?? \"\",\n  possession: e.possession ?? \"\",\n  expTotal: e.expTotal ?? \"\",\n  expNext: e.expNext ?? \"\",\n  saveMessage: e.saveMessage ?? \"\",\n  loadMessage: e.loadMessage ?? \"\",\n  file: e.file ?? \"\",\n  autosave: e.autosave ?? \"\",\n  partyName: e.partyName ?? \"\",\n  emerge: e.emerge ?? \"\",\n  preemptive: e.preemptive ?? \"\",\n  surprise: e.surprise ?? \"\",\n  escapeStart: e.escapeStart ?? \"\",\n  escapeFailure: e.escapeFailure ?? \"\",\n  victory: e.victory ?? \"\",\n  defeat: e.defeat ?? \"\",\n  obtainExp: e.obtainExp ?? \"\",\n  obtainGold: e.obtainGold ?? \"\",\n  obtainItem: e.obtainItem ?? \"\",\n  levelUp: e.levelUp ?? \"\",\n  obtainSkill: e.obtainSkill ?? \"\",\n  useItem: e.useItem ?? \"\",\n  criticalToEnemy: e.criticalToEnemy ?? \"\",\n  criticalToActor: e.criticalToActor ?? \"\",\n  actorDamage: e.actorDamage ?? \"\",\n  actorRecovery: e.actorRecovery ?? \"\",\n  actorGain: e.actorGain ?? \"\",\n  actorLoss: e.actorLoss ?? \"\",\n  actorDrain: e.actorDrain ?? \"\",\n  actorNoDamage: e.actorNoDamage ?? \"\",\n  actorNoHit: e.actorNoHit ?? \"\",\n  enemyDamage: e.enemyDamage ?? \"\",\n  enemyRecovery: e.enemyRecovery ?? \"\",\n  enemyGain: e.enemyGain ?? \"\",\n  enemyLoss: e.enemyLoss ?? \"\",\n  enemyDrain: e.enemyDrain ?? \"\",\n  enemyNoDamage: e.enemyNoDamage ?? \"\",\n  enemyNoHit: e.enemyNoHit ?? \"\",\n  evasion: e.evasion ?? \"\",\n  magicEvasion: e.magicEvasion ?? \"\",\n  magicReflection: e.magicReflection ?? \"\",\n  counterAttack: e.counterAttack ?? \"\",\n  substitute: e.substitute ?? \"\",\n  buffAdd: e.buffAdd ?? \"\",\n  debuffAdd: e.debuffAdd ?? \"\",\n  buffRemove: e.buffRemove ?? \"\",\n  actionFailure: e.actionFailure ?? \"\"\n}), ee = (e = {}) => ({\n  gameId: e.gameId ?? 0,\n  screenWidth: e.screenWidth ?? 0,\n  screenHeight: e.screenHeight ?? 0,\n  uiAreaWidth: e.uiAreaWidth ?? 0,\n  uiAreaHeight: e.uiAreaHeight ?? 0,\n  windowOpacity: e.windowOpacity ?? 0,\n  screenScale: e.screenScale ?? 0,\n  numberFontFilename: e.numberFontFilename ?? \"\",\n  mainFontFilename: e.mainFontFilename ?? \"\",\n  fallbackFonts: e.fallbackFonts ?? \"\",\n  fontSize: e.fontSize ?? 0\n}), d = (e = {}) => ({\n  bgm: e.bgm ?? a(),\n  characterIndex: e.characterIndex ?? 0,\n  characterName: e.characterName ?? \"\",\n  startMapId: e.startMapId ?? 0,\n  startX: e.startX ?? 0,\n  startY: e.startY ?? 0\n}), te = (e = {}) => [\n  e.cursor ?? a(),\n  e.ok ?? a(),\n  e.cancel ?? a(),\n  e.buzzer ?? a(),\n  e.equip ?? a(),\n  e.save ?? a(),\n  e.load ?? a(),\n  e.battleStart ?? a(),\n  e.escape ?? a(),\n  e.enemyAttack ?? a(),\n  e.enemyDamage ?? a(),\n  e.enemyCollapse ?? a(),\n  e.bossCollapse1 ?? a(),\n  e.bossCollapse2 ?? a(),\n  e.actorDamage ?? a(),\n  e.actorCollapse ?? a(),\n  e.playRecovery ?? a(),\n  e.playMiss ?? a(),\n  e.playEvasion ?? a(),\n  e.playMagicEvasion ?? a(),\n  e.playReflection ?? a(),\n  e.shop ?? a(),\n  e.useItem ?? a(),\n  e.useSkill ?? a()\n], E = (e, n) => n ? e === n.code : !1, ne = \"MessageHeader invalid command\", xe = \"Script invalid command\", se = \"Invalid Head\", g = (e) => typeof e[0] == \"string\" && e.length === 1, Ke = (e, n) => n ? e === n.code && g(n.parameters) : !1, m = (e, n, t) => {\n  const s = [];\n  for (let o = t; o < n.length; o++) {\n    const i = n[o];\n    if (E(e, i) && g(i.parameters))\n      s.push({\n        code: e,\n        indent: i.indent,\n        parameters: [i.parameters[0]]\n      });\n    else\n      break;\n  }\n  return s;\n}, I = (e, n, t) => {\n  const s = e[n];\n  if (s && E(t, s) && g(s.parameters))\n    return {\n      code: t,\n      indent: s.indent,\n      parameters: [s.parameters[0]]\n    };\n  throw new Error(se, { cause: s });\n}, re = (e, n) => ({\n  head: I(e, n, f),\n  bodys: m(W, e, n + 1)\n}), ce = (e, n) => ({\n  head: I(e, n, S),\n  bodys: m(F, e, n + 1)\n}), ae = (e, n) => {\n  const t = e[n];\n  if (t && oe(t))\n    return t;\n  throw new Error(ne, { cause: t });\n}, oe = (e) => !e || e.code !== A || ![4, 5].includes(e.parameters.length) ? !1 : typeof e.parameters[0] == \"string\" && typeof e.parameters[1] == \"number\" && typeof e.parameters[2] == \"number\" && typeof e.parameters[3] == \"number\", ie = (e, n) => ({\n  head: ae(e, n),\n  bodys: m(Y, e, n + 1)\n}), ue = \"ScrollTextHeader invalid command\", me = (e, n) => {\n  const t = e[n];\n  if (E(l, t))\n    return t;\n  const s = {\n    headCode: l,\n    bodyCode: N,\n    index: n\n  };\n  throw new Error(ue, { cause: s });\n}, he = (e, n) => ({\n  head: me(e, n),\n  bodys: m(N, e, n + 1)\n}), de = (e, n = `\n`) => e.map((t) => t.parameters[0]).join(n);\nclass _ {\n  constructor(n, t) {\n    this.header = n, this.bodies = t;\n  }\n  getBodyText(n = `\n`) {\n    return de(this.getExpandedBodies(), n);\n  }\n  jopinHedderAndBody() {\n    return [this.header, ...this.bodies];\n  }\n  joinCommandBodies() {\n    return this.getExpandedBodies();\n  }\n}\nclass C extends _ {\n  constructor(n, t, s) {\n    super(t, s), this.bodyCode = n;\n  }\n  getExpandedBodies() {\n    return this.bodies;\n  }\n  normalizedCommands() {\n    const n = {\n      ...this.header,\n      code: this.header.code,\n      indent: this.header.indent,\n      parameters: [...this.header.parameters]\n    };\n    return this.bodies.length === 0 ? [n] : [n, this.mergedBody()];\n  }\n  mergedBody() {\n    return {\n      code: this.bodyCode,\n      indent: this.header.indent,\n      parameters: [this.getBodyText()]\n    };\n  }\n}\nclass v extends _ {\n  getExpandedBodies() {\n    return [this.header, ...this.bodies];\n  }\n  mergedBody() {\n    return {\n      code: this.header.code,\n      indent: this.header.indent,\n      parameters: [this.getBodyText()]\n    };\n  }\n  normalizedCommands() {\n    return [this.mergedBody()];\n  }\n}\nconst le = \"選択肢ヘルプ\", pe = (e) => e.parameters[0] === le, Ee = (e, n = []) => new C(401, e, n), ge = (e, n = []) => new C(405, e, n), Ce = (e, n = []) => pe(e) ? new C(\n  408,\n  e,\n  n\n) : new v(\n  e,\n  n\n), Te = (e, n = []) => new v(e, n), M = (e, n, t) => {\n  const s = ie(e, n), o = Ee(s.head, s.bodys);\n  return t(o);\n}, O = (e, n, t) => {\n  const s = he(e, n), o = ge(s.head, s.bodys);\n  return t(o);\n}, R = (e, n, t) => {\n  const s = re(e, n), o = Ce(s.head, s.bodys);\n  return t(o);\n}, w = (e, n, t) => {\n  const s = ce(e, n), o = Te(s.head, s.bodys);\n  return t(o);\n}, fe = (e, n, t) => {\n  const s = e[n];\n  switch (s.code) {\n    case A:\n      return M(e, n, t.showMessage);\n    case l:\n      return O(e, n, t.showScrollingText);\n    case f:\n      return R(e, n, t.comment);\n    case S:\n      return w(e, n, t.script);\n    case x:\n      return t.showChoices(s, n, e);\n    case q:\n      return t.choiceWhen(s, n, e);\n    case X:\n      return t.changeName(s, n, e);\n    case U:\n      return t.changeProfile(s, n, e);\n    case z:\n      return t.changeNickname(s, n, e);\n    default:\n      return t.other(s, n, e);\n  }\n}, je = (e, n) => e.map(\n  (t, s, o) => fe(o, s, n)\n), c = (e, n, t, s, o) => s ? s(e, n, t) : o(e, n, t), Se = (e, n) => e.map((t, s) => Ae(e, s, n)), Ae = (e, n, t) => {\n  const s = e[n];\n  switch (s.code) {\n    // メッセージ関連\n    case r.SHOW_MESSAGE:\n      return t.showMessage ? M(e, n, t.showMessage) : t.other(s, n, e);\n    case r.SHOW_MESSAGE_BODY:\n      return c(s, n, e, t.showMessageBody, t.other);\n    case r.SHOW_SCROLLING_TEXT:\n      return t.showScrollingText ? O(e, n, t.showScrollingText) : t.other(s, n, e);\n    case r.SHOW_SCROLLING_TEXT_BODY:\n      return c(s, n, e, t.showScrollingTextBody, t.other);\n    case r.SHOW_CHOICES:\n      return c(s, n, e, t.showChoices, t.other);\n    case r.SHOW_CHOICES_ITEM:\n      return c(s, n, e, t.choiceWhen, t.other);\n    // コメント・スクリプト関連\n    case r.COMMENT:\n      return t.comment ? R(e, n, t.comment) : t.other(s, n, e);\n    case r.COMMENT_BODY:\n      return c(s, n, e, t.commentBody, t.other);\n    case r.SCRIPT_EVAL:\n      return t.script ? w(e, n, t.script) : t.other(s, n, e);\n    case r.SCRIPT_EVAL_BODY:\n      return c(s, n, e, t.scriptBody, t.other);\n    // 条件・制御系\n    case r.CONDITIONAL_BRANCH:\n      return c(s, n, e, t.conditionalBranch, t.other);\n    case r.CONTROL_SWITCHES:\n      return c(s, n, e, t.controlSwitch, t.other);\n    case r.CONTROL_VARIABLES:\n      return c(s, n, e, t.controlVariable, t.other);\n    case r.CONTROL_SELF_SWITCH:\n      return c(s, n, e, t.controlSelfSwitch, t.other);\n    case r.CONTROL_TIMER:\n      return c(s, n, e, t.controlTimer, t.other);\n    case r.COMMON_EVENT:\n      return c(s, n, e, t.commonEvent, t.other);\n    // メニュー\n    case r.CHANGE_SAVE_ACCESS:\n      return c(s, n, e, t.changeSaveAccess, t.other);\n    case r.CHANGE_MENU_ACCESS:\n      return c(s, n, e, t.changeMenuAccess, t.other);\n    case r.CHANGE_ENCOUNTER:\n      return c(s, n, e, t.changeEncounter, t.other);\n    case r.CHANGE_FORMATION_ACCESS:\n      return c(s, n, e, t.changeFormationAccess, t.other);\n    // キャラクター情報変更\n    case r.CHANGE_NAME:\n      return c(s, n, e, t.changeName, t.other);\n    case r.CHANGE_PROFILE:\n      return c(s, n, e, t.changeProfile, t.other);\n    case r.CHANGE_NICKNAME:\n      return c(s, n, e, t.changeNickname, t.other);\n    case r.CHANGE_ACTOR_IMAGES:\n      return c(s, n, e, t.changeActorImages, t.other);\n    case r.CHANGE_VEHICLE_IMAGE:\n      return c(s, n, e, t.changeVehicleImage, t.other);\n    // BGM・音楽関連\n    case r.CHANGE_BATTLE_BGM:\n      return c(s, n, e, t.changeBattleBGM, t.other);\n    case r.CHANGE_VICTORY_ME:\n      return c(s, n, e, t.changeVictoryME, t.other);\n    case r.CHANGE_DEFEAT_ME:\n      return c(s, n, e, t.changeDefeatME, t.other);\n    case r.PLAY_BGM:\n      return c(s, n, e, t.playBGM, t.other);\n    case r.FADEOUT_BGM:\n      return c(s, n, e, t.fadeOutBGM, t.other);\n    case r.PLAY_SE:\n      return c(s, n, e, t.playSE, t.other);\n    case r.STOP_SE:\n      return c(s, n, e, t.stopSE, t.other);\n    case r.PLAY_ME:\n      return c(s, n, e, t.playME, t.other);\n    // ラベル・ジャンプ\n    case r.LABEL:\n      return c(s, n, e, t.label, t.other);\n    case r.LABEL_JUMP:\n      return c(s, n, e, t.labelJump, t.other);\n    // 画面演出\n    case r.CHANGE_WINDOW_COLOR:\n      return c(s, n, e, t.changeWindowColor, t.other);\n    case r.TINT_SCREEN:\n      return c(s, n, e, t.tintScreen, t.other);\n    case r.FLASH_SCREEN:\n      return c(s, n, e, t.flashScreen, t.other);\n    case r.SHAKE_SCREEN:\n      return c(s, n, e, t.shakeScreen, t.other);\n    // ピクチャー\n    case r.SHOW_PICTURE:\n      return c(s, n, e, t.showPicture, t.other);\n    case r.MOVE_PICTURE:\n      return c(s, n, e, t.movePicture, t.other);\n    case r.ROTATE_PICTURE:\n      return c(s, n, e, t.rotatePicture, t.other);\n    case r.TINT_PICTURE:\n      return c(s, n, e, t.tintPicture, t.other);\n    case r.ERASE_PICTURE:\n      return c(s, n, e, t.erasePicture, t.other);\n    // ゲーム進行\n    case r.BATTLE_PROCESSING:\n      return c(s, n, e, t.battleProcessing, t.other);\n    case r.WAIT:\n      return c(s, n, e, t.wait, t.other);\n    case r.GAME_OVER:\n      return c(s, n, e, t.gameover, t.other);\n    // 未整理\n    case r.CHANGE_PARALLAX:\n      return c(s, n, e, t.changeParallax, t.other);\n    case r.CHANGE_BATTLE_BACKGROUND:\n      return c(s, n, e, t.changeBattleBackground, t.other);\n    case r.PLAY_MOVIE:\n      return c(s, n, e, t.playMovie, t.other);\n    case r.CHANGE_TRANSPARENCY:\n      return c(s, n, e, t.changeTransparency, t.other);\n    case r.SET_WEATHER_EFFECT:\n      return c(s, n, e, t.setWeatherEffects, t.other);\n    case r.CHANGE_GOLD:\n      return c(s, n, e, t.changeGold, t.other);\n    case r.SHOW_ANIMATION:\n      return c(s, n, e, t.showAnimation, t.other);\n    case r.TRANSFER_PLAYER:\n      return c(s, n, e, t.transferPlayer, t.other);\n    case r.SET_VEHICLE_LOCATION:\n      return c(s, n, e, t.setVehicleLocation, t.other);\n    case r.SET_EVENT_LOCATION:\n      return c(s, n, e, t.setEventLocation, t.other);\n    default:\n      return t.other(s, n, e);\n  }\n}, Ne = {\n  // body部分は空の要素で置き換える\n  commentBody: () => [],\n  showMessageBody: () => [],\n  scriptBody: () => [],\n  showScrollingTextBody: () => [],\n  // ヘッダ側を基準に、Header+Bodyで生成\n  showMessage: (e) => e.normalizedCommands(),\n  showScrollingText: (e) => e.normalizedCommands(),\n  comment: (e) => e.normalizedCommands(),\n  script: (e) => e.normalizedCommands(),\n  other: (e) => [e]\n}, T = (e) => Se(e, Ne), Ie = (e) => !!e, $e = (e, n, t) => ({\n  data: e,\n  eventId: n,\n  pageIndex: t\n}), _e = (e, n, t) => e.list.map((s) => ({\n  data: s,\n  eventId: t.id,\n  pageIndex: n\n})), H = (e, n) => e.pages.map(\n  (t, s) => n(t, s, e)\n), B = (e, n) => e.events.filter(Ie).map((t) => H(t, n)), ye = (e, n) => B(e, n).flat(2), Je = (e, n) => e.map((t) => H(t, n)), Ze = (e, n) => e.map((t, s) => n(t, s, t)), Qe = (e) => B(\n  e,\n  _e\n).flat(2), G = (e, n) => {\n  const t = n(e.list);\n  return {\n    ...e,\n    list: t\n  };\n}, L = (e, n) => ({\n  ...e,\n  pages: e.pages.map((t) => G(t, n))\n}), ve = (e, n) => ({\n  ...e,\n  events: e.events.map((t) => t ? L(t, n) : null)\n}), Me = (e, n) => e.map((t) => G(t, n)), Oe = (e, n) => e.map((t) => L(t, n)), be = (e) => ve(e, (n) => T(n).flat()), et = (e) => Me(\n  e,\n  (n) => T(n).flat()\n), tt = (e) => Oe(e, (n) => T(n).flat()), D = (e, n) => `<${e}:${n}>`, h = () => /<([^<>:]+):([^>]*)>/g, nt = (e, n) => k(e.note, (t, s) => n(t, s, e)), st = (e) => k(e, (n, t) => [n, t]), k = (e, n) => {\n  const t = h(), s = [];\n  let o;\n  for (; (o = t.exec(e)) !== null; )\n    s.push(n(o[1], o[2]));\n  return s;\n}, rt = (e, n) => e.replace(h(), (t, s, o) => {\n  const i = n(s, o);\n  return D(s, i);\n}), ct = (e, n) => {\n  const t = h();\n  let s;\n  for (; (s = t.exec(e)) !== null; )\n    if (s[1] === n)\n      return s[2];\n}, at = (e, n, t) => {\n  const s = h();\n  return e.replace(s, (o, i) => i === n ? D(i, t) : o);\n}, ot = (e) => `code:${e}`, Re = \"N\", we = \"V\", P = (e, n) => `\\\\${e}[${n}]`, He = (e) => P(Re, e.id), it = (e) => e.map((n) => ({\n  controlChar: He(n),\n  text: n.name\n})), ut = (e) => e.variables.map((n, t) => ({\n  text: n || \"\",\n  controlChar: P(we, t)\n})).filter((n) => n.text !== \"\"), Be = /* @__PURE__ */ new Set([\n  \"px\",\n  \"py\",\n  \"x\",\n  \"y\",\n  \"v\",\n  \"n\",\n  \"p\",\n  \"g\",\n  \"c\",\n  \"i\",\n  \"fs\"\n]), mt = (e, n = Be) => {\n  const t = /\\\\([A-Za-z]+)\\[(\\d+)]/g, s = [];\n  let o;\n  for (; (o = t.exec(e)) !== null; ) {\n    const i = o[1].toLowerCase(), V = parseInt(o[2], 10);\n    n.has(i) && s.push({ char: o[1], id: V });\n  }\n  return s;\n}, Ge = (e, n, t) => n.map((s) => t(s, e[s], e)), ht = (e, n, t) => Ge(e, n, t), dt = (e, n) => ({\n  code: e.code,\n  paramIndex: n,\n  value: e.parameters[n]\n}), lt = (e, n) => ({\n  code: e.code,\n  paramIndex: n,\n  value: e.parameters[n]\n}), pt = (e, n) => ({\n  code: e.code,\n  paramIndex: n,\n  value: e.parameters[n]\n});\nexport {\n  _ as BaseEventCommandGroup,\n  le as CHOICE_HELP_TEXT,\n  v as CombinedEventCommandGroup,\n  ne as ERROR_COMMAND_MESSAGE,\n  xe as ERROR_COMMAND_SCRIPT,\n  se as ERROR_INVALID_HEAD,\n  ue as ERROR_MESSAGE,\n  C as SimpleEventCommandGroup,\n  c as callHandler,\n  ot as codeInfoText,\n  E as codeTest,\n  ye as collectMapEvents,\n  De as constructActor,\n  Pe as constructArmor,\n  We as constructClass,\n  p as constructDamage,\n  ke as constructEnemy,\n  Fe as constructItem,\n  u as constructParamArray,\n  Ye as constructSkill,\n  ze as constructState,\n  Ve as constructWeapon,\n  ee as createAdvanced,\n  a as createAudio,\n  J as createBasicTerms,\n  _e as createCommandContext,\n  Q as createCommandsArray,\n  Ce as createCommentGroup,\n  K as createCondtion,\n  P as createControlCharFormat,\n  $e as createEventContext,\n  $ as createEventPage,\n  Ue as createMap,\n  Xe as createMapEvent,\n  j as createMapEventImage,\n  Ee as createMessageGroup,\n  b as createMessages,\n  D as createNoteEntity,\n  Z as createParamNamesArray,\n  Te as createScriptGroup,\n  ge as createScrlloingTextGroup,\n  qe as createSystemData,\n  te as createSystemSoundsArray,\n  y as createTerms,\n  d as createVehicle,\n  He as fromActor,\n  it as fromActors,\n  ut as fromSystem,\n  Qe as gatherEventCommandContext,\n  mt as getControlChars,\n  ct as getNoteValue,\n  R as handleGroupComment,\n  M as handleGroupMessage,\n  w as handleGroupScript,\n  O as handleGroupScrollingText,\n  fe as handlerDispatch,\n  g as isBodyParams,\n  pe as isChoiceHelp,\n  Ke as isHeadCommand,\n  oe as isMessageHeader,\n  de as joinCommandBodies,\n  h as makeRegex,\n  je as mapTextCommand,\n  Ae as mappingCommand,\n  Se as mappingCommandList,\n  T as normalizedCommands,\n  et as normalizedCommonEvents,\n  be as normalizedMapData,\n  tt as normalizedTroops,\n  pt as pickCommandParamAudio,\n  lt as pickCommandParamNumber,\n  dt as pickCommandParamString,\n  m as pickCommands,\n  re as pickComments,\n  I as pickHead,\n  ae as pickMessageHeader,\n  ie as pickMessageWithHead,\n  Ge as pickPropertys,\n  ce as pickScripts,\n  he as pickScrollText,\n  me as pickScrollTextHeader,\n  ht as pickString,\n  Ze as processCommonEvents,\n  H as processEventPages,\n  B as processMapEvents,\n  Je as processTroopEvents,\n  st as readNote,\n  k as readNoteEx,\n  nt as readNoteObject,\n  Me as replaceCommonEvents,\n  G as replaceEventCommands,\n  ve as replaceMapEvents,\n  rt as replaceNote,\n  L as replacePages,\n  Oe as replaceTroops,\n  at as setNoteValue\n};\n//# sourceMappingURL=rpg-data-tools.es.js.map\n","import type { AudioResourcePath } from \"./types\";\r\nimport type {\r\n  AudioFileParams,\r\n  ExtractCommandByParam,\r\n} from \"@sigureya/rpgtypes\";\r\nimport * as RpgTypes from \"@sigureya/rpgtypes\";\r\n\r\nexport const isAudioResource = (path: {\r\n  folder: string;\r\n  fileName: string;\r\n}): path is AudioResourcePath => {\r\n  return (\r\n    path.folder === RpgTypes.FOLDER_AUDIO_SE ||\r\n    path.folder === RpgTypes.FOLDER_AUDIO_BGM ||\r\n    path.folder === RpgTypes.FOLDER_AUDIO_BGS ||\r\n    path.folder === RpgTypes.FOLDER_AUDIO_ME\r\n  );\r\n};\r\n\r\nconst CODE_LIST: ReadonlyArray<RpgTypes.EventCode> = [\r\n  RpgTypes.PLAY_BGM,\r\n  RpgTypes.PLAY_BGS,\r\n  RpgTypes.PLAY_ME,\r\n  RpgTypes.PLAY_SE,\r\n  RpgTypes.CHANGE_BATTLE_BGM,\r\n  RpgTypes.CHANGE_VICTORY_ME,\r\n  RpgTypes.CHANGE_DEFEAT_ME,\r\n  RpgTypes.CHANGE_VEHICLE_ME,\r\n];\r\n\r\nexport const isAudioCommand = (\r\n  command: RpgTypes.EventCommand\r\n): command is ExtractCommandByParam<[AudioFileParams]> => {\r\n  return CODE_LIST.includes(command.code);\r\n};\r\n\r\nexport const audioPathFromCommands = <\r\n  T extends ExtractCommandByParam<[AudioFileParams]>\r\n>(\r\n  command: T\r\n): AudioResourcePath => {\r\n  return {\r\n    folder: folderName(command) || \"\",\r\n    fileName: command.parameters[0].name,\r\n  };\r\n};\r\nconst folderName = <Command extends ExtractCommandByParam<[AudioFileParams]>>(\r\n  command: Command\r\n) => {\r\n  return FOLDER_NAME_TABLE[command.code];\r\n};\r\n\r\nconst FOLDER_NAME_TABLE = {\r\n  [RpgTypes.PLAY_BGM]: RpgTypes.FOLDER_AUDIO_BGM,\r\n  [RpgTypes.PLAY_BGS]: RpgTypes.FOLDER_AUDIO_BGS,\r\n  [RpgTypes.PLAY_ME]: RpgTypes.FOLDER_AUDIO_ME,\r\n  [RpgTypes.PLAY_SE]: RpgTypes.FOLDER_AUDIO_SE,\r\n  [RpgTypes.CHANGE_BATTLE_BGM]: RpgTypes.FOLDER_AUDIO_BGM,\r\n  [RpgTypes.CHANGE_VICTORY_ME]: RpgTypes.FOLDER_AUDIO_ME,\r\n  [RpgTypes.CHANGE_DEFEAT_ME]: RpgTypes.FOLDER_AUDIO_ME,\r\n  [RpgTypes.CHANGE_VEHICLE_ME]: RpgTypes.FOLDER_AUDIO_ME,\r\n} as const;\r\n","import {\r\n  collectMapEvents,\r\n  processCommonEvents,\r\n  processTroopEvents,\r\n} from \"@sigureya/rpg-data-tools\";\r\nimport type {\r\n  Data_CommonEvent,\r\n  Data_Troop,\r\n  EventCommand,\r\n  Map_Audios,\r\n  MapEventContainer,\r\n  MapFileInfo,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type { MapAudioList } from \"./types\";\r\nimport type { AudioCommandInfo } from \"./eventCommand\";\r\nimport { isAudioCommand, audioPathFromCommands } from \"./eventCommand\";\r\n\r\nexport const collectAudioCommands = (\r\n  page: { list: EventCommand[] },\r\n  pageIndex: number,\r\n  event: { id: number }\r\n): AudioCommandInfo[] => {\r\n  return page.list.filter(isAudioCommand).map<AudioCommandInfo>((command) => ({\r\n    code: command.code,\r\n    path: audioPathFromCommands(command),\r\n    pageIndex,\r\n    eventId: event.id,\r\n  }));\r\n};\r\n\r\nexport const extractAudioCFromCommonEvents = (\r\n  events: ReadonlyArray<Data_CommonEvent>\r\n): AudioCommandInfo[] => {\r\n  return processCommonEvents(events, collectAudioCommands).flat(2);\r\n};\r\n\r\nexport const expectAudioFromTroop = (\r\n  troops: ReadonlyArray<Data_Troop>\r\n): AudioCommandInfo[] => {\r\n  return processTroopEvents(troops, collectAudioCommands).flat(2);\r\n};\r\ntype MapType = Map_Audios & MapEventContainer<EventCommand>;\r\nexport const extractAudioFromMap = (map: MapType): MapAudioList => {\r\n  return {\r\n    bgm: map.bgm,\r\n    bgs: map.bgs,\r\n    commands: collectMapEvents(map, collectAudioCommands),\r\n  };\r\n};\r\nexport const extractAudioFromMapFileInfo = <Map extends MapType>(\r\n  map: MapFileInfo<Map>\r\n): MapFileInfo<MapAudioList> => {\r\n  return {\r\n    map: extractAudioFromMap(map.map),\r\n    filename: map.filename,\r\n    editingName: map.editingName,\r\n  };\r\n};\r\n","import type { AudioFileParams, System_AudioFiles } from \"@sigureya/rpgtypes\";\r\nimport type { ExtractedSystemAudio, SystemSoundPath } from \"./types\";\r\n/**\r\n * オーディオファイルのリストをパス情報に変換する\r\n * @param sounds オーディオファイルのリスト\r\n * @returns システムサウンドパスリスト\r\n */\r\nexport const systemAudioFiles = (\r\n  system: System_AudioFiles\r\n): ExtractedSystemAudio => {\r\n  return {\r\n    sounds: extractSoundPaths(system.sounds),\r\n    bgm: extractSoundPaths([system.battleBgm, system.titleBgm]),\r\n    me: extractSoundPaths([\r\n      system.defeatMe,\r\n      system.gameoverMe,\r\n      system.victoryMe,\r\n    ]),\r\n  };\r\n};\r\n\r\nconst extractSoundPaths = (sounds: AudioFileParams[]): SystemSoundPath[] => {\r\n  return sounds.map<SystemSoundPath>((sound, index) => ({\r\n    index,\r\n    path: sound.name,\r\n  }));\r\n};\r\n","import { pickString, readNoteEx } from \"@sigureya/rpg-data-tools\";\r\nimport type * as RpgTypes from \"@sigureya/rpgtypes\";\r\nimport type {\r\n  ExtractedText,\r\n  ExtractedTextItem,\r\n  TextExtractable,\r\n} from \"./types\";\r\n\r\nconst createData = (\r\n  key: string,\r\n  text: string,\r\n  data: { id: number }\r\n): ExtractedTextItem => {\r\n  return { key, text: text, id: data.id };\r\n};\r\n\r\nexport const extractTextData = <\r\n  T extends { note: string } & Record<KeyType, string>,\r\n  KeyType extends string & keyof RpgTypes.PickByType<T, string>\r\n>(\r\n  data: T & { id: number },\r\n  keyList: ReadonlyArray<KeyType>\r\n): ExtractedText => {\r\n  return {\r\n    main: pickString<ExtractedTextItem, T>(data, keyList, (key, value) => {\r\n      return createData(key, value, data);\r\n    }),\r\n    note: extractNoteText(data),\r\n  };\r\n};\r\n\r\nexport const extractNoteText = (data: {\r\n  note: string;\r\n  id: number;\r\n}): ExtractedTextItem[] => {\r\n  return readNoteEx(data.note, (key, value) => createData(key, value, data));\r\n};\r\n\r\nexport const extractTextFromActor = (\r\n  actor: TextExtractable<RpgTypes.Data_Actor>\r\n) => {\r\n  return extractTextData(actor, [\"name\", \"nickname\", \"profile\"]);\r\n};\r\n\r\nexport const extractTextFromEnemy = (\r\n  enemy: TextExtractable<RpgTypes.Data_Enemy>\r\n) => {\r\n  return extractTextData(enemy, [\"name\"]);\r\n};\r\n\r\nexport const extractTextFromClass = (\r\n  item: TextExtractable<RpgTypes.Data_Class>\r\n) => {\r\n  return extractTextData(item, [\"name\"]);\r\n};\r\n\r\nexport const extractTextFromSkill = (\r\n  skill: TextExtractable<RpgTypes.Data_Skill>\r\n) => {\r\n  return extractTextData(skill, [\r\n    \"name\",\r\n    \"description\",\r\n    \"message1\",\r\n    \"message2\",\r\n  ]);\r\n};\r\n\r\nexport const extractTextFromItem = (\r\n  item: TextExtractable<RpgTypes.Data_Item>\r\n) => {\r\n  return extractTextData(item, [\"name\", \"description\"]);\r\n};\r\nexport const extractTextFromWeapon = (\r\n  weapon: TextExtractable<RpgTypes.Data_Weapon>\r\n) => {\r\n  return extractTextData(weapon, [\"name\", \"description\"]);\r\n};\r\n\r\nexport const extractTextFromArmor = (\r\n  armor: TextExtractable<RpgTypes.Data_Armor>\r\n) => {\r\n  return extractTextData(armor, [\"name\", \"description\"]);\r\n};\r\n\r\nexport const extractTextFromState = (\r\n  state: TextExtractable<RpgTypes.Data_State>\r\n) => {\r\n  return extractTextData(state, [\r\n    \"name\",\r\n    \"message1\",\r\n    \"message2\",\r\n    \"message3\",\r\n    \"message4\",\r\n  ]);\r\n};\r\n","import type {\r\n  CommandParameter,\r\n  EventCommandGroup_Script,\r\n  TextCommandMapper,\r\n} from \"@sigureya/rpg-data-tools\";\r\nimport {\r\n  mappingCommandList,\r\n  normalizedCommands,\r\n  pickCommandParamString,\r\n  processEventPages,\r\n} from \"@sigureya/rpg-data-tools\";\r\nimport type { EventCommand } from \"@sigureya/rpgtypes\";\r\nimport { type Command_ShowChoices } from \"@sigureya/rpgtypes\";\r\n\r\ntype CommandParam = CommandParameter<string>;\r\nexport const extractTextFromEventCommands = (\r\n  list: ReadonlyArray<EventCommand>\r\n): CommandParam[][] => {\r\n  // メッセージの表示など結合し、1つのコマンドにまとめる\r\n  const normalized = normalizedCommands(list).flat();\r\n  return mappingCommandList(normalized, extractTextMapper);\r\n};\r\nexport const extractTextFromEventPages = (event: {\r\n  pages: { list: EventCommand[] }[];\r\n}): CommandParam[][][] => {\r\n  return processEventPages(event, (page) =>\r\n    extractTextFromEventCommands(page.list)\r\n  );\r\n};\r\n\r\nexport const extractTextMapper: TextCommandMapper<CommandParam[]> = {\r\n  changeName: (command) => [pickCommandParamString(command, 1)],\r\n  changeNickname: (command) => [pickCommandParamString(command, 1)],\r\n  changeProfile: (command) => [pickCommandParamString(command, 1)],\r\n  showChoices: (command) => commandChoice(command),\r\n  showScrollingText: (groop) => {\r\n    return [pickCommandParamString(groop.mergedBody(), 0)];\r\n  },\r\n  showMessage: (data) => {\r\n    const command = data.normalizedCommands();\r\n    const head = pickCommandParamString(command[0], 4);\r\n    const bodyCommand = command[1];\r\n    if (bodyCommand) {\r\n      return [head, pickCommandParamString(bodyCommand, 0)];\r\n    }\r\n    return [head];\r\n  },\r\n  choiceWhen() {\r\n    return [];\r\n  },\r\n  comment(groop) {\r\n    const command = groop.mergedBody();\r\n    return [pickCommandParamString(command, 0)];\r\n  },\r\n  script: (groop) => readScript(groop),\r\n\r\n  other: () => [],\r\n  commentBody: () => [],\r\n};\r\n\r\nexport const readScript = (\r\n  script: EventCommandGroup_Script\r\n): CommandParam[] => {\r\n  return [];\r\n};\r\n\r\nexport const commandChoice = (command: Command_ShowChoices): CommandParam[] => {\r\n  return command.parameters[0].map<CommandParam>((msg, index) => ({\r\n    code: command.code,\r\n    paramIndex: index,\r\n    value: msg,\r\n  }));\r\n};\r\n","import type { CommandParameter } from \"@sigureya/rpg-data-tools\";\r\nimport type {\r\n  Data_CommonEvent,\r\n  Data_Troop,\r\n  MapEvent,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type {\r\n  ExtractedCommonEventText,\r\n  ExtractedMapEventText,\r\n  ExtractedTroopText,\r\n} from \"./types\";\r\nimport { extractNoteText } from \"./mainData\";\r\nimport {\r\n  extractTextFromEventCommands,\r\n  extractTextFromEventPages,\r\n} from \"./eventCommand\";\r\n\r\nexport const correctMapEventText = (\r\n  event: Pick<MapEvent, \"note\" | \"pages\" | \"id\">\r\n): ExtractedMapEventText => {\r\n  const commands: CommandParameter<string>[][][] =\r\n    extractTextFromEventPages(event);\r\n  return {\r\n    note: extractNoteText(event),\r\n    eventId: event.id,\r\n    commands: commands.flat(2),\r\n  };\r\n};\r\n\r\nexport const extractTextFromTroop = (\r\n  troop: Pick<Data_Troop, \"pages\" | \"id\">\r\n): ExtractedTroopText => {\r\n  const commands: CommandParameter<string>[][][] =\r\n    extractTextFromEventPages(troop);\r\n  return {\r\n    troopId: troop.id,\r\n    commands: commands.flat(2),\r\n  };\r\n};\r\n\r\nexport const extractTextFromCommonEvent = (\r\n  event: Pick<Data_CommonEvent, \"list\" | \"id\">\r\n): ExtractedCommonEventText => {\r\n  return {\r\n    eventId: event.id,\r\n    commands: extractTextFromEventCommands(event.list).flat(2),\r\n  };\r\n};\r\n","import {\r\n  mappingCommandList,\r\n  pickCommandParamString,\r\n  type MappingObject,\r\n} from \"@sigureya/rpg-data-tools\";\r\nimport type { ImageCommand } from \"./types\";\r\nimport type {\r\n  EventCommand,\r\n  ImageFolders,\r\n  IndexOfCommandParameter,\r\n} from \"@sigureya/rpgtypes\";\r\n\r\nexport const extractImagesFromCommands = (\r\n  commands: ReadonlyArray<EventCommand>\r\n): ImageCommand[][] => {\r\n  return mappingCommandList(commands, mappingTable);\r\n};\r\n\r\nconst imageCommand = <\r\n  Params extends unknown[],\r\n  Index extends IndexOfCommandParameter<\r\n    {\r\n      code: number;\r\n      parameters: Params;\r\n    },\r\n    string\r\n  >\r\n>(\r\n  command: {\r\n    code: number;\r\n    parameters: Params;\r\n  },\r\n  index: Index,\r\n  folderName: ImageFolders\r\n) => {\r\n  return {\r\n    folderName,\r\n    command: pickCommandParamString(command, index),\r\n  };\r\n};\r\nconst mappingTable: Pick<\r\n  MappingObject<ImageCommand[]>,\r\n  | \"changeActorImages\"\r\n  //  | \"setMovementRoute\"\r\n  | \"showPicture\"\r\n  | \"changeBattleBackground\"\r\n  | \"changeParallax\"\r\n  | \"changeVehicleImage\"\r\n  | \"other\"\r\n> = {\r\n  changeActorImages: (command) => {\r\n    return [\r\n      imageCommand(command, 1, \"characters\"),\r\n      imageCommand(command, 3, \"faces\"),\r\n      imageCommand(command, 5, \"sv_actors\"),\r\n    ];\r\n  },\r\n  showPicture: (command): [ImageCommand] => {\r\n    return [imageCommand(command, 1, \"pictures\")];\r\n  },\r\n  changeBattleBackground: (command) => {\r\n    return [\r\n      imageCommand(command, 0, \"battlebacks1\"),\r\n      imageCommand(command, 1, \"battlebacks2\"),\r\n    ];\r\n  },\r\n  changeParallax: (command): [ImageCommand] => {\r\n    return [imageCommand(command, 0, \"parallaxes\")];\r\n  },\r\n  changeVehicleImage: (command): [ImageCommand] => {\r\n    return [imageCommand(command, 1, \"characters\")];\r\n  },\r\n  other: () => [],\r\n};\r\n","import type * as RpgTypes from \"@sigureya/rpgtypes\";\r\nimport type {\r\n  ExtractedActorImage,\r\n  ExtractedEnemyImage,\r\n  ImageExtractableActor,\r\n} from \"./types\";\r\n\r\nexport const extractImageFromEnemy = (\r\n  enemy: Pick<RpgTypes.Data_Enemy, \"id\" | \"battlerName\">\r\n): ExtractedEnemyImage => {\r\n  return {\r\n    key: \"battlerName\",\r\n    image: enemy.battlerName,\r\n    id: enemy.id,\r\n  };\r\n};\r\n\r\nconst extractActorImage = (\r\n  actor: ImageExtractableActor,\r\n  key: Exclude<keyof typeof actor, \"id\">,\r\n  folder: RpgTypes.ImageFolders\r\n): ExtractedActorImage => ({\r\n  folder: folder,\r\n  key,\r\n  image: actor[key],\r\n  id: actor.id,\r\n});\r\n\r\nexport const extractImageFromActor = (\r\n  actor: ImageExtractableActor\r\n): ExtractedActorImage[] => {\r\n  return [\r\n    extractActorImage(actor, \"faceName\", \"faces\"),\r\n    extractActorImage(actor, \"characterName\", \"characters\"),\r\n    extractActorImage(actor, \"battlerName\", \"sv_actors\"),\r\n  ];\r\n};\r\n","import type {\r\n  Data_System,\r\n  Data_Vehicle,\r\n  ImageFolders,\r\n  PickByType,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type { ExtractedSystemImage } from \"./types\";\r\ntype Vehicle = Pick<Data_Vehicle, \"characterName\">;\r\ninterface SystemVehicles {\r\n  boat: Vehicle;\r\n  ship: Vehicle;\r\n  airship: Vehicle;\r\n}\r\nconst vehicle = (\r\n  system: SystemVehicles,\r\n  key: keyof SystemVehicles\r\n): ExtractedSystemImage => {\r\n  return {\r\n    folder: \"characters\",\r\n    key,\r\n    image: system[key].characterName,\r\n  };\r\n};\r\nconst systemImage = <Key extends keyof PickByType<Data_System, string>>(\r\n  system: Pick<Data_System, Key>,\r\n  key: keyof typeof system,\r\n  folder: ImageFolders\r\n): ExtractedSystemImage => {\r\n  return {\r\n    folder,\r\n    key,\r\n    image: system[key],\r\n  };\r\n};\r\n\r\nexport const extractImageFromSystem = (\r\n  system: Pick<Data_System, \"title1Name\" | \"title2Name\"> & SystemVehicles\r\n): ExtractedSystemImage[] => {\r\n  return [\r\n    systemImage(system, \"title1Name\", \"titles1\"),\r\n    systemImage(system, \"title2Name\", \"titles2\"),\r\n    vehicle(system, \"boat\"),\r\n    vehicle(system, \"ship\"),\r\n    vehicle(system, \"airship\"),\r\n  ];\r\n};\r\n"],"names":["f_","h_","u_","y_","E","n","ne","se","g","m","t","s","o","i","re","f","W","ce","S","F","ae","oe","A","ie","Y","ue","me","l","N","he","de","_","C","v","le","pe","Ee","ge","Ce","Te","M","O","R","w","c","Se","Ae","e","r.SHOW_MESSAGE","r.SHOW_MESSAGE_BODY","r.SHOW_SCROLLING_TEXT","r.SHOW_SCROLLING_TEXT_BODY","r.SHOW_CHOICES","r.SHOW_CHOICES_ITEM","r.COMMENT","r.COMMENT_BODY","r.SCRIPT_EVAL","r.SCRIPT_EVAL_BODY","r.CONDITIONAL_BRANCH","r.CONTROL_SWITCHES","r.CONTROL_VARIABLES","r.CONTROL_SELF_SWITCH","r.CONTROL_TIMER","r.COMMON_EVENT","r.CHANGE_SAVE_ACCESS","r.CHANGE_MENU_ACCESS","r.CHANGE_ENCOUNTER","r.CHANGE_FORMATION_ACCESS","r.CHANGE_NAME","r.CHANGE_PROFILE","r.CHANGE_NICKNAME","r.CHANGE_ACTOR_IMAGES","r.CHANGE_VEHICLE_IMAGE","r.CHANGE_BATTLE_BGM","r.CHANGE_VICTORY_ME","r.CHANGE_DEFEAT_ME","r.PLAY_BGM","r.FADEOUT_BGM","r.PLAY_SE","r.STOP_SE","r.PLAY_ME","r.LABEL","r.LABEL_JUMP","r.CHANGE_WINDOW_COLOR","r.TINT_SCREEN","r.FLASH_SCREEN","r.SHAKE_SCREEN","r.SHOW_PICTURE","r.MOVE_PICTURE","r.ROTATE_PICTURE","r.TINT_PICTURE","r.ERASE_PICTURE","r.BATTLE_PROCESSING","r.WAIT","r.GAME_OVER","r.CHANGE_PARALLAX","r.CHANGE_BATTLE_BACKGROUND","r.PLAY_MOVIE","r.CHANGE_TRANSPARENCY","r.SET_WEATHER_EFFECT","r.CHANGE_GOLD","r.SHOW_ANIMATION","r.TRANSFER_PLAYER","r.SET_VEHICLE_LOCATION","r.SET_EVENT_LOCATION","Ne","T","Ie","H","B","ye","Je","Ze","h","k","Ge","ht","dt","isAudioResource","path","RpgTypes.FOLDER_AUDIO_SE","RpgTypes.FOLDER_AUDIO_BGM","RpgTypes.FOLDER_AUDIO_BGS","RpgTypes.FOLDER_AUDIO_ME","CODE_LIST","RpgTypes.PLAY_BGM","RpgTypes.PLAY_BGS","RpgTypes.PLAY_ME","RpgTypes.PLAY_SE","RpgTypes.CHANGE_BATTLE_BGM","RpgTypes.CHANGE_VICTORY_ME","RpgTypes.CHANGE_DEFEAT_ME","RpgTypes.CHANGE_VEHICLE_ME","isAudioCommand","command","audioPathFromCommands","folderName","FOLDER_NAME_TABLE","collectAudioCommands","page","pageIndex","event","extractAudioCFromCommonEvents","events","processCommonEvents","expectAudioFromTroop","troops","processTroopEvents","extractAudioFromMap","map","collectMapEvents","extractAudioFromMapFileInfo","systemAudioFiles","system","extractSoundPaths","sounds","sound","index","createData","key","text","data","extractTextData","keyList","pickString","value","extractNoteText","readNoteEx","extractTextFromActor","actor","extractTextFromEnemy","enemy","extractTextFromClass","item","extractTextFromSkill","skill","extractTextFromItem","extractTextFromWeapon","weapon","extractTextFromArmor","armor","extractTextFromState","state","extractTextFromEventCommands","list","normalized","normalizedCommands","mappingCommandList","extractTextMapper","extractTextFromEventPages","processEventPages","pickCommandParamString","commandChoice","groop","head","bodyCommand","readScript","script","msg","correctMapEventText","commands","extractTextFromTroop","troop","extractTextFromCommonEvent","extractImagesFromCommands","mappingTable","imageCommand","extractImageFromEnemy","extractActorImage","folder","extractImageFromActor","vehicle","systemImage","extractImageFromSystem"],"mappings":"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","x_google_ignoreList":[0,1]}