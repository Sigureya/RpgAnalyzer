{"version":3,"file":"rpg-analyzer.es.js","sources":["../node_modules/@sigureya/rpgtypes/dist/rpgtypes.es.js","../node_modules/@sigureya/rpg-data-tools/dist/rpg-data-tools.es.js","../src/audio/resourcePath/fromCommand.ts","../src/audio/extract.ts","../src/audio/system/system.ts","../src/text/mainData/mainData.ts","../src/text/eventCommand/getTextFromCommand.ts","../src/text/events.ts"],"sourcesContent":["const E = 0, _ = 1, O = 2, s = 3, T = 32, t = 48, R = 0, c = 101, n = 401, o = 102, A = 402, N = 103, C = 104, S = 105, I = 405, L = 108, U = 408, M = 109, G = 111, H = 411, D = 112, F = 113, P = 115, B = 117, V = 118, W = 119, e = 121, Y = 122, a = 123, K = 124, l = 125, b = 126, i = 127, r = 128, X = 129, m = 132, p = 133, g = 134, k = 135, v = 136, x = 137, J = 138, f = 139, h = 140, u = 201, y = 202, Q = 203, Z = 204, d = 205, j = 206, q = 211, w = 212, z = 213, $ = 214, EE = 216, _E = 217, OE = 221, sE = 222, TE = 223, tE = 224, RE = 225, cE = 230, nE = 231, oE = 232, AE = 233, NE = 234, CE = 235, SE = 236, IE = 241, LE = 242, UE = 243, ME = 244, GE = 245, HE = 246, DE = 249, FE = 250, PE = 251, BE = 261, VE = 282, WE = 283, eE = 284, YE = 301, aE = 302, KE = 605, lE = 303, bE = 311, iE = 312, rE = 313, XE = 320, mE = 321, pE = 322, gE = 323, kE = 324, vE = 325, xE = 352, JE = 353, fE = 354, hE = 355, uE = 655, yE = 356, QE = 357, ZE = 0, dE = 1, jE = 2, qE = 3, wE = 4, zE = 5, $E = 6, E_ = 7, __ = 8, O_ = 9, s_ = 10, T_ = 11, t_ = 12, R_ = 13, c_ = 14, n_ = 15, o_ = 16, A_ = 17, N_ = 18, C_ = 19, S_ = 20, I_ = 21, L_ = 22, U_ = 23, M_ = 24, G_ = 25, H_ = 26, D_ = 27, F_ = 28, P_ = 29, B_ = 30, V_ = 31, W_ = 32, e_ = 33, Y_ = 34, a_ = 35, K_ = 36, l_ = 37, b_ = 38, i_ = 39, r_ = 40, X_ = 41, m_ = 42, p_ = 43, g_ = 44, k_ = 45, v_ = \"bgm\", x_ = \"se\", J_ = \"me\", f_ = \"bgs\", h_ = \"battlebacks1\", u_ = \"battlebacks2\", y_ = \"characters\", Q_ = \"enemies\", Z_ = \"faces\", d_ = \"parallaxes\", j_ = \"pictures\", q_ = \"sv_actors\", w_ = \"sv_enemies\", z_ = \"system\", $_ = \"tilesets\", EO = \"titles1\", _O = \"titles2\";\nexport {\n  YE as BATTLE_PROCESSING,\n  pE as CHANGE_ACTOR_IMAGES,\n  r as CHANGE_ARMORS,\n  WE as CHANGE_BATTLE_BACKGROUND,\n  m as CHANGE_BATTLE_BGM,\n  mE as CHANGE_CLASS,\n  f as CHANGE_DEFEAT_ME,\n  v as CHANGE_ENCOUNTER,\n  x as CHANGE_FORMATION_ACCESS,\n  l as CHANGE_GOLD,\n  bE as CHANGE_HP,\n  b as CHANGE_ITEMS,\n  k as CHANGE_MENU_ACCESS,\n  iE as CHANGE_MP,\n  XE as CHANGE_NAME,\n  kE as CHANGE_NICKNAME,\n  eE as CHANGE_PARALLAX,\n  X as CHANGE_PARTY_MEMBER,\n  EE as CHANGE_PLAYER_FOLLOWERS,\n  vE as CHANGE_PROFILE,\n  g as CHANGE_SAVE_ACCESS,\n  VE as CHANGE_TILESET,\n  rE as CHANGE_TP,\n  q as CHANGE_TRANSPARENCY,\n  gE as CHANGE_VEHICLE_IMAGE,\n  h as CHANGE_VEHICLE_ME,\n  p as CHANGE_VICTORY_ME,\n  i as CHANGE_WEAPONS,\n  J as CHANGE_WINDOW_COLOR,\n  L as COMMENT,\n  U as COMMENT_BODY,\n  B as COMMON_EVENT,\n  G as CONDITIONAL_BRANCH,\n  H as CONDITIONAL_BRANCH_ELSE,\n  a as CONTROL_SELF_SWITCH,\n  e as CONTROL_SWITCHES,\n  K as CONTROL_TIMER,\n  Y as CONTROL_VARIABLES,\n  $ as ERASE_EVENT,\n  CE as ERASE_PICTURE,\n  P as EXIT_EVENT_PROCESSING,\n  sE as FADEIN_SCREEN,\n  LE as FADEOUT_BGM,\n  HE as FADEOUT_BGS,\n  OE as FADEOUT_SCREEN,\n  E as FLAG_ID_AUTO_BATTLE,\n  _ as FLAG_ID_GUARD,\n  s as FLAG_ID_PRESERVE_TP,\n  O as FLAG_ID_SUBSTITUTE,\n  tE as FLASH_SCREEN,\n  v_ as FOLDER_AUDIO_BGM,\n  f_ as FOLDER_AUDIO_BGS,\n  J_ as FOLDER_AUDIO_ME,\n  x_ as FOLDER_AUDIO_SE,\n  h_ as FOLDER_IMG_BATTLEBACK1,\n  u_ as FOLDER_IMG_BATTLEBACK2,\n  y_ as FOLDER_IMG_CHACTERS,\n  Q_ as FOLDER_IMG_ENEMIES,\n  Z_ as FOLDER_IMG_FACES,\n  d_ as FOLDER_IMG_PARALLACES,\n  j_ as FOLDER_IMG_PICTURES,\n  q_ as FOLDER_IMG_SV_ACTORS,\n  w_ as FOLDER_IMG_SV_ENEMIES,\n  z_ as FOLDER_IMG_SYSTEM,\n  $_ as FOLDER_IMG_TILESETS,\n  EO as FOLDER_IMG_TITLES1,\n  _O as FOLDER_IMG_TITLES2,\n  JE as GAME_OVER,\n  _E as GATHER_FOLLOWERS,\n  j as GET_ONOFF_VEHICLE,\n  T as ICON_BUFF_START,\n  t as ICON_DEBUFF_START,\n  N as INPUT_NUMBER,\n  V as LABEL,\n  W as LABEL_JUMP,\n  D as LOOP,\n  F as LOOP_BREAK,\n  oE as MOVE_PICTURE,\n  lE as NAME_INPUT_PROCESSING,\n  R as NO_OPERATION,\n  xE as OPEN_SAVE_SCREEN,\n  IE as PLAY_BGM,\n  GE as PLAY_BGS,\n  DE as PLAY_ME,\n  BE as PLAY_MOVIE,\n  FE as PLAY_SE,\n  yE as PLUGIN_COMMAND_MV,\n  QE as PLUGIN_COMMAND_MZ,\n  ME as RESUME_BGM,\n  fE as RETURN_TO_TITLE_SCREEN,\n  AE as ROTATE_PICTURE,\n  p_ as ROUTE_CHANGE_BLEND_MODE,\n  B_ as ROUTE_CHANGE_FREQ,\n  X_ as ROUTE_CHANGE_IMAGE,\n  m_ as ROUTE_CHANGE_OPACITY,\n  P_ as ROUTE_CHANGE_SPEED,\n  K_ as ROUTE_DIR_FIX_OFF,\n  a_ as ROUTE_DIR_FIX_ON,\n  ZE as ROUTE_END,\n  c_ as ROUTE_JUMP,\n  T_ as ROUTE_MOVE_AWAY,\n  R_ as ROUTE_MOVE_BACKWARD,\n  dE as ROUTE_MOVE_DOWN,\n  t_ as ROUTE_MOVE_FORWARD,\n  jE as ROUTE_MOVE_LEFT,\n  zE as ROUTE_MOVE_LOWER_L,\n  $E as ROUTE_MOVE_LOWER_R,\n  O_ as ROUTE_MOVE_RANDOM,\n  qE as ROUTE_MOVE_RIGHT,\n  s_ as ROUTE_MOVE_TOWARD,\n  wE as ROUTE_MOVE_UP,\n  E_ as ROUTE_MOVE_UPPER_L,\n  __ as ROUTE_MOVE_UPPER_R,\n  g_ as ROUTE_PLAY_SE,\n  k_ as ROUTE_SCRIPT,\n  Y_ as ROUTE_STEP_ANIME_OFF,\n  e_ as ROUTE_STEP_ANIME_ON,\n  F_ as ROUTE_SWITCH_OFF,\n  D_ as ROUTE_SWITCH_ON,\n  b_ as ROUTE_THROUGH_OFF,\n  l_ as ROUTE_THROUGH_ON,\n  r_ as ROUTE_TRANSPARENT_OFF,\n  i_ as ROUTE_TRANSPARENT_ON,\n  L_ as ROUTE_TURN_180D,\n  I_ as ROUTE_TURN_90D_L,\n  S_ as ROUTE_TURN_90D_R,\n  U_ as ROUTE_TURN_90D_R_L,\n  H_ as ROUTE_TURN_AWAY,\n  o_ as ROUTE_TURN_DOWN,\n  A_ as ROUTE_TURN_LEFT,\n  M_ as ROUTE_TURN_RANDOM,\n  N_ as ROUTE_TURN_RIGHT,\n  G_ as ROUTE_TURN_TOWARD,\n  C_ as ROUTE_TURN_UP,\n  n_ as ROUTE_WAIT,\n  W_ as ROUTE_WALK_ANIME_OFF,\n  V_ as ROUTE_WALK_ANIME_ON,\n  UE as SAVE_BGM,\n  hE as SCRIPT_EVAL,\n  uE as SCRIPT_EVAL_BODY,\n  Z as SCROLL_MAP,\n  C as SELECT_ITEM,\n  Q as SET_EVENT_LOCATION,\n  d as SET_MOVEMENT_ROUTE,\n  y as SET_VEHICLE_LOCATION,\n  SE as SET_WEATHER_EFFECT,\n  RE as SHAKE_SCREEN,\n  aE as SHOP_PROCESSING,\n  KE as SHOP_PROCESSING_BODY,\n  w as SHOW_ANIMATION,\n  z as SHOW_BALLOON_ICON,\n  o as SHOW_CHOICES,\n  A as SHOW_CHOICES_ITEM,\n  c as SHOW_MESSAGE,\n  n as SHOW_MESSAGE_BODY,\n  nE as SHOW_PICTURE,\n  S as SHOW_SCROLLING_TEXT,\n  I as SHOW_SCROLLING_TEXT_BODY,\n  M as SKIP,\n  PE as STOP_SE,\n  NE as TINT_PICTURE,\n  TE as TINT_SCREEN,\n  u as TRANSFER_PLAYER,\n  cE as WAIT\n};\n//# sourceMappingURL=rpgtypes.es.js.map\n","import * as a from \"@sigureya/rpgtypes\";\nimport { COMMENT as S, COMMENT_BODY as F, SCRIPT_EVAL as T, SCRIPT_EVAL_BODY as P, SHOW_MESSAGE as N, SHOW_MESSAGE_BODY as x, SHOW_SCROLLING_TEXT as h, SHOW_SCROLLING_TEXT_BODY as A, CHANGE_NICKNAME as z, CHANGE_PROFILE as Y, CHANGE_NAME as y, SHOW_CHOICES_ITEM as U, SHOW_CHOICES as X } from \"@sigureya/rpgtypes\";\nconst m = () => [0, 0, 0, 0, 0, 0, 0, 0], De = (e) => ({\n  id: 0,\n  name: \"\",\n  nickname: \"\",\n  profile: \"\",\n  note: \"\",\n  classId: 0,\n  initialLevel: 1,\n  maxLevel: 99,\n  characterIndex: 0,\n  characterName: \"\",\n  faceIndex: 0,\n  faceName: \"\",\n  battlerName: \"\",\n  traits: [],\n  equips: [],\n  ...e\n}), ke = (e) => ({\n  battlerHue: 0,\n  id: 0,\n  name: \"\",\n  note: \"\",\n  battlerName: \"\",\n  traits: [],\n  params: m(),\n  exp: 0,\n  gold: 0,\n  dropItems: [],\n  actions: [],\n  ...e\n}), Ve = (e) => ({\n  price: 0,\n  id: 0,\n  name: \"\",\n  note: \"\",\n  iconIndex: 0,\n  description: \"\",\n  etypeId: 0,\n  params: m(),\n  traits: [],\n  ...e\n}), We = (e) => ({\n  price: 0,\n  id: 0,\n  name: \"\",\n  note: \"\",\n  iconIndex: 0,\n  description: \"\",\n  etypeId: 0,\n  wtypeId: 0,\n  params: m(),\n  traits: [],\n  damage: p(),\n  ...e\n}), Fe = (e) => ({\n  id: 0,\n  name: \"\",\n  note: \"\",\n  traits: [],\n  learnings: [],\n  params: m(),\n  expParams: [],\n  ...e\n}), p = (e) => ({\n  type: 0,\n  elementId: 0,\n  formula: \"0\",\n  variance: 20,\n  critical: !1,\n  ...e\n}), Pe = (e) => ({\n  id: 0,\n  name: \"\",\n  iconIndex: 0,\n  description: \"\",\n  note: \"\",\n  price: 0,\n  consumable: !1,\n  scope: 0,\n  occasion: 0,\n  speed: 0,\n  successRate: 100,\n  repeats: 1,\n  tpGain: 0,\n  hitType: 0,\n  animationId: 0,\n  damage: p(),\n  effects: [],\n  ...e\n}), xe = (e) => ({\n  animationId: 0,\n  damage: p(),\n  description: \"\",\n  hitType: 0,\n  iconIndex: 0,\n  id: 0,\n  message1: \"\",\n  message2: \"\",\n  mpCost: 0,\n  name: \"\",\n  note: \"\",\n  occasion: 0,\n  repeats: 1,\n  requiredWtypeId1: 0,\n  requiredWtypeId2: 0,\n  scope: 0,\n  speed: 0,\n  stypeId: 0,\n  successRate: 100,\n  tpCost: 0,\n  tpGain: 0,\n  effects: [],\n  messageType: 0,\n  ...e\n}), ze = (e) => ({\n  id: 0,\n  name: \"\",\n  iconIndex: 0,\n  restriction: 0,\n  priority: 50,\n  motion: 0,\n  overlay: 0,\n  removeAtBattleEnd: !1,\n  removeByRestriction: !1,\n  autoRemovalTiming: 0,\n  minTurns: 1,\n  maxTurns: 1,\n  removeByDamage: !1,\n  chanceByDamage: 100,\n  removeByWalking: !1,\n  stepsToRemove: 100,\n  message1: \"\",\n  message2: \"\",\n  message3: \"\",\n  message4: \"\",\n  traits: [],\n  note: \"\",\n  ...e\n}), Ye = (e) => ({\n  autoplayBgm: !0,\n  autoplayBgs: !1,\n  battleback1Name: \"\",\n  battleback2Name: \"\",\n  data: [],\n  disableDashing: !1,\n  displayName: \"\",\n  encounterList: [],\n  events: [],\n  height: 0,\n  note: \"\",\n  width: 0,\n  x: 0,\n  y: 0,\n  parallaxName: \"\",\n  parallaxLoopX: !1,\n  parallaxLoopY: !1,\n  parallaxShow: !1,\n  parallaxSx: 0,\n  parallaxSy: 0,\n  ...e\n}), ye = (e) => ({\n  id: 0,\n  name: \"\",\n  note: \"\",\n  x: 0,\n  y: 0,\n  pages: [K()],\n  ...e\n}), q = (e) => ({\n  actorId: 0,\n  actorValid: !1,\n  itemId: 0,\n  itemValid: !1,\n  selfSwitchCh: \"\",\n  selfSwitchValid: !1,\n  switch1Id: 0,\n  switch1Valid: !1,\n  switch2Id: 0,\n  switch2Valid: !1,\n  variableId: 0,\n  variableValid: !1,\n  variableValue: 0,\n  ...e\n}), j = (e) => ({\n  characterIndex: 0,\n  characterName: \"\",\n  direction: 6,\n  pattern: 0,\n  tileId: 0,\n  ...e\n}), K = (e) => ({\n  conditions: q(),\n  image: j(),\n  moveRoute: {\n    list: [],\n    repeat: !1,\n    wait: !1,\n    skippable: !1\n  },\n  directionFix: !1,\n  moveFrequency: 0,\n  list: [],\n  ...e\n}), c = () => ({\n  name: \"\",\n  pan: 0,\n  pitch: 100,\n  volume: 90\n}), Ue = (e = {}) => ({\n  local: e.local ?? \"\",\n  gameTitle: e.gameTitle ?? \"\",\n  currencyUnit: e.currencyUnit ?? \"\",\n  title1Name: e.title1Name ?? \"\",\n  terms: e.terms ?? $(),\n  title2Name: e.title2Name ?? \"\",\n  optAutosave: e.optAutosave ?? !1,\n  attackMotions: e.attackMotions ?? [],\n  startMapId: e.startMapId ?? 0,\n  startX: e.startX ?? 0,\n  startY: e.startY ?? 0,\n  switches: e.switches ?? [],\n  windowTone: e.windowTone ?? [0, 0, 0, 0],\n  editMapId: e.editMapId ?? 0,\n  testTroopId: e.testTroopId ?? 0,\n  testBattlers: e.testBattlers ?? [],\n  versionId: e.versionId ?? 0,\n  advanced: e.advanced ?? ee(),\n  armorTypes: e.armorTypes ?? [],\n  elements: e.elements ?? [],\n  variables: e.variables ?? [],\n  equipTypes: e.equipTypes ?? [],\n  sounds: e.sounds ?? te(),\n  titleBgm: e.titleBgm ?? c(),\n  gameoverMe: e.gameoverMe ?? c(),\n  battleBgm: e.battleBgm ?? c(),\n  defeatMe: e.defeatMe ?? c(),\n  victoryMe: e.victoryMe ?? c(),\n  battleback1Name: e.battleback1Name ?? \"\",\n  battleback2Name: e.battleback2Name ?? \"\",\n  battlerName: e.battlerName ?? \"\",\n  weaponTypes: e.weaponTypes ?? [],\n  skillTypes: e.skillTypes ?? [],\n  optDisplayTp: e.optDisplayTp ?? !1,\n  optDrawTitle: e.optDrawTitle ?? !1,\n  optExtraExp: e.optExtraExp ?? !1,\n  optFloorDeath: e.optFloorDeath ?? !1,\n  optFollowers: e.optFollowers ?? !1,\n  optKeyItemsNumber: e.optKeyItemsNumber ?? !1,\n  optSideView: e.optSideView ?? !1,\n  optSlipDeath: e.optSlipDeath ?? !1,\n  optTransparent: e.optTransparent ?? !1,\n  boat: e.boat ?? l(),\n  ship: e.ship ?? l(),\n  airship: e.airship ?? l(),\n  tileSize: e.tileSize ?? 0\n}), $ = (e = {}) => ({\n  messages: b(e.messages ?? {}),\n  commands: Q(e.commands ?? {}),\n  params: Z(e.params ?? {}),\n  basic: J(e.basic ?? {})\n}), J = (e = {}) => [\n  e.level ?? \"\",\n  e.levelA ?? \"\",\n  e.hp ?? \"\",\n  e.hpA ?? \"\",\n  e.mp ?? \"\",\n  e.mpA ?? \"\",\n  e.tp ?? \"\",\n  e.tpA ?? \"\",\n  e.experience ?? \"\",\n  e.exp ?? \"\"\n], Z = (e = {}) => [\n  e.mhp ?? \"\",\n  e.mmp ?? \"\",\n  e.atk ?? \"\",\n  e.def ?? \"\",\n  e.mat ?? \"\",\n  e.mdf ?? \"\",\n  e.agi ?? \"\",\n  e.luk ?? \"\",\n  e.hit ?? \"\",\n  e.eva ?? \"\"\n], Q = (e = {}) => [\n  e.fight ?? \"\",\n  e.escape ?? \"\",\n  e.attack ?? \"\",\n  e.guard ?? \"\",\n  e.item ?? \"\",\n  e.skill ?? \"\",\n  e.equip ?? \"\",\n  e.status ?? \"\",\n  e.formation ?? \"\",\n  e.save ?? \"\",\n  e.gameEnd ?? \"\",\n  e.options ?? \"\",\n  e.weapon ?? \"\",\n  e.armor ?? \"\",\n  e.keyItem ?? \"\",\n  e.equip2 ?? \"\",\n  e.optimize ?? \"\",\n  e.clear ?? \"\",\n  e.newGame ?? \"\",\n  e.continue_ ?? \"\",\n  e.notUsed20 ?? \"\",\n  e.toTitle ?? \"\",\n  e.cancel ?? \"\",\n  e.notUsed23 ?? \"\",\n  e.buy ?? \"\",\n  e.sell ?? \"\"\n], b = (e = {}) => ({\n  alwaysDash: e.alwaysDash ?? \"\",\n  commandRemember: e.commandRemember ?? \"\",\n  touchUI: e.touchUI ?? \"\",\n  bgmVolume: e.bgmVolume ?? \"\",\n  bgsVolume: e.bgsVolume ?? \"\",\n  meVolume: e.meVolume ?? \"\",\n  seVolume: e.seVolume ?? \"\",\n  possession: e.possession ?? \"\",\n  expTotal: e.expTotal ?? \"\",\n  expNext: e.expNext ?? \"\",\n  saveMessage: e.saveMessage ?? \"\",\n  loadMessage: e.loadMessage ?? \"\",\n  file: e.file ?? \"\",\n  autosave: e.autosave ?? \"\",\n  partyName: e.partyName ?? \"\",\n  emerge: e.emerge ?? \"\",\n  preemptive: e.preemptive ?? \"\",\n  surprise: e.surprise ?? \"\",\n  escapeStart: e.escapeStart ?? \"\",\n  escapeFailure: e.escapeFailure ?? \"\",\n  victory: e.victory ?? \"\",\n  defeat: e.defeat ?? \"\",\n  obtainExp: e.obtainExp ?? \"\",\n  obtainGold: e.obtainGold ?? \"\",\n  obtainItem: e.obtainItem ?? \"\",\n  levelUp: e.levelUp ?? \"\",\n  obtainSkill: e.obtainSkill ?? \"\",\n  useItem: e.useItem ?? \"\",\n  criticalToEnemy: e.criticalToEnemy ?? \"\",\n  criticalToActor: e.criticalToActor ?? \"\",\n  actorDamage: e.actorDamage ?? \"\",\n  actorRecovery: e.actorRecovery ?? \"\",\n  actorGain: e.actorGain ?? \"\",\n  actorLoss: e.actorLoss ?? \"\",\n  actorDrain: e.actorDrain ?? \"\",\n  actorNoDamage: e.actorNoDamage ?? \"\",\n  actorNoHit: e.actorNoHit ?? \"\",\n  enemyDamage: e.enemyDamage ?? \"\",\n  enemyRecovery: e.enemyRecovery ?? \"\",\n  enemyGain: e.enemyGain ?? \"\",\n  enemyLoss: e.enemyLoss ?? \"\",\n  enemyDrain: e.enemyDrain ?? \"\",\n  enemyNoDamage: e.enemyNoDamage ?? \"\",\n  enemyNoHit: e.enemyNoHit ?? \"\",\n  evasion: e.evasion ?? \"\",\n  magicEvasion: e.magicEvasion ?? \"\",\n  magicReflection: e.magicReflection ?? \"\",\n  counterAttack: e.counterAttack ?? \"\",\n  substitute: e.substitute ?? \"\",\n  buffAdd: e.buffAdd ?? \"\",\n  debuffAdd: e.debuffAdd ?? \"\",\n  buffRemove: e.buffRemove ?? \"\",\n  actionFailure: e.actionFailure ?? \"\"\n}), ee = (e = {}) => ({\n  gameId: e.gameId ?? 0,\n  screenWidth: e.screenWidth ?? 0,\n  screenHeight: e.screenHeight ?? 0,\n  uiAreaWidth: e.uiAreaWidth ?? 0,\n  uiAreaHeight: e.uiAreaHeight ?? 0,\n  windowOpacity: e.windowOpacity ?? 0,\n  screenScale: e.screenScale ?? 0,\n  numberFontFilename: e.numberFontFilename ?? \"\",\n  mainFontFilename: e.mainFontFilename ?? \"\",\n  fallbackFonts: e.fallbackFonts ?? \"\",\n  fontSize: e.fontSize ?? 0\n}), l = (e = {}) => ({\n  bgm: e.bgm ?? c(),\n  characterIndex: e.characterIndex ?? 0,\n  characterName: e.characterName ?? \"\",\n  startMapId: e.startMapId ?? 0,\n  startX: e.startX ?? 0,\n  startY: e.startY ?? 0\n}), te = (e = {}) => [\n  e.cursor ?? c(),\n  e.ok ?? c(),\n  e.cancel ?? c(),\n  e.buzzer ?? c(),\n  e.equip ?? c(),\n  e.save ?? c(),\n  e.load ?? c(),\n  e.battleStart ?? c(),\n  e.escape ?? c(),\n  e.enemyAttack ?? c(),\n  e.enemyDamage ?? c(),\n  e.enemyCollapse ?? c(),\n  e.bossCollapse1 ?? c(),\n  e.bossCollapse2 ?? c(),\n  e.actorDamage ?? c(),\n  e.actorCollapse ?? c(),\n  e.playRecovery ?? c(),\n  e.playMiss ?? c(),\n  e.playEvasion ?? c(),\n  e.playMagicEvasion ?? c(),\n  e.playReflection ?? c(),\n  e.shop ?? c(),\n  e.useItem ?? c(),\n  e.useSkill ?? c()\n], g = (e, t) => t ? e === t.code : !1, ne = \"MessageHeader invalid command\", Xe = \"Script invalid command\", se = \"Invalid Head\", E = (e) => typeof e[0] == \"string\" && e.length === 1, qe = (e, t) => t ? e === t.code && E(t.parameters) : !1, u = (e, t, n) => {\n  const s = [];\n  for (let o = n; o < t.length; o++) {\n    const i = t[o];\n    if (g(e, i) && E(i.parameters))\n      s.push({\n        code: e,\n        indent: i.indent,\n        parameters: [i.parameters[0]]\n      });\n    else\n      break;\n  }\n  return s;\n}, I = (e, t, n) => {\n  const s = e[t];\n  if (s && g(n, s) && E(s.parameters))\n    return {\n      code: n,\n      indent: s.indent,\n      parameters: [s.parameters[0]]\n    };\n  throw new Error(se, { cause: s });\n}, ae = (e, t) => ({\n  head: I(e, t, S),\n  bodys: u(F, e, t + 1)\n}), re = (e, t) => ({\n  head: I(e, t, T),\n  bodys: u(P, e, t + 1)\n}), ce = (e, t) => {\n  const n = e[t];\n  if (n && oe(n))\n    return n;\n  throw new Error(ne, { cause: n });\n}, oe = (e) => !e || e.code !== N || ![4, 5].includes(e.parameters.length) ? !1 : typeof e.parameters[0] == \"string\" && typeof e.parameters[1] == \"number\" && typeof e.parameters[2] == \"number\" && typeof e.parameters[3] == \"number\", ie = (e, t) => ({\n  head: ce(e, t),\n  bodys: u(x, e, t + 1)\n}), me = \"ScrollTextHeader invalid command\", ue = (e, t) => {\n  const n = e[t];\n  if (g(h, n))\n    return n;\n  const s = {\n    headCode: h,\n    bodyCode: A,\n    index: t\n  };\n  throw new Error(me, { cause: s });\n}, de = (e, t) => ({\n  head: ue(e, t),\n  bodys: u(A, e, t + 1)\n}), le = (e, t = `\n`) => e.map((n) => n.parameters[0]).join(t);\nclass v {\n  constructor(t, n) {\n    this.header = t, this.bodies = n;\n  }\n  getBodyText(t = `\n`) {\n    return le(this.getExpandedBodies(), t);\n  }\n  jopinHedderAndBody() {\n    return [this.header, ...this.bodies];\n  }\n  joinCommandBodies() {\n    return this.getExpandedBodies();\n  }\n}\nclass C extends v {\n  constructor(t, n, s) {\n    super(n, s), this.bodyCode = t;\n  }\n  getExpandedBodies() {\n    return this.bodies;\n  }\n  normalizedCommands() {\n    const t = {\n      ...this.header,\n      code: this.header.code,\n      indent: this.header.indent,\n      parameters: [...this.header.parameters]\n    };\n    return this.bodies.length === 0 ? [t] : [t, this.mergedBody()];\n  }\n  mergedBody() {\n    return {\n      code: this.bodyCode,\n      indent: this.header.indent,\n      parameters: [this.getBodyText()]\n    };\n  }\n}\nclass _ extends v {\n  getExpandedBodies() {\n    return [this.header, ...this.bodies];\n  }\n  mergedBody() {\n    return {\n      code: this.header.code,\n      indent: this.header.indent,\n      parameters: [this.getBodyText()]\n    };\n  }\n  normalizedCommands() {\n    return [this.mergedBody()];\n  }\n}\nconst he = \"選択肢ヘルプ\", pe = (e) => e.parameters[0] === he, ge = (e, t = []) => new C(401, e, t), Ee = (e, t = []) => new C(405, e, t), Ce = (e, t = []) => pe(e) ? new C(\n  408,\n  e,\n  t\n) : new _(\n  e,\n  t\n), fe = (e, t = []) => new _(e, t), M = (e, t, n) => {\n  const s = ie(e, t), o = ge(s.head, s.bodys);\n  return n(o);\n}, O = (e, t, n) => {\n  const s = de(e, t), o = Ee(s.head, s.bodys);\n  return n(o);\n}, w = (e, t, n) => {\n  const s = ae(e, t), o = Ce(s.head, s.bodys);\n  return n(o);\n}, R = (e, t, n) => {\n  const s = re(e, t), o = fe(s.head, s.bodys);\n  return n(o);\n}, Se = (e, t, n) => {\n  const s = e[t];\n  switch (s.code) {\n    case N:\n      return M(e, t, n.showMessage);\n    case h:\n      return O(e, t, n.showScrollingText);\n    case S:\n      return w(e, t, n.comment);\n    case T:\n      return R(e, t, n.script);\n    case X:\n      return n.showChoices(s, t, e);\n    case U:\n      return n.choiceWhen(s, t, e);\n    case y:\n      return n.changeName(s, t, e);\n    case Y:\n      return n.changeProfile(s, t, e);\n    case z:\n      return n.changeNickname(s, t, e);\n    default:\n      return n.other(s, t, e);\n  }\n}, je = (e, t) => e.map(\n  (n, s, o) => Se(o, s, t)\n), r = (e, t, n, s, o) => s ? s(e, t, n) : o(e, t, n), Te = (e, t) => e.map((n, s) => Ne(e, s, t)), Ne = (e, t, n) => {\n  const s = e[t];\n  switch (s.code) {\n    case a.SHOW_MESSAGE:\n      return n.showMessage ? M(e, t, n.showMessage) : n.other(s, t, e);\n    case a.SHOW_MESSAGE_BODY:\n      return r(s, t, e, n.showMessageBody, n.other);\n    case a.SHOW_SCROLLING_TEXT:\n      return n.showScrollingText ? O(e, t, n.showScrollingText) : n.other(s, t, e);\n    case a.SHOW_SCROLLING_TEXT_BODY:\n      return r(s, t, e, n.showScrollingTextBody, n.other);\n    case a.COMMENT:\n      return n.comment ? w(e, t, n.comment) : n.other(s, t, e);\n    case a.COMMENT_BODY:\n      return r(s, t, e, n.commentBody, n.other);\n    case a.SCRIPT_EVAL:\n      return n.script ? R(e, t, n.script) : n.other(s, t, e);\n    case a.SCRIPT_EVAL_BODY:\n      return r(s, t, e, n.scriptBody, n.other);\n    case a.CONTROL_SWITCHES:\n      return r(s, t, e, n.controlSwitch, n.other);\n    case a.CONTROL_VARIABLES:\n      return r(s, t, e, n.controlVariable, n.other);\n    case a.CONTROL_SELF_SWITCH:\n      return r(s, t, e, n.controlSelfSwitch, n.other);\n    case a.CONTROL_TIMER:\n      return r(s, t, e, n.controlTimer, n.other);\n    case a.CONDITIONAL_BRANCH:\n      return r(s, t, e, n.conditionalBranch, n.other);\n    case a.SHOW_CHOICES:\n      return r(s, t, e, n.showChoices, n.other);\n    case a.SHOW_CHOICES_ITEM:\n      return r(s, t, e, n.choiceWhen, n.other);\n    case a.CHANGE_NAME:\n      return r(s, t, e, n.changeName, n.other);\n    case a.CHANGE_PROFILE:\n      return r(s, t, e, n.changeProfile, n.other);\n    case a.CHANGE_NICKNAME:\n      return r(s, t, e, n.changeNickname, n.other);\n    case a.COMMON_EVENT:\n      return r(s, t, e, n.commonEvent, n.other);\n    case a.LABEL:\n      return r(s, t, e, n.label, n.other);\n    case a.LABEL_JUMP:\n      return r(s, t, e, n.labelJump, n.other);\n    case a.CHANGE_BATTLE_BGM:\n      return r(s, t, e, n.changeBattleBGM, n.other);\n    case a.CHANGE_VICTORY_ME:\n      return r(s, t, e, n.changeVictoryME, n.other);\n    case a.CHANGE_DEFEAT_ME:\n      return r(s, t, e, n.changeDefeatME, n.other);\n    case a.CHANGE_SAVE_ACCESS:\n      return r(s, t, e, n.changeSaveAccess, n.other);\n    case a.CHANGE_MENU_ACCESS:\n      return r(s, t, e, n.changeMenuAccess, n.other);\n    case a.CHANGE_ENCOUNTER:\n      return r(s, t, e, n.changeEncounter, n.other);\n    case a.CHANGE_FORMATION_ACCESS:\n      return r(s, t, e, n.changeFormationAccess, n.other);\n    case a.CHANGE_WINDOW_COLOR:\n      return r(s, t, e, n.changeWindowColor, n.other);\n    case a.TINT_SCREEN:\n      return r(s, t, e, n.tintScreen, n.other);\n    case a.FLASH_SCREEN:\n      return r(s, t, e, n.flashScreen, n.other);\n    case a.SHAKE_SCREEN:\n      return r(s, t, e, n.shakeScreen, n.other);\n    case a.BATTLE_PROCESSING:\n      return r(s, t, e, n.battleProcessing, n.other);\n    case a.WAIT:\n      return r(s, t, e, n.wait, n.other);\n    case a.CHANGE_ACTOR_IMAGES:\n      return r(s, t, e, n.changeActorImages, n.other);\n    case a.CHANGE_GOLD:\n      return r(s, t, e, n.changeGold, n.other);\n    case a.SHOW_ANIMATION:\n      return r(s, t, e, n.showAnimation, n.other);\n    case a.TRANSFER_PLAYER:\n      return r(s, t, e, n.transferPlayer, n.other);\n    case a.SET_VEHICLE_LOCATION:\n      return r(s, t, e, n.setVehicleLocation, n.other);\n    case a.SET_EVENT_LOCATION:\n      return r(s, t, e, n.setEventLocation, n.other);\n    case a.GAME_OVER:\n      return r(s, t, e, n.gameover, n.other);\n  }\n  return n.other(s, t, e);\n}, Ae = {\n  // body部分は空の要素で置き換える\n  commentBody: () => [],\n  showMessageBody: () => [],\n  scriptBody: () => [],\n  showScrollingTextBody: () => [],\n  // ヘッダ側を基準に、Header+Bodyで生成\n  showMessage: (e) => e.normalizedCommands(),\n  showScrollingText: (e) => e.normalizedCommands(),\n  comment: (e) => e.normalizedCommands(),\n  script: (e) => e.normalizedCommands(),\n  other: (e) => [e]\n}, f = (e) => Te(e, Ae), Ie = (e) => !!e, Ke = (e, t, n) => ({\n  data: e,\n  eventId: t,\n  pageIndex: n\n}), ve = (e, t, n) => e.list.map((s) => ({\n  data: s,\n  eventId: n.id,\n  pageIndex: t\n})), H = (e, t) => e.pages.map(\n  (n, s) => t(n, s, e)\n), B = (e, t) => e.events.filter(Ie).map((n) => H(n, t)), $e = (e, t) => B(e, t).flat(2), Je = (e, t) => e.map((n) => H(n, t)), Ze = (e, t) => e.map((n, s) => t(n, s, n)), Qe = (e) => B(\n  e,\n  ve\n).flat(2), G = (e, t) => {\n  const n = t(e.list);\n  return {\n    ...e,\n    list: n\n  };\n}, L = (e, t) => ({\n  ...e,\n  pages: e.pages.map((n) => G(n, t))\n}), _e = (e, t) => ({\n  ...e,\n  events: e.events.map((n) => n ? L(n, t) : null)\n}), Me = (e, t) => e.map((n) => G(n, t)), Oe = (e, t) => e.map((n) => L(n, t)), be = (e) => _e(e, (t) => f(t).flat()), et = (e) => Me(\n  e,\n  (t) => f(t).flat()\n), tt = (e) => Oe(e, (t) => f(t).flat()), D = (e, t) => `<${e}:${t}>`, d = () => /<([^<>:]+):([^>]*)>/g, nt = (e, t) => k(e.note, (n, s) => t(n, s, e)), st = (e) => k(e, (t, n) => [t, n]), k = (e, t) => {\n  const n = d(), s = [];\n  let o;\n  for (; (o = n.exec(e)) !== null; )\n    s.push(t(o[1], o[2]));\n  return s;\n}, at = (e, t) => e.replace(d(), (n, s, o) => {\n  const i = t(s, o);\n  return D(s, i);\n}), rt = (e, t) => {\n  const n = d();\n  let s;\n  for (; (s = n.exec(e)) !== null; )\n    if (s[1] === t)\n      return s[2];\n}, ct = (e, t, n) => {\n  const s = d();\n  return e.replace(s, (o, i) => i === t ? D(i, n) : o);\n}, ot = (e) => `code:${e}`, we = \"N\", Re = \"V\", V = (e, t) => `\\\\${e}[${t}]`, He = (e) => V(we, e.id), it = (e) => e.map((t) => ({\n  controlChar: He(t),\n  text: t.name\n})), mt = (e) => e.variables.map((t, n) => ({\n  text: t || \"\",\n  controlChar: V(Re, n)\n})).filter((t) => t.text !== \"\"), Be = /* @__PURE__ */ new Set([\n  \"px\",\n  \"py\",\n  \"x\",\n  \"y\",\n  \"v\",\n  \"n\",\n  \"p\",\n  \"g\",\n  \"c\",\n  \"i\",\n  \"fs\"\n]), ut = (e, t = Be) => {\n  const n = /\\\\([A-Za-z]+)\\[(\\d+)]/g, s = [];\n  let o;\n  for (; (o = n.exec(e)) !== null; ) {\n    const i = o[1].toLowerCase(), W = parseInt(o[2], 10);\n    t.has(i) && s.push({ char: o[1], id: W });\n  }\n  return s;\n}, Ge = (e, t, n) => t.map((s) => n(s, e[s], e)), dt = (e, t, n) => Ge(e, t, n), lt = (e, t) => ({\n  code: e.code,\n  paramIndex: t,\n  value: e.parameters[t]\n}), ht = (e, t) => ({\n  code: e.code,\n  paramIndex: t,\n  value: e.parameters[t]\n}), pt = (e, t) => ({\n  code: e.code,\n  paramIndex: t,\n  value: e.parameters[t]\n});\nexport {\n  v as BaseEventCommandGroup,\n  he as CHOICE_HELP_TEXT,\n  _ as CombinedEventCommandGroup,\n  ne as ERROR_COMMAND_MESSAGE,\n  Xe as ERROR_COMMAND_SCRIPT,\n  se as ERROR_INVALID_HEAD,\n  me as ERROR_MESSAGE,\n  C as SimpleEventCommandGroup,\n  r as callHandler,\n  ot as codeInfoText,\n  g as codeTest,\n  $e as collectMapEvents,\n  De as constructActor,\n  Ve as constructArmor,\n  Fe as constructClass,\n  p as constructDamage,\n  ke as constructEnemy,\n  Pe as constructItem,\n  m as constructParamArray,\n  xe as constructSkill,\n  ze as constructState,\n  We as constructWeapon,\n  ee as createAdvanced,\n  c as createAudio,\n  J as createBasicTerms,\n  ve as createCommandContext,\n  Q as createCommandsArray,\n  Ce as createCommentGroup,\n  q as createCondtion,\n  V as createControlCharFormat,\n  Ke as createEventContext,\n  K as createEventPage,\n  Ye as createMap,\n  ye as createMapEvent,\n  j as createMapEventImage,\n  ge as createMessageGroup,\n  b as createMessages,\n  D as createNoteEntity,\n  Z as createParamNamesArray,\n  fe as createScriptGroup,\n  Ee as createScrlloingTextGroup,\n  Ue as createSystemData,\n  te as createSystemSoundsArray,\n  $ as createTerms,\n  l as createVehicle,\n  He as fromActor,\n  it as fromActors,\n  mt as fromSystem,\n  Qe as gatherEventCommandContext,\n  ut as getControlChars,\n  rt as getNoteValue,\n  w as handleGroupComment,\n  M as handleGroupMessage,\n  R as handleGroupScript,\n  O as handleGroupScrollingText,\n  Se as handlerDispatch,\n  E as isBodyParams,\n  pe as isChoiceHelp,\n  qe as isHeadCommand,\n  oe as isMessageHeader,\n  le as joinCommandBodies,\n  d as makeRegex,\n  je as mapTextCommand,\n  Ne as mappingCommand,\n  Te as mappingCommandList,\n  f as normalizedCommands,\n  et as normalizedCommonEvents,\n  be as normalizedMapData,\n  tt as normalizedTroops,\n  pt as pickCommandParamAudio,\n  ht as pickCommandParamNumber,\n  lt as pickCommandParamString,\n  u as pickCommands,\n  ae as pickComments,\n  I as pickHead,\n  ce as pickMessageHeader,\n  ie as pickMessageWithHead,\n  Ge as pickPropertys,\n  re as pickScripts,\n  de as pickScrollText,\n  ue as pickScrollTextHeader,\n  dt as pickString,\n  Ze as processCommonEvents,\n  H as processEventPages,\n  B as processMapEvents,\n  Je as processTroopEvents,\n  st as readNote,\n  k as readNoteEx,\n  nt as readNoteObject,\n  Me as replaceCommonEvents,\n  G as replaceEventCommands,\n  _e as replaceMapEvents,\n  at as replaceNote,\n  L as replacePages,\n  Oe as replaceTroops,\n  ct as setNoteValue\n};\n//# sourceMappingURL=rpg-data-tools.es.js.map\n","import type { AudioResourcePath } from \"./types\";\r\nimport type {\r\n  AudioFileParams,\r\n  ExtractCommandByParam,\r\n} from \"@sigureya/rpgtypes\";\r\nimport * as RpgTypes from \"@sigureya/rpgtypes\";\r\n\r\nexport const isAudioResource = (path: {\r\n  folder: string;\r\n  fileName: string;\r\n}): path is AudioResourcePath => {\r\n  return (\r\n    path.folder === RpgTypes.FOLDER_AUDIO_SE ||\r\n    path.folder === RpgTypes.FOLDER_AUDIO_BGM ||\r\n    path.folder === RpgTypes.FOLDER_AUDIO_BGS ||\r\n    path.folder === RpgTypes.FOLDER_AUDIO_ME\r\n  );\r\n};\r\n\r\nconst CODE_LIST: ReadonlyArray<RpgTypes.EventCode> = [\r\n  RpgTypes.PLAY_BGM,\r\n  RpgTypes.PLAY_BGS,\r\n  RpgTypes.PLAY_ME,\r\n  RpgTypes.PLAY_SE,\r\n  RpgTypes.CHANGE_BATTLE_BGM,\r\n  RpgTypes.CHANGE_VICTORY_ME,\r\n  RpgTypes.CHANGE_DEFEAT_ME,\r\n  RpgTypes.CHANGE_VEHICLE_ME,\r\n];\r\n\r\nexport const isAudioCommand = (\r\n  command: RpgTypes.EventCommand\r\n): command is ExtractCommandByParam<[AudioFileParams]> => {\r\n  return CODE_LIST.includes(command.code);\r\n};\r\n\r\nexport const audioPathFromCommands = <\r\n  T extends ExtractCommandByParam<[AudioFileParams]>\r\n>(\r\n  command: T\r\n): AudioResourcePath => {\r\n  return {\r\n    folder: folderName(command) || \"\",\r\n    fileName: command.parameters[0].name,\r\n  };\r\n};\r\nconst folderName = <Command extends ExtractCommandByParam<[AudioFileParams]>>(\r\n  command: Command\r\n) => {\r\n  return FOLDER_NAME_TABLE[command.code];\r\n};\r\n\r\nconst FOLDER_NAME_TABLE = {\r\n  [RpgTypes.PLAY_BGM]: RpgTypes.FOLDER_AUDIO_BGM,\r\n  [RpgTypes.PLAY_BGS]: RpgTypes.FOLDER_AUDIO_BGS,\r\n  [RpgTypes.PLAY_ME]: RpgTypes.FOLDER_AUDIO_ME,\r\n  [RpgTypes.PLAY_SE]: RpgTypes.FOLDER_AUDIO_SE,\r\n  [RpgTypes.CHANGE_BATTLE_BGM]: RpgTypes.FOLDER_AUDIO_BGM,\r\n  [RpgTypes.CHANGE_VICTORY_ME]: RpgTypes.FOLDER_AUDIO_ME,\r\n  [RpgTypes.CHANGE_DEFEAT_ME]: RpgTypes.FOLDER_AUDIO_ME,\r\n  [RpgTypes.CHANGE_VEHICLE_ME]: RpgTypes.FOLDER_AUDIO_ME,\r\n} as const;\r\n","import {\r\n  collectMapEvents,\r\n  processCommonEvents,\r\n  processTroopEvents,\r\n} from \"@sigureya/rpg-data-tools\";\r\nimport type {\r\n  Data_CommonEvent,\r\n  Data_Troop,\r\n  EventCommand,\r\n  Map_Audios,\r\n  MapEventContainer,\r\n  MapFileInfo,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type { AudioCommandInfo } from \"./resourcePath\";\r\nimport { audioPathFromCommands, isAudioCommand } from \"./resourcePath\";\r\nimport type { MapAudioList } from \"./types\";\r\n\r\nexport const collectAudioCommands = (\r\n  page: { list: EventCommand[] },\r\n  pageIndex: number,\r\n  event: { id: number }\r\n): AudioCommandInfo[] => {\r\n  return page.list.filter(isAudioCommand).map<AudioCommandInfo>((command) => ({\r\n    code: command.code,\r\n    path: audioPathFromCommands(command),\r\n    pageIndex,\r\n    eventId: event.id,\r\n  }));\r\n};\r\n\r\nexport const extractAudioCFromCommonEvents = (\r\n  events: ReadonlyArray<Data_CommonEvent>\r\n): AudioCommandInfo[] => {\r\n  return processCommonEvents(events, collectAudioCommands).flat(2);\r\n};\r\n\r\nexport const expectAudioFromTroop = (\r\n  troops: ReadonlyArray<Data_Troop>\r\n): AudioCommandInfo[] => {\r\n  return processTroopEvents(troops, collectAudioCommands).flat(2);\r\n};\r\ntype MapType = Map_Audios & MapEventContainer<EventCommand>;\r\nexport const extractAudioFromMap = (map: MapType): MapAudioList => {\r\n  return {\r\n    bgm: map.bgm,\r\n    bgs: map.bgs,\r\n    commands: collectMapEvents(map, collectAudioCommands),\r\n  };\r\n};\r\nexport const extractAudioFromMapFileInfo = <Map extends MapType>(\r\n  map: MapFileInfo<Map>\r\n): MapFileInfo<MapAudioList> => {\r\n  return {\r\n    map: extractAudioFromMap(map.map),\r\n    filename: map.filename,\r\n    editingName: map.editingName,\r\n  };\r\n};\r\n","import type { AudioFileParams, System_AudioFiles } from \"@sigureya/rpgtypes\";\r\nimport type { ExtractedSystemAudio, SystemSoundPath } from \"./types\";\r\n/**\r\n * オーディオファイルのリストをパス情報に変換する\r\n * @param sounds オーディオファイルのリスト\r\n * @returns システムサウンドパスリスト\r\n */\r\nexport const systemAudioFiles = (\r\n  system: System_AudioFiles\r\n): ExtractedSystemAudio => {\r\n  return {\r\n    sounds: extractSoundPaths(system.sounds),\r\n    bgm: extractSoundPaths([system.battleBgm, system.titleBgm]),\r\n    me: extractSoundPaths([\r\n      system.defeatMe,\r\n      system.gameoverMe,\r\n      system.victoryMe,\r\n    ]),\r\n  };\r\n};\r\n\r\nconst extractSoundPaths = (sounds: AudioFileParams[]): SystemSoundPath[] => {\r\n  return sounds.map<SystemSoundPath>((sound, index) => ({\r\n    index,\r\n    path: sound.name,\r\n  }));\r\n};\r\n","import { pickString, readNoteEx } from \"@sigureya/rpg-data-tools\";\r\nimport type * as RpgTypes from \"@sigureya/rpgtypes\";\r\nimport type {\r\n  ExtractedText,\r\n  ExtractedTextItem,\r\n  TextExtractable,\r\n} from \"./types\";\r\n\r\nconst createData = (\r\n  key: string,\r\n  text: string,\r\n  data: { id: number }\r\n): ExtractedTextItem => {\r\n  return { key, text: text, id: data.id };\r\n};\r\n\r\nexport const extractTextData = <\r\n  T extends { id: number; note: string },\r\n  KeyType extends string & keyof RpgTypes.PickByType<T, string>\r\n>(\r\n  data: T & { id: number },\r\n  keyList: ReadonlyArray<KeyType>\r\n): ExtractedText => {\r\n  return {\r\n    main: pickString<ExtractedTextItem, T>(data, keyList, createData),\r\n    note: extractNoteText(data),\r\n  };\r\n};\r\n\r\nexport const extractNoteText = (data: {\r\n  note: string;\r\n  id: number;\r\n}): ExtractedTextItem[] => {\r\n  return readNoteEx(data.note, (key, value) => createData(key, value, data));\r\n};\r\n\r\nexport const extractTextFromActor = (\r\n  actor: TextExtractable<RpgTypes.Data_Actor>\r\n) => {\r\n  return extractTextData(actor, [\"name\", \"nickname\", \"profile\"]);\r\n};\r\n\r\nexport const extractTextFromEnemy = (\r\n  enemy: TextExtractable<RpgTypes.Data_Enemy>\r\n) => {\r\n  return extractTextData(enemy, [\"name\"]);\r\n};\r\n\r\nexport const extractTextFromClass = (\r\n  item: TextExtractable<RpgTypes.Data_Class>\r\n) => {\r\n  return extractTextData(item, [\"name\"]);\r\n};\r\n\r\nexport const extractTextFromSkill = (\r\n  skill: TextExtractable<RpgTypes.Data_Skill>\r\n) => {\r\n  return extractTextData(skill, [\r\n    \"name\",\r\n    \"description\",\r\n    \"message1\",\r\n    \"message2\",\r\n  ]);\r\n};\r\n\r\nexport const extractTextFromItem = (\r\n  item: TextExtractable<RpgTypes.Data_Item>\r\n) => {\r\n  return extractTextData(item, [\"name\", \"description\"]);\r\n};\r\nexport const extractTextFromWeapon = (\r\n  weapon: TextExtractable<RpgTypes.Data_Weapon>\r\n) => {\r\n  return extractTextData(weapon, [\"name\", \"description\"]);\r\n};\r\n\r\nexport const extractTextFromArmor = (\r\n  armor: TextExtractable<RpgTypes.Data_Armor>\r\n) => {\r\n  return extractTextData(armor, [\"name\", \"description\"]);\r\n};\r\n\r\nexport const extractTextFromState = (\r\n  state: TextExtractable<RpgTypes.Data_State>\r\n) => {\r\n  return extractTextData(state, [\r\n    \"name\",\r\n    \"message1\",\r\n    \"message2\",\r\n    \"message3\",\r\n    \"message4\",\r\n  ]);\r\n};\r\n","import type {\r\n  CommandParameter,\r\n  EventCommandGroup_Script,\r\n  TextCommandMapper,\r\n} from \"@sigureya/rpg-data-tools\";\r\nimport {\r\n  mappingCommandList,\r\n  normalizedCommands,\r\n  pickCommandParamString,\r\n  processEventPages,\r\n} from \"@sigureya/rpg-data-tools\";\r\nimport type { EventCommand } from \"@sigureya/rpgtypes\";\r\nimport { type Command_ShowChoices } from \"@sigureya/rpgtypes\";\r\n\r\ntype CommandParam = CommandParameter<string>;\r\nexport const extractTextFromEventCommands = (\r\n  list: ReadonlyArray<EventCommand>\r\n): CommandParam[][] => {\r\n  // メッセージの表示など結合し、1つのコマンドにまとめる\r\n  const normalized = normalizedCommands(list).flat();\r\n  return mappingCommandList(normalized, extractTextMapper);\r\n};\r\nexport const extractTextFromEventPages = (event: {\r\n  pages: { list: EventCommand[] }[];\r\n}): CommandParam[][][] => {\r\n  return processEventPages(event, (page) =>\r\n    extractTextFromEventCommands(page.list)\r\n  );\r\n};\r\n\r\nexport const extractTextMapper: TextCommandMapper<CommandParam[]> = {\r\n  changeName: (command) => [pickCommandParamString(command, 1)],\r\n  changeNickname: (command) => [pickCommandParamString(command, 1)],\r\n  changeProfile: (command) => [pickCommandParamString(command, 1)],\r\n  showChoices: (command) => commandChoice(command),\r\n  showScrollingText: (groop) => {\r\n    return [pickCommandParamString(groop.mergedBody(), 0)];\r\n  },\r\n  showMessage: (data) => {\r\n    const command = data.normalizedCommands();\r\n    const head = pickCommandParamString(command[0], 4);\r\n    const bodyCommand = command[1];\r\n    if (bodyCommand) {\r\n      return [head, pickCommandParamString(bodyCommand, 0)];\r\n    }\r\n    return [head];\r\n  },\r\n  choiceWhen() {\r\n    return [];\r\n  },\r\n  comment(groop) {\r\n    const command = groop.mergedBody();\r\n    return [pickCommandParamString(command, 0)];\r\n  },\r\n  script: (groop) => readScript(groop),\r\n\r\n  other: () => [],\r\n  commentBody: () => [],\r\n};\r\n\r\nexport const readScript = (\r\n  script: EventCommandGroup_Script\r\n): CommandParam[] => {\r\n  return [];\r\n};\r\n\r\nexport const commandChoice = (command: Command_ShowChoices): CommandParam[] => {\r\n  return command.parameters[0].map<CommandParam>((msg, index) => ({\r\n    code: command.code,\r\n    paramIndex: index,\r\n    value: msg,\r\n  }));\r\n};\r\n","import type { CommandParameter } from \"@sigureya/rpg-data-tools\";\r\nimport type {\r\n  Data_CommonEvent,\r\n  Data_Troop,\r\n  MapEvent,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type {\r\n  ExtractedCommonEventText,\r\n  ExtractedMapEventText,\r\n  ExtractedTroopText,\r\n} from \"./types\";\r\nimport { extractNoteText } from \"./mainData\";\r\nimport {\r\n  extractTextFromEventCommands,\r\n  extractTextFromEventPages,\r\n} from \"./eventCommand\";\r\n\r\nexport const correctMapEventText = (\r\n  event: Pick<MapEvent, \"note\" | \"pages\" | \"id\">\r\n): ExtractedMapEventText => {\r\n  const commands: CommandParameter<string>[][][] =\r\n    extractTextFromEventPages(event);\r\n  return {\r\n    note: extractNoteText(event),\r\n    eventId: event.id,\r\n    commands: commands.flat(2),\r\n  };\r\n};\r\n\r\nexport const extractTextFromTroop = (\r\n  troop: Pick<Data_Troop, \"pages\" | \"id\">\r\n): ExtractedTroopText => {\r\n  const commands: CommandParameter<string>[][][] =\r\n    extractTextFromEventPages(troop);\r\n  return {\r\n    troopId: troop.id,\r\n    commands: commands.flat(2),\r\n  };\r\n};\r\n\r\nexport const extractTextFromCommonEvent = (\r\n  event: Pick<Data_CommonEvent, \"list\" | \"id\">\r\n): ExtractedCommonEventText => {\r\n  return {\r\n    eventId: event.id,\r\n    commands: extractTextFromEventCommands(event.list).flat(2),\r\n  };\r\n};\r\n"],"names":["v_","x_","J_","f_","g","t","ne","se","E","u","n","s","o","i","I","ae","S","F","re","T","P","ce","oe","N","ie","x","me","ue","h","A","de","le","v","C","_","he","pe","ge","Ee","Ce","fe","M","w","R","r","Te","Ne","e","a.SHOW_MESSAGE","a.SHOW_MESSAGE_BODY","a.SHOW_SCROLLING_TEXT","a.SHOW_SCROLLING_TEXT_BODY","a.COMMENT","a.COMMENT_BODY","a.SCRIPT_EVAL","a.SCRIPT_EVAL_BODY","a.CONTROL_SWITCHES","a.CONTROL_VARIABLES","a.CONTROL_SELF_SWITCH","a.CONTROL_TIMER","a.CONDITIONAL_BRANCH","a.SHOW_CHOICES","a.SHOW_CHOICES_ITEM","a.CHANGE_NAME","a.CHANGE_PROFILE","a.CHANGE_NICKNAME","a.COMMON_EVENT","a.LABEL","a.LABEL_JUMP","a.CHANGE_BATTLE_BGM","a.CHANGE_VICTORY_ME","a.CHANGE_DEFEAT_ME","a.CHANGE_SAVE_ACCESS","a.CHANGE_MENU_ACCESS","a.CHANGE_ENCOUNTER","a.CHANGE_FORMATION_ACCESS","a.CHANGE_WINDOW_COLOR","a.TINT_SCREEN","a.FLASH_SCREEN","a.SHAKE_SCREEN","a.BATTLE_PROCESSING","a.WAIT","a.CHANGE_ACTOR_IMAGES","a.CHANGE_GOLD","a.SHOW_ANIMATION","a.TRANSFER_PLAYER","a.SET_VEHICLE_LOCATION","a.SET_EVENT_LOCATION","a.GAME_OVER","Ae","f","Ie","H","B","$e","Je","Ze","d","k","Ge","dt","lt","isAudioResource","path","RpgTypes.FOLDER_AUDIO_SE","RpgTypes.FOLDER_AUDIO_BGM","RpgTypes.FOLDER_AUDIO_BGS","RpgTypes.FOLDER_AUDIO_ME","CODE_LIST","RpgTypes.PLAY_BGM","RpgTypes.PLAY_BGS","RpgTypes.PLAY_ME","RpgTypes.PLAY_SE","RpgTypes.CHANGE_BATTLE_BGM","RpgTypes.CHANGE_VICTORY_ME","RpgTypes.CHANGE_DEFEAT_ME","RpgTypes.CHANGE_VEHICLE_ME","isAudioCommand","command","audioPathFromCommands","folderName","FOLDER_NAME_TABLE","collectAudioCommands","page","pageIndex","event","extractAudioCFromCommonEvents","events","processCommonEvents","expectAudioFromTroop","troops","processTroopEvents","extractAudioFromMap","map","collectMapEvents","extractAudioFromMapFileInfo","systemAudioFiles","system","extractSoundPaths","sounds","sound","index","createData","key","text","data","extractTextData","keyList","pickString","extractNoteText","readNoteEx","value","extractTextFromActor","actor","extractTextFromEnemy","enemy","extractTextFromClass","item","extractTextFromSkill","skill","extractTextFromItem","extractTextFromWeapon","weapon","extractTextFromArmor","armor","extractTextFromState","state","extractTextFromEventCommands","list","normalized","normalizedCommands","mappingCommandList","extractTextMapper","extractTextFromEventPages","processEventPages","pickCommandParamString","commandChoice","groop","head","bodyCommand","readScript","script","msg","correctMapEventText","commands","extractTextFromTroop","troop","extractTextFromCommonEvent"],"mappings":"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","x_google_ignoreList":[0,1]}