{"version":3,"file":"rpg-analyzer.cjs.js","sources":["../node_modules/@sigureya/rpgtypes/dist/rpgtypes.es.js","../node_modules/@sigureya/rpg-data-tools/dist/rpg-data-tools.es.js","../src/eventDomain/extract/audio/eventCommand/fromCommand.ts","../src/eventDomain/extract/audio/correctCommands.ts","../src/eventDomain/extract/audio/system/system.ts","../src/eventDomain/extract/text/mainData/mainData.ts","../src/eventDomain/extract/text/eventCommand/getTextFromCommand.ts","../src/eventDomain/extract/text/events.ts","../src/eventDomain/extract/image/mainData/mainData.ts","../src/eventDomain/extract/image/system/system.ts","../src/eventDomain/extract/image/map/eventCommand/fromEventCommands.ts","../src/eventDomain/extract/image/map/collectCommand.ts","../src/eventDomain/extract/image/map/mapData.ts","../src/eventDomain/extract/variable/eventCommand/read/piravate/privateConstants.ts","../src/eventDomain/extract/variable/eventCommand/read/readVariabler.ts","../src/eventDomain/extract/variable/eventCommand/write/writeVariable.ts","../src/eventDomain/extract/variable/eventConditions/eventConditions.ts","../src/eventDomain/extract/variable/correct.ts","../src/eventDomain/extract/eventCall/eventCall.ts","../src/eventDomain/mapEvent.ts"],"sourcesContent":["const E = 0, _ = 1, O = 2, s = 3, t = 32, T = 48, c = 0, R = 101, n = 401, o = 102, A = 402, N = 103, C = 104, S = 105, I = 405, L = 108, M = 408, U = 109, G = 111, H = 411, P = 112, F = 113, D = 115, B = 117, V = 118, W = 119, Y = 121, e = 122, a = 123, K = 124, l = 125, X = 126, b = 127, i = 128, r = 129, m = 132, p = 133, g = 134, k = 135, v = 136, x = 137, J = 138, f = 139, h = 140, u = 201, y = 202, Q = 203, Z = 204, d = 205, j = 206, q = 211, w = 212, z = 213, $ = 214, EE = 216, _E = 217, OE = 221, sE = 222, tE = 223, TE = 224, cE = 225, RE = 230, nE = 231, oE = 232, AE = 233, NE = 234, CE = 235, SE = 236, IE = 241, LE = 242, ME = 243, UE = 244, GE = 245, HE = 246, PE = 249, FE = 250, DE = 251, BE = 261, VE = 282, WE = 283, YE = 284, eE = 285, aE = 301, KE = 302, lE = 605, XE = 303, bE = 311, iE = 312, rE = 313, mE = 314, pE = 315, gE = 320, kE = 321, vE = 322, xE = 323, JE = 324, fE = 325, hE = 331, uE = 332, yE = 333, QE = 334, ZE = 335, dE = 336, jE = 337, qE = 339, wE = 340, zE = 351, $E = 342, E_ = 352, __ = 353, O_ = 354, s_ = 355, t_ = 655, T_ = 356, c_ = 357, R_ = 0, n_ = 1, o_ = 2, A_ = 3, N_ = 4, C_ = 5, S_ = 6, I_ = 7, L_ = 8, M_ = 9, U_ = 10, G_ = 11, H_ = 12, P_ = 13, F_ = 14, D_ = 15, B_ = 16, V_ = 17, W_ = 18, Y_ = 19, e_ = 20, a_ = 21, K_ = 22, l_ = 23, X_ = 24, b_ = 25, i_ = 26, r_ = 27, m_ = 28, p_ = 29, g_ = 30, k_ = 31, v_ = 32, x_ = 33, J_ = 34, f_ = 35, h_ = 36, u_ = 37, y_ = 38, Q_ = 39, Z_ = 40, d_ = 41, j_ = 42, q_ = 43, w_ = 44, z_ = 45, $_ = \"bgm\", EO = \"se\", _O = \"me\", OO = \"bgs\", sO = \"battlebacks1\", tO = \"battlebacks2\", TO = \"characters\", cO = \"enemies\", RO = \"faces\", nO = \"parallaxes\", oO = \"pictures\", AO = \"sv_actors\", NO = \"sv_enemies\", CO = \"system\", SO = \"tilesets\", IO = \"titles1\", LO = \"titles2\";\nexport {\n  wE as ABORT_BATTLE,\n  aE as BATTLE_PROCESSING,\n  vE as CHANGE_ACTOR_IMAGES,\n  i as CHANGE_ARMORS,\n  WE as CHANGE_BATTLE_BACKGROUND,\n  m as CHANGE_BATTLE_BGM,\n  kE as CHANGE_CLASS,\n  f as CHANGE_DEFEAT_ME,\n  v as CHANGE_ENCOUNTER,\n  hE as CHANGE_ENEMY_HP,\n  uE as CHANGE_ENEMY_MP,\n  yE as CHANGE_ENEMY_STATE,\n  $E as CHANGE_ENEMY_TP,\n  pE as CHANGE_EXP,\n  x as CHANGE_FORMATION_ACCESS,\n  l as CHANGE_GOLD,\n  bE as CHANGE_HP,\n  X as CHANGE_ITEMS,\n  k as CHANGE_MENU_ACCESS,\n  iE as CHANGE_MP,\n  gE as CHANGE_NAME,\n  JE as CHANGE_NICKNAME,\n  YE as CHANGE_PARALLAX,\n  r as CHANGE_PARTY_MEMBER,\n  EE as CHANGE_PLAYER_FOLLOWERS,\n  fE as CHANGE_PROFILE,\n  g as CHANGE_SAVE_ACCESS,\n  VE as CHANGE_TILESET,\n  rE as CHANGE_TP,\n  q as CHANGE_TRANSPARENCY,\n  h as CHANGE_VEHICLE_BGM,\n  xE as CHANGE_VEHICLE_IMAGE,\n  p as CHANGE_VICTORY_ME,\n  b as CHANGE_WEAPONS,\n  J as CHANGE_WINDOW_COLOR,\n  L as COMMENT,\n  M as COMMENT_BODY,\n  B as COMMON_EVENT,\n  G as CONDITIONAL_BRANCH,\n  H as CONDITIONAL_BRANCH_ELSE,\n  a as CONTROL_SELF_SWITCH,\n  Y as CONTROL_SWITCHES,\n  K as CONTROL_TIMER,\n  e as CONTROL_VARIABLES,\n  ZE as ENEMY_APPEAR,\n  QE as ENEMY_RECOVER_ALL,\n  dE as ENEMY_TRANSFORM,\n  $ as ERASE_EVENT,\n  CE as ERASE_PICTURE,\n  D as EXIT_EVENT_PROCESSING,\n  sE as FADEIN_SCREEN,\n  LE as FADEOUT_BGM,\n  HE as FADEOUT_BGS,\n  OE as FADEOUT_SCREEN,\n  E as FLAG_ID_AUTO_BATTLE,\n  _ as FLAG_ID_GUARD,\n  s as FLAG_ID_PRESERVE_TP,\n  O as FLAG_ID_SUBSTITUTE,\n  TE as FLASH_SCREEN,\n  $_ as FOLDER_AUDIO_BGM,\n  OO as FOLDER_AUDIO_BGS,\n  _O as FOLDER_AUDIO_ME,\n  EO as FOLDER_AUDIO_SE,\n  sO as FOLDER_IMG_BATTLEBACK1,\n  tO as FOLDER_IMG_BATTLEBACK2,\n  TO as FOLDER_IMG_CHACTERS,\n  cO as FOLDER_IMG_ENEMIES,\n  RO as FOLDER_IMG_FACES,\n  nO as FOLDER_IMG_PARALLACES,\n  oO as FOLDER_IMG_PICTURES,\n  AO as FOLDER_IMG_SV_ACTORS,\n  NO as FOLDER_IMG_SV_ENEMIES,\n  CO as FOLDER_IMG_SYSTEM,\n  SO as FOLDER_IMG_TILESETS,\n  IO as FOLDER_IMG_TITLES1,\n  LO as FOLDER_IMG_TITLES2,\n  qE as FORCE_ACTION,\n  __ as GAME_OVER,\n  _E as GATHER_FOLLOWERS,\n  eE as GET_LOCATION_INFO,\n  j as GET_ONOFF_VEHICLE,\n  t as ICON_BUFF_START,\n  T as ICON_DEBUFF_START,\n  N as INPUT_NUMBER,\n  V as LABEL,\n  W as LABEL_JUMP,\n  P as LOOP,\n  F as LOOP_BREAK,\n  oE as MOVE_PICTURE,\n  XE as NAME_INPUT_PROCESSING,\n  c as NO_OPERATION,\n  zE as OPEN_MENU_SCREEN,\n  E_ as OPEN_SAVE_SCREEN,\n  IE as PLAY_BGM,\n  GE as PLAY_BGS,\n  PE as PLAY_ME,\n  BE as PLAY_MOVIE,\n  FE as PLAY_SE,\n  T_ as PLUGIN_COMMAND_MV,\n  c_ as PLUGIN_COMMAND_MZ,\n  mE as RECOVER_ALL,\n  UE as RESUME_BGM,\n  O_ as RETURN_TO_TITLE_SCREEN,\n  AE as ROTATE_PICTURE,\n  q_ as ROUTE_CHANGE_BLEND_MODE,\n  g_ as ROUTE_CHANGE_FREQ,\n  d_ as ROUTE_CHANGE_IMAGE,\n  j_ as ROUTE_CHANGE_OPACITY,\n  p_ as ROUTE_CHANGE_SPEED,\n  h_ as ROUTE_DIR_FIX_OFF,\n  f_ as ROUTE_DIR_FIX_ON,\n  R_ as ROUTE_END,\n  F_ as ROUTE_JUMP,\n  G_ as ROUTE_MOVE_AWAY,\n  P_ as ROUTE_MOVE_BACKWARD,\n  n_ as ROUTE_MOVE_DOWN,\n  H_ as ROUTE_MOVE_FORWARD,\n  o_ as ROUTE_MOVE_LEFT,\n  C_ as ROUTE_MOVE_LOWER_L,\n  S_ as ROUTE_MOVE_LOWER_R,\n  M_ as ROUTE_MOVE_RANDOM,\n  A_ as ROUTE_MOVE_RIGHT,\n  U_ as ROUTE_MOVE_TOWARD,\n  N_ as ROUTE_MOVE_UP,\n  I_ as ROUTE_MOVE_UPPER_L,\n  L_ as ROUTE_MOVE_UPPER_R,\n  w_ as ROUTE_PLAY_SE,\n  z_ as ROUTE_SCRIPT,\n  J_ as ROUTE_STEP_ANIME_OFF,\n  x_ as ROUTE_STEP_ANIME_ON,\n  m_ as ROUTE_SWITCH_OFF,\n  r_ as ROUTE_SWITCH_ON,\n  y_ as ROUTE_THROUGH_OFF,\n  u_ as ROUTE_THROUGH_ON,\n  Z_ as ROUTE_TRANSPARENT_OFF,\n  Q_ as ROUTE_TRANSPARENT_ON,\n  K_ as ROUTE_TURN_180D,\n  a_ as ROUTE_TURN_90D_L,\n  e_ as ROUTE_TURN_90D_R,\n  l_ as ROUTE_TURN_90D_R_L,\n  i_ as ROUTE_TURN_AWAY,\n  B_ as ROUTE_TURN_DOWN,\n  V_ as ROUTE_TURN_LEFT,\n  X_ as ROUTE_TURN_RANDOM,\n  W_ as ROUTE_TURN_RIGHT,\n  b_ as ROUTE_TURN_TOWARD,\n  Y_ as ROUTE_TURN_UP,\n  D_ as ROUTE_WAIT,\n  v_ as ROUTE_WALK_ANIME_OFF,\n  k_ as ROUTE_WALK_ANIME_ON,\n  ME as SAVE_BGM,\n  s_ as SCRIPT_EVAL,\n  t_ as SCRIPT_EVAL_BODY,\n  Z as SCROLL_MAP,\n  C as SELECT_ITEM,\n  Q as SET_EVENT_LOCATION,\n  d as SET_MOVEMENT_ROUTE,\n  y as SET_VEHICLE_LOCATION,\n  SE as SET_WEATHER_EFFECT,\n  cE as SHAKE_SCREEN,\n  KE as SHOP_PROCESSING,\n  lE as SHOP_PROCESSING_BODY,\n  w as SHOW_ANIMATION,\n  z as SHOW_BALLOON_ICON,\n  jE as SHOW_BATTLE_ANIMATION,\n  o as SHOW_CHOICES,\n  A as SHOW_CHOICES_ITEM,\n  R as SHOW_MESSAGE,\n  n as SHOW_MESSAGE_BODY,\n  nE as SHOW_PICTURE,\n  S as SHOW_SCROLLING_TEXT,\n  I as SHOW_SCROLLING_TEXT_BODY,\n  U as SKIP,\n  DE as STOP_SE,\n  NE as TINT_PICTURE,\n  tE as TINT_SCREEN,\n  u as TRANSFER_PLAYER,\n  RE as WAIT\n};\n//# sourceMappingURL=rpgtypes.es.js.map\n","import * as r from \"@sigureya/rpgtypes\";\nimport { COMMENT as T, COMMENT_BODY as Y, SCRIPT_EVAL as S, SCRIPT_EVAL_BODY as U, SHOW_MESSAGE as f, SHOW_MESSAGE_BODY as z, SHOW_SCROLLING_TEXT as l, SHOW_SCROLLING_TEXT_BODY as _, CHANGE_NICKNAME as X, CHANGE_PROFILE as q, CHANGE_NAME as x, SHOW_CHOICES_ITEM as K, SHOW_CHOICES as j } from \"@sigureya/rpgtypes\";\nconst m = () => [0, 0, 0, 0, 0, 0, 0, 0], ke = (e) => ({\n  id: 0,\n  name: \"\",\n  nickname: \"\",\n  profile: \"\",\n  note: \"\",\n  classId: 0,\n  initialLevel: 1,\n  maxLevel: 99,\n  characterIndex: 0,\n  characterName: \"\",\n  faceIndex: 0,\n  faceName: \"\",\n  battlerName: \"\",\n  traits: [],\n  equips: [],\n  ...e\n}), We = (e) => ({\n  battlerHue: 0,\n  id: 0,\n  name: \"\",\n  note: \"\",\n  battlerName: \"\",\n  traits: [],\n  params: m(),\n  exp: 0,\n  gold: 0,\n  dropItems: [],\n  actions: [],\n  ...e\n}), Fe = (e) => ({\n  price: 0,\n  id: 0,\n  name: \"\",\n  note: \"\",\n  iconIndex: 0,\n  description: \"\",\n  etypeId: 0,\n  params: m(),\n  traits: [],\n  ...e\n}), Ye = (e) => ({\n  price: 0,\n  id: 0,\n  name: \"\",\n  note: \"\",\n  iconIndex: 0,\n  description: \"\",\n  etypeId: 0,\n  wtypeId: 0,\n  params: m(),\n  traits: [],\n  damage: E(),\n  ...e\n}), Ue = (e) => ({\n  id: 0,\n  name: \"\",\n  note: \"\",\n  traits: [],\n  learnings: [],\n  params: m(),\n  expParams: [],\n  ...e\n}), E = (e) => ({\n  type: 0,\n  elementId: 0,\n  formula: \"0\",\n  variance: 20,\n  critical: !1,\n  ...e\n}), ze = (e) => ({\n  id: 0,\n  name: \"\",\n  iconIndex: 0,\n  description: \"\",\n  note: \"\",\n  price: 0,\n  consumable: !1,\n  scope: 0,\n  occasion: 0,\n  speed: 0,\n  successRate: 100,\n  repeats: 1,\n  tpGain: 0,\n  hitType: 0,\n  animationId: 0,\n  damage: E(),\n  effects: [],\n  ...e\n}), Xe = (e) => ({\n  animationId: 0,\n  damage: E(),\n  description: \"\",\n  hitType: 0,\n  iconIndex: 0,\n  id: 0,\n  message1: \"\",\n  message2: \"\",\n  mpCost: 0,\n  name: \"\",\n  note: \"\",\n  occasion: 0,\n  repeats: 1,\n  requiredWtypeId1: 0,\n  requiredWtypeId2: 0,\n  scope: 0,\n  speed: 0,\n  stypeId: 0,\n  successRate: 100,\n  tpCost: 0,\n  tpGain: 0,\n  effects: [],\n  messageType: 0,\n  ...e\n}), qe = (e) => ({\n  id: 0,\n  name: \"\",\n  iconIndex: 0,\n  restriction: 0,\n  priority: 50,\n  motion: 0,\n  overlay: 0,\n  removeAtBattleEnd: !1,\n  removeByRestriction: !1,\n  autoRemovalTiming: 0,\n  minTurns: 1,\n  maxTurns: 1,\n  removeByDamage: !1,\n  chanceByDamage: 100,\n  removeByWalking: !1,\n  stepsToRemove: 100,\n  message1: \"\",\n  message2: \"\",\n  message3: \"\",\n  message4: \"\",\n  traits: [],\n  note: \"\",\n  ...e\n}), xe = (e) => ({\n  autoplayBgm: !0,\n  autoplayBgs: !1,\n  battleback1Name: \"\",\n  battleback2Name: \"\",\n  data: [],\n  disableDashing: !1,\n  displayName: \"\",\n  encounterList: [],\n  events: [],\n  height: 0,\n  note: \"\",\n  width: 0,\n  x: 0,\n  y: 0,\n  parallaxName: \"\",\n  parallaxLoopX: !1,\n  parallaxLoopY: !1,\n  parallaxShow: !1,\n  parallaxSx: 0,\n  parallaxSy: 0,\n  ...e\n}), Ke = (e) => ({\n  id: 0,\n  name: \"\",\n  note: \"\",\n  x: 0,\n  y: 0,\n  pages: [y()],\n  ...e\n}), $ = (e) => ({\n  actorId: 0,\n  actorValid: !1,\n  itemId: 0,\n  itemValid: !1,\n  selfSwitchCh: \"\",\n  selfSwitchValid: !1,\n  switch1Id: 0,\n  switch1Valid: !1,\n  switch2Id: 0,\n  switch2Valid: !1,\n  variableId: 0,\n  variableValid: !1,\n  variableValue: 0,\n  ...e\n}), J = (e) => ({\n  characterIndex: 0,\n  characterName: \"\",\n  direction: 6,\n  pattern: 0,\n  tileId: 0,\n  ...e\n}), y = (e) => ({\n  conditions: $(),\n  image: J(),\n  moveRoute: {\n    list: [],\n    repeat: !1,\n    wait: !1,\n    skippable: !1\n  },\n  directionFix: !1,\n  moveFrequency: 0,\n  list: [],\n  ...e\n}), a = (e = {}) => ({\n  name: e.name ?? \"\",\n  volume: e.volume ?? 90,\n  pitch: e.pitch ?? 100,\n  pan: e.pan ?? 0\n}), je = (e, t, n = 0) => ({\n  code: e,\n  parameters: [a({ name: t })],\n  indent: n\n}), $e = (e = {}) => ({\n  local: e.local ?? \"\",\n  gameTitle: e.gameTitle ?? \"\",\n  currencyUnit: e.currencyUnit ?? \"\",\n  title1Name: e.title1Name ?? \"\",\n  terms: e.terms ?? Z(),\n  title2Name: e.title2Name ?? \"\",\n  optAutosave: e.optAutosave ?? !1,\n  attackMotions: e.attackMotions ?? [],\n  startMapId: e.startMapId ?? 0,\n  startX: e.startX ?? 0,\n  startY: e.startY ?? 0,\n  switches: e.switches ?? [],\n  windowTone: e.windowTone ?? [0, 0, 0, 0],\n  editMapId: e.editMapId ?? 0,\n  testTroopId: e.testTroopId ?? 0,\n  testBattlers: e.testBattlers ?? [],\n  versionId: e.versionId ?? 0,\n  advanced: e.advanced ?? ne(),\n  armorTypes: e.armorTypes ?? [],\n  elements: e.elements ?? [],\n  variables: e.variables ?? [],\n  equipTypes: e.equipTypes ?? [],\n  sounds: e.sounds ?? se(),\n  titleBgm: e.titleBgm ?? a(),\n  gameoverMe: e.gameoverMe ?? a(),\n  battleBgm: e.battleBgm ?? a(),\n  defeatMe: e.defeatMe ?? a(),\n  victoryMe: e.victoryMe ?? a(),\n  battleback1Name: e.battleback1Name ?? \"\",\n  battleback2Name: e.battleback2Name ?? \"\",\n  battlerName: e.battlerName ?? \"\",\n  weaponTypes: e.weaponTypes ?? [],\n  skillTypes: e.skillTypes ?? [],\n  optDisplayTp: e.optDisplayTp ?? !1,\n  optDrawTitle: e.optDrawTitle ?? !1,\n  optExtraExp: e.optExtraExp ?? !1,\n  optFloorDeath: e.optFloorDeath ?? !1,\n  optFollowers: e.optFollowers ?? !1,\n  optKeyItemsNumber: e.optKeyItemsNumber ?? !1,\n  optSideView: e.optSideView ?? !1,\n  optSlipDeath: e.optSlipDeath ?? !1,\n  optTransparent: e.optTransparent ?? !1,\n  boat: e.boat ?? d(),\n  ship: e.ship ?? d(),\n  airship: e.airship ?? d(),\n  tileSize: e.tileSize ?? 0\n}), Z = (e = {}) => ({\n  messages: te(e.messages ?? {}),\n  commands: ee(e.commands ?? {}),\n  params: b(e.params ?? {}),\n  basic: Q(e.basic ?? {})\n}), Q = (e = {}) => [\n  e.level ?? \"\",\n  e.levelA ?? \"\",\n  e.hp ?? \"\",\n  e.hpA ?? \"\",\n  e.mp ?? \"\",\n  e.mpA ?? \"\",\n  e.tp ?? \"\",\n  e.tpA ?? \"\",\n  e.experience ?? \"\",\n  e.exp ?? \"\"\n], b = (e = {}) => [\n  e.mhp ?? \"\",\n  e.mmp ?? \"\",\n  e.atk ?? \"\",\n  e.def ?? \"\",\n  e.mat ?? \"\",\n  e.mdf ?? \"\",\n  e.agi ?? \"\",\n  e.luk ?? \"\",\n  e.hit ?? \"\",\n  e.eva ?? \"\"\n], ee = (e = {}) => [\n  e.fight ?? \"\",\n  e.escape ?? \"\",\n  e.attack ?? \"\",\n  e.guard ?? \"\",\n  e.item ?? \"\",\n  e.skill ?? \"\",\n  e.equip ?? \"\",\n  e.status ?? \"\",\n  e.formation ?? \"\",\n  e.save ?? \"\",\n  e.gameEnd ?? \"\",\n  e.options ?? \"\",\n  e.weapon ?? \"\",\n  e.armor ?? \"\",\n  e.keyItem ?? \"\",\n  e.equip2 ?? \"\",\n  e.optimize ?? \"\",\n  e.clear ?? \"\",\n  e.newGame ?? \"\",\n  e.continue_ ?? \"\",\n  e.notUsed20 ?? \"\",\n  e.toTitle ?? \"\",\n  e.cancel ?? \"\",\n  e.notUsed23 ?? \"\",\n  e.buy ?? \"\",\n  e.sell ?? \"\"\n], te = (e = {}) => ({\n  alwaysDash: e.alwaysDash ?? \"\",\n  commandRemember: e.commandRemember ?? \"\",\n  touchUI: e.touchUI ?? \"\",\n  bgmVolume: e.bgmVolume ?? \"\",\n  bgsVolume: e.bgsVolume ?? \"\",\n  meVolume: e.meVolume ?? \"\",\n  seVolume: e.seVolume ?? \"\",\n  possession: e.possession ?? \"\",\n  expTotal: e.expTotal ?? \"\",\n  expNext: e.expNext ?? \"\",\n  saveMessage: e.saveMessage ?? \"\",\n  loadMessage: e.loadMessage ?? \"\",\n  file: e.file ?? \"\",\n  autosave: e.autosave ?? \"\",\n  partyName: e.partyName ?? \"\",\n  emerge: e.emerge ?? \"\",\n  preemptive: e.preemptive ?? \"\",\n  surprise: e.surprise ?? \"\",\n  escapeStart: e.escapeStart ?? \"\",\n  escapeFailure: e.escapeFailure ?? \"\",\n  victory: e.victory ?? \"\",\n  defeat: e.defeat ?? \"\",\n  obtainExp: e.obtainExp ?? \"\",\n  obtainGold: e.obtainGold ?? \"\",\n  obtainItem: e.obtainItem ?? \"\",\n  levelUp: e.levelUp ?? \"\",\n  obtainSkill: e.obtainSkill ?? \"\",\n  useItem: e.useItem ?? \"\",\n  criticalToEnemy: e.criticalToEnemy ?? \"\",\n  criticalToActor: e.criticalToActor ?? \"\",\n  actorDamage: e.actorDamage ?? \"\",\n  actorRecovery: e.actorRecovery ?? \"\",\n  actorGain: e.actorGain ?? \"\",\n  actorLoss: e.actorLoss ?? \"\",\n  actorDrain: e.actorDrain ?? \"\",\n  actorNoDamage: e.actorNoDamage ?? \"\",\n  actorNoHit: e.actorNoHit ?? \"\",\n  enemyDamage: e.enemyDamage ?? \"\",\n  enemyRecovery: e.enemyRecovery ?? \"\",\n  enemyGain: e.enemyGain ?? \"\",\n  enemyLoss: e.enemyLoss ?? \"\",\n  enemyDrain: e.enemyDrain ?? \"\",\n  enemyNoDamage: e.enemyNoDamage ?? \"\",\n  enemyNoHit: e.enemyNoHit ?? \"\",\n  evasion: e.evasion ?? \"\",\n  magicEvasion: e.magicEvasion ?? \"\",\n  magicReflection: e.magicReflection ?? \"\",\n  counterAttack: e.counterAttack ?? \"\",\n  substitute: e.substitute ?? \"\",\n  buffAdd: e.buffAdd ?? \"\",\n  debuffAdd: e.debuffAdd ?? \"\",\n  buffRemove: e.buffRemove ?? \"\",\n  actionFailure: e.actionFailure ?? \"\"\n}), ne = (e = {}) => ({\n  gameId: e.gameId ?? 0,\n  screenWidth: e.screenWidth ?? 0,\n  screenHeight: e.screenHeight ?? 0,\n  uiAreaWidth: e.uiAreaWidth ?? 0,\n  uiAreaHeight: e.uiAreaHeight ?? 0,\n  windowOpacity: e.windowOpacity ?? 0,\n  screenScale: e.screenScale ?? 0,\n  numberFontFilename: e.numberFontFilename ?? \"\",\n  mainFontFilename: e.mainFontFilename ?? \"\",\n  fallbackFonts: e.fallbackFonts ?? \"\",\n  fontSize: e.fontSize ?? 0\n}), d = (e = {}) => ({\n  bgm: e.bgm ?? a(),\n  characterIndex: e.characterIndex ?? 0,\n  characterName: e.characterName ?? \"\",\n  startMapId: e.startMapId ?? 0,\n  startX: e.startX ?? 0,\n  startY: e.startY ?? 0\n}), se = (e = {}) => [\n  e.cursor ?? a(),\n  e.ok ?? a(),\n  e.cancel ?? a(),\n  e.buzzer ?? a(),\n  e.equip ?? a(),\n  e.save ?? a(),\n  e.load ?? a(),\n  e.battleStart ?? a(),\n  e.escape ?? a(),\n  e.enemyAttack ?? a(),\n  e.enemyDamage ?? a(),\n  e.enemyCollapse ?? a(),\n  e.bossCollapse1 ?? a(),\n  e.bossCollapse2 ?? a(),\n  e.actorDamage ?? a(),\n  e.actorCollapse ?? a(),\n  e.playRecovery ?? a(),\n  e.playMiss ?? a(),\n  e.playEvasion ?? a(),\n  e.playMagicEvasion ?? a(),\n  e.playReflection ?? a(),\n  e.shop ?? a(),\n  e.useItem ?? a(),\n  e.useSkill ?? a()\n], p = (e, t) => t ? e === t.code : !1, re = \"MessageHeader invalid command\", Je = \"Script invalid command\", ce = \"Invalid Head\", C = (e) => typeof e[0] == \"string\" && e.length === 1, ye = (e, t) => t ? e === t.code && C(t.parameters) : !1, u = (e, t, n) => {\n  const s = [];\n  for (let o = n; o < t.length; o++) {\n    const i = t[o];\n    if (p(e, i) && C(i.parameters))\n      s.push({\n        code: e,\n        indent: i.indent,\n        parameters: [i.parameters[0]]\n      });\n    else\n      break;\n  }\n  return s;\n}, N = (e, t, n) => {\n  const s = e[t];\n  if (s && p(n, s) && C(s.parameters))\n    return {\n      code: n,\n      indent: s.indent,\n      parameters: [s.parameters[0]]\n    };\n  throw new Error(ce, { cause: s });\n}, ae = (e, t) => ({\n  head: N(e, t, T),\n  bodys: u(Y, e, t + 1)\n}), oe = (e, t) => ({\n  head: N(e, t, S),\n  bodys: u(U, e, t + 1)\n}), ie = (e, t) => {\n  const n = e[t];\n  if (n && me(n))\n    return n;\n  throw new Error(re, { cause: n });\n}, me = (e) => !e || e.code !== f || ![4, 5].includes(e.parameters.length) ? !1 : typeof e.parameters[0] == \"string\" && typeof e.parameters[1] == \"number\" && typeof e.parameters[2] == \"number\" && typeof e.parameters[3] == \"number\", ue = (e, t) => ({\n  head: ie(e, t),\n  bodys: u(z, e, t + 1)\n}), he = \"ScrollTextHeader invalid command\", de = (e, t) => {\n  const n = e[t];\n  if (p(l, n))\n    return n;\n  const s = {\n    headCode: l,\n    bodyCode: _,\n    index: t\n  };\n  throw new Error(he, { cause: s });\n}, le = (e, t) => ({\n  head: de(e, t),\n  bodys: u(_, e, t + 1)\n}), Ee = (e, t = `\n`) => e.map((n) => n.parameters[0]).join(t);\nclass I {\n  constructor(t, n) {\n    this.header = t, this.bodies = n;\n  }\n  getBodyText(t = `\n`) {\n    return Ee(this.getExpandedBodies(), t);\n  }\n  jopinHedderAndBody() {\n    return [this.header, ...this.bodies];\n  }\n  joinCommandBodies() {\n    return this.getExpandedBodies();\n  }\n}\nclass g extends I {\n  constructor(t, n, s) {\n    super(n, s), this.bodyCode = t;\n  }\n  getExpandedBodies() {\n    return this.bodies;\n  }\n  normalizedCommands() {\n    const t = {\n      ...this.header,\n      code: this.header.code,\n      indent: this.header.indent,\n      parameters: [...this.header.parameters]\n    };\n    return this.bodies.length === 0 ? [t] : [t, this.mergedBody()];\n  }\n  mergedBody() {\n    return {\n      code: this.bodyCode,\n      indent: this.header.indent,\n      parameters: [this.getBodyText()]\n    };\n  }\n}\nclass M extends I {\n  getExpandedBodies() {\n    return [this.header, ...this.bodies];\n  }\n  mergedBody() {\n    return {\n      code: this.header.code,\n      indent: this.header.indent,\n      parameters: [this.getBodyText()]\n    };\n  }\n  normalizedCommands() {\n    return [this.mergedBody()];\n  }\n}\nconst pe = \"選択肢ヘルプ\", Ce = (e) => e.parameters[0] === pe, ge = (e, t = []) => new g(401, e, t), Ae = (e, t = []) => new g(405, e, t), Te = (e, t = []) => Ce(e) ? new g(\n  408,\n  e,\n  t\n) : new M(\n  e,\n  t\n), Se = (e, t = []) => new M(e, t), v = (e, t, n) => {\n  const s = ue(e, t), o = ge(s.head, s.bodys);\n  return n(o);\n}, O = (e, t, n) => {\n  const s = le(e, t), o = Ae(s.head, s.bodys);\n  return n(o);\n}, H = (e, t, n) => {\n  const s = ae(e, t), o = Te(s.head, s.bodys);\n  return n(o);\n}, R = (e, t, n) => {\n  const s = oe(e, t), o = Se(s.head, s.bodys);\n  return n(o);\n}, fe = (e, t, n) => {\n  const s = e[t];\n  switch (s.code) {\n    case f:\n      return v(e, t, n.showMessage);\n    case l:\n      return O(e, t, n.showScrollingText);\n    case T:\n      return H(e, t, n.comment);\n    case S:\n      return R(e, t, n.script);\n    case j:\n      return n.showChoices(s, t, e);\n    case K:\n      return n.choiceWhen(s, t, e);\n    case x:\n      return n.changeName(s, t, e);\n    case q:\n      return n.changeProfile(s, t, e);\n    case X:\n      return n.changeNickname(s, t, e);\n    default:\n      return n.other(s, t, e);\n  }\n}, Ze = (e, t) => e.map(\n  (n, s, o) => fe(o, s, t)\n), c = (e, t, n, s, o) => s ? s(e, t, n) : o(e, t, n), _e = (e, t) => e.map((n, s) => G(e, s, t)), Qe = (e, t) => e.flatMap((n, s) => G(e, s, t)), G = (e, t, n) => {\n  const s = e[t];\n  switch (s.code) {\n    // メッセージ関連\n    case r.SHOW_MESSAGE:\n      return n.showMessage ? v(e, t, n.showMessage) : n.other(s, t, e);\n    case r.SHOW_MESSAGE_BODY:\n      return c(s, t, e, n.showMessageBody, n.other);\n    case r.SHOW_SCROLLING_TEXT:\n      return n.showScrollingText ? O(e, t, n.showScrollingText) : n.other(s, t, e);\n    case r.SHOW_SCROLLING_TEXT_BODY:\n      return c(s, t, e, n.showScrollingTextBody, n.other);\n    case r.SHOW_CHOICES:\n      return c(s, t, e, n.showChoices, n.other);\n    case r.SHOW_CHOICES_ITEM:\n      return c(s, t, e, n.choiceWhen, n.other);\n    // コメント・スクリプト関連\n    case r.COMMENT:\n      return n.comment ? H(e, t, n.comment) : n.other(s, t, e);\n    case r.COMMENT_BODY:\n      return c(s, t, e, n.commentBody, n.other);\n    case r.SCRIPT_EVAL:\n      return n.script ? R(e, t, n.script) : n.other(s, t, e);\n    case r.SCRIPT_EVAL_BODY:\n      return c(s, t, e, n.scriptBody, n.other);\n    // 条件・制御系\n    case r.CONDITIONAL_BRANCH:\n      return c(s, t, e, n.conditionalBranch, n.other);\n    case r.CONTROL_SWITCHES:\n      return c(s, t, e, n.controlSwitch, n.other);\n    case r.CONTROL_VARIABLES:\n      return c(s, t, e, n.controlVariable, n.other);\n    case r.CONTROL_SELF_SWITCH:\n      return c(s, t, e, n.controlSelfSwitch, n.other);\n    case r.CONTROL_TIMER:\n      return c(s, t, e, n.controlTimer, n.other);\n    case r.COMMON_EVENT:\n      return c(s, t, e, n.commonEvent, n.other);\n    // メニュー\n    case r.CHANGE_SAVE_ACCESS:\n      return c(s, t, e, n.changeSaveAccess, n.other);\n    case r.CHANGE_MENU_ACCESS:\n      return c(s, t, e, n.changeMenuAccess, n.other);\n    case r.CHANGE_ENCOUNTER:\n      return c(s, t, e, n.changeEncounter, n.other);\n    case r.CHANGE_FORMATION_ACCESS:\n      return c(s, t, e, n.changeFormationAccess, n.other);\n    // キャラクター情報変更\n    case r.CHANGE_NAME:\n      return c(s, t, e, n.changeName, n.other);\n    case r.CHANGE_PROFILE:\n      return c(s, t, e, n.changeProfile, n.other);\n    case r.CHANGE_NICKNAME:\n      return c(s, t, e, n.changeNickname, n.other);\n    case r.CHANGE_ACTOR_IMAGES:\n      return c(s, t, e, n.changeActorImages, n.other);\n    case r.CHANGE_VEHICLE_IMAGE:\n      return c(s, t, e, n.changeVehicleImage, n.other);\n    // BGM・音楽関連\n    case r.CHANGE_BATTLE_BGM:\n      return c(s, t, e, n.changeBattleBGM, n.other);\n    case r.CHANGE_VICTORY_ME:\n      return c(s, t, e, n.changeVictoryME, n.other);\n    case r.CHANGE_DEFEAT_ME:\n      return c(s, t, e, n.changeDefeatME, n.other);\n    case r.PLAY_BGM:\n      return c(s, t, e, n.playBGM, n.other);\n    case r.FADEOUT_BGM:\n      return c(s, t, e, n.fadeOutBGM, n.other);\n    case r.PLAY_SE:\n      return c(s, t, e, n.playSE, n.other);\n    case r.STOP_SE:\n      return c(s, t, e, n.stopSE, n.other);\n    case r.PLAY_ME:\n      return c(s, t, e, n.playME, n.other);\n    // ラベル・ジャンプ\n    case r.LABEL:\n      return c(s, t, e, n.label, n.other);\n    case r.LABEL_JUMP:\n      return c(s, t, e, n.labelJump, n.other);\n    // 画面演出\n    case r.CHANGE_WINDOW_COLOR:\n      return c(s, t, e, n.changeWindowColor, n.other);\n    case r.TINT_SCREEN:\n      return c(s, t, e, n.tintScreen, n.other);\n    case r.FLASH_SCREEN:\n      return c(s, t, e, n.flashScreen, n.other);\n    case r.SHAKE_SCREEN:\n      return c(s, t, e, n.shakeScreen, n.other);\n    // ピクチャー\n    case r.SHOW_PICTURE:\n      return c(s, t, e, n.showPicture, n.other);\n    case r.MOVE_PICTURE:\n      return c(s, t, e, n.movePicture, n.other);\n    case r.ROTATE_PICTURE:\n      return c(s, t, e, n.rotatePicture, n.other);\n    case r.TINT_PICTURE:\n      return c(s, t, e, n.tintPicture, n.other);\n    case r.ERASE_PICTURE:\n      return c(s, t, e, n.erasePicture, n.other);\n    // ゲーム進行\n    case r.BATTLE_PROCESSING:\n      return c(s, t, e, n.battleProcessing, n.other);\n    case r.WAIT:\n      return c(s, t, e, n.wait, n.other);\n    case r.GAME_OVER:\n      return c(s, t, e, n.gameover, n.other);\n    // 未整理\n    case r.CHANGE_PARALLAX:\n      return c(s, t, e, n.changeParallax, n.other);\n    case r.CHANGE_BATTLE_BACKGROUND:\n      return c(s, t, e, n.changeBattleBackground, n.other);\n    case r.PLAY_MOVIE:\n      return c(s, t, e, n.playMovie, n.other);\n    case r.CHANGE_TRANSPARENCY:\n      return c(s, t, e, n.changeTransparency, n.other);\n    case r.SET_WEATHER_EFFECT:\n      return c(s, t, e, n.setWeatherEffects, n.other);\n    case r.CHANGE_GOLD:\n      return c(s, t, e, n.changeGold, n.other);\n    case r.SHOW_ANIMATION:\n      return c(s, t, e, n.showAnimation, n.other);\n    case r.TRANSFER_PLAYER:\n      return c(s, t, e, n.transferPlayer, n.other);\n    case r.SET_VEHICLE_LOCATION:\n      return c(s, t, e, n.setVehicleLocation, n.other);\n    case r.SET_EVENT_LOCATION:\n      return c(s, t, e, n.setEventLocation, n.other);\n    default:\n      return n.other(s, t, e);\n  }\n}, Ne = {\n  // body部分は空の要素で置き換える\n  commentBody: () => [],\n  showMessageBody: () => [],\n  scriptBody: () => [],\n  showScrollingTextBody: () => [],\n  // ヘッダ側を基準に、Header+Bodyで生成\n  showMessage: (e) => e.normalizedCommands(),\n  showScrollingText: (e) => e.normalizedCommands(),\n  comment: (e) => e.normalizedCommands(),\n  script: (e) => e.normalizedCommands(),\n  other: (e) => [e]\n}, A = (e) => _e(e, Ne), Ie = (e) => !!e, be = (e, t, n) => ({\n  data: e,\n  eventId: t,\n  pageIndex: n\n}), Me = (e, t, n) => e.list.map((s) => ({\n  data: s,\n  eventId: n.id,\n  pageIndex: t\n})), w = (e, t) => e.pages.map(\n  (n, s) => t(n, s, e)\n), B = (e, t) => e.events.filter(Ie).map((n) => w(n, t)), et = (e, t) => B(e, t).flat(2), tt = (e, t) => e.map((n) => w(n, t)), nt = (e, t) => e.map((n) => t(n, 0, n)), st = (e) => B(\n  e,\n  Me\n).flat(2), L = (e, t) => {\n  const n = t(e.list);\n  return {\n    ...e,\n    list: n\n  };\n}, D = (e, t) => ({\n  ...e,\n  pages: e.pages.map((n) => L(n, t))\n}), ve = (e, t) => ({\n  ...e,\n  events: e.events.map((n) => n ? D(n, t) : null)\n}), Oe = (e, t) => e.map((n) => L(n, t)), He = (e, t) => e.map((n) => D(n, t)), rt = (e) => ve(e, (t) => A(t).flat()), ct = (e) => Oe(\n  e,\n  (t) => A(t).flat()\n), at = (e) => He(e, (t) => A(t).flat()), P = (e, t) => t.includes(e.code), ot = (e) => P(e, Re), Re = [\n  r.PLAY_BGM,\n  r.PLAY_BGS,\n  r.PLAY_ME,\n  r.PLAY_SE,\n  r.CHANGE_BATTLE_BGM,\n  r.CHANGE_VICTORY_ME,\n  r.CHANGE_DEFEAT_ME,\n  r.CHANGE_VEHICLE_BGM\n], it = (e) => P(e, Ge), Ge = [\n  r.SHOW_MESSAGE,\n  r.SHOW_PICTURE,\n  r.CHANGE_ACTOR_IMAGES,\n  r.CHANGE_VEHICLE_IMAGE,\n  r.CHANGE_PARALLAX,\n  r.CHANGE_BATTLE_BACKGROUND\n], mt = (e, t) => ({\n  code: e.code,\n  paramIndex: t,\n  value: e.parameters[t]\n}), ut = (e, t) => ({\n  code: e.code,\n  paramIndex: t,\n  value: e.parameters[t]\n}), ht = (e, t) => ({\n  code: e.code,\n  paramIndex: t,\n  value: e.parameters[t]\n}), dt = (e, t, n = 0) => ({\n  code: e,\n  indent: n,\n  parameters: t\n}), V = (e, t) => `<${e}:${t}>`, h = () => /<([^<>:]+):([^>]*)>/g, lt = (e, t) => k(e.note, (n, s) => t(n, s, e)), Et = (e) => k(e, (t, n) => [t, n]), k = (e, t) => {\n  const n = h(), s = [];\n  let o;\n  for (; (o = n.exec(e)) !== null; )\n    s.push(t(o[1], o[2]));\n  return s;\n}, pt = (e, t) => e.replace(h(), (n, s, o) => {\n  const i = t(s, o);\n  return V(s, i);\n}), Ct = (e, t) => {\n  const n = h();\n  let s;\n  for (; (s = n.exec(e)) !== null; )\n    if (s[1] === t)\n      return s[2];\n}, gt = (e, t, n) => {\n  const s = h();\n  return e.replace(s, (o, i) => i === t ? V(i, n) : o);\n}, At = (e) => `code:${e}`, we = \"N\", Be = \"V\", W = (e, t) => `\\\\${e}[${t}]`, Le = (e) => W(we, e.id), Tt = (e) => e.map((t) => ({\n  controlChar: Le(t),\n  text: t.name\n})), St = (e) => e.variables.map((t, n) => ({\n  text: t || \"\",\n  controlChar: W(Be, n)\n})).filter((t) => t.text !== \"\"), De = /* @__PURE__ */ new Set([\n  \"px\",\n  \"py\",\n  \"x\",\n  \"y\",\n  \"v\",\n  \"n\",\n  \"p\",\n  \"g\",\n  \"c\",\n  \"i\",\n  \"fs\"\n]), ft = (e, t = De) => {\n  const n = /\\\\([A-Za-z]+)\\[(\\d+)]/g, s = [];\n  let o;\n  for (; (o = n.exec(e)) !== null; ) {\n    const i = o[1].toLowerCase(), F = parseInt(o[2], 10);\n    t.has(i) && s.push({ char: o[1], id: F });\n  }\n  return s;\n}, Pe = (e, t, n) => t.map((s) => n(s, e[s], e)), _t = (e, t, n) => Pe(e, t, n);\nexport {\n  I as BaseEventCommandGroup,\n  pe as CHOICE_HELP_TEXT,\n  M as CombinedEventCommandGroup,\n  re as ERROR_COMMAND_MESSAGE,\n  Je as ERROR_COMMAND_SCRIPT,\n  ce as ERROR_INVALID_HEAD,\n  he as ERROR_MESSAGE,\n  g as SimpleEventCommandGroup,\n  c as callHandler,\n  At as codeInfoText,\n  p as codeTest,\n  et as collectMapEvents,\n  ke as constructActor,\n  Fe as constructArmor,\n  Ue as constructClass,\n  E as constructDamage,\n  We as constructEnemy,\n  ze as constructItem,\n  m as constructParamArray,\n  Xe as constructSkill,\n  qe as constructState,\n  Ye as constructWeapon,\n  ne as createAdvanced,\n  a as createAudio,\n  je as createAudioCommand,\n  Q as createBasicTerms,\n  Me as createCommandContext,\n  ee as createCommandsArray,\n  Te as createCommentGroup,\n  $ as createCondtion,\n  W as createControlCharFormat,\n  dt as createEventCommand,\n  be as createEventContext,\n  y as createEventPage,\n  xe as createMap,\n  Ke as createMapEvent,\n  J as createMapEventImage,\n  ge as createMessageGroup,\n  te as createMessages,\n  V as createNoteEntity,\n  b as createParamNamesArray,\n  Se as createScriptGroup,\n  Ae as createScrlloingTextGroup,\n  $e as createSystemData,\n  se as createSystemSoundsArray,\n  Z as createTerms,\n  d as createVehicle,\n  Qe as flatMappingCommandList,\n  Le as fromActor,\n  Tt as fromActors,\n  St as fromSystem,\n  st as gatherEventCommandContext,\n  ft as getControlChars,\n  Ct as getNoteValue,\n  H as handleGroupComment,\n  v as handleGroupMessage,\n  R as handleGroupScript,\n  O as handleGroupScrollingText,\n  fe as handlerDispatch,\n  ot as isAudioCommand,\n  C as isBodyParams,\n  Ce as isChoiceHelp,\n  ye as isHeadCommand,\n  it as isImageCommand,\n  me as isMessageHeader,\n  Ee as joinCommandBodies,\n  h as makeRegex,\n  Ze as mapTextCommand,\n  G as mappingCommand,\n  _e as mappingCommandList,\n  P as matchesEventCommand,\n  A as normalizedCommands,\n  ct as normalizedCommonEvents,\n  rt as normalizedMapData,\n  at as normalizedTroops,\n  ht as pickCommandParamAudio,\n  ut as pickCommandParamNumber,\n  mt as pickCommandParamString,\n  u as pickCommands,\n  ae as pickComments,\n  N as pickHead,\n  ie as pickMessageHeader,\n  ue as pickMessageWithHead,\n  Pe as pickPropertys,\n  oe as pickScripts,\n  le as pickScrollText,\n  de as pickScrollTextHeader,\n  _t as pickString,\n  nt as processCommonEvents,\n  w as processEventPages,\n  B as processMapEvents,\n  tt as processTroopEvents,\n  Et as readNote,\n  k as readNoteEx,\n  lt as readNoteObject,\n  Oe as replaceCommonEvents,\n  L as replaceEventCommands,\n  ve as replaceMapEvents,\n  pt as replaceNote,\n  D as replacePages,\n  He as replaceTroops,\n  gt as setNoteValue\n};\n//# sourceMappingURL=rpg-data-tools.es.js.map\n","import type { AudioResourcePath } from \"./types\";\r\nimport type {\r\n  AudioFileParams,\r\n  ExtractCommandByParam,\r\n} from \"@sigureya/rpgtypes\";\r\nimport * as RpgTypes from \"@sigureya/rpgtypes\";\r\n\r\nexport const isAudioResource = (path: {\r\n  folder: string;\r\n  fileName: string;\r\n}): path is AudioResourcePath => {\r\n  return (\r\n    path.folder === RpgTypes.FOLDER_AUDIO_SE ||\r\n    path.folder === RpgTypes.FOLDER_AUDIO_BGM ||\r\n    path.folder === RpgTypes.FOLDER_AUDIO_BGS ||\r\n    path.folder === RpgTypes.FOLDER_AUDIO_ME\r\n  );\r\n};\r\nexport const audioCommandInfo = (\r\n  command: ExtractCommandByParam<[AudioFileParams]>\r\n) => ({\r\n  code: command.code,\r\n  path: audioPathFromCommands(command),\r\n});\r\n\r\nexport const audioPathFromCommands = <\r\n  T extends ExtractCommandByParam<[AudioFileParams]>\r\n>(\r\n  command: T\r\n): AudioResourcePath => {\r\n  return {\r\n    folder: folderName(command) || \"\",\r\n    fileName: command.parameters[0].name,\r\n  };\r\n};\r\nconst folderName = <Command extends ExtractCommandByParam<[AudioFileParams]>>(\r\n  command: Command\r\n) => {\r\n  return FOLDER_NAME_TABLE[command.code];\r\n};\r\n\r\nconst FOLDER_NAME_TABLE = {\r\n  [RpgTypes.PLAY_BGM]: RpgTypes.FOLDER_AUDIO_BGM,\r\n  [RpgTypes.PLAY_BGS]: RpgTypes.FOLDER_AUDIO_BGS,\r\n  [RpgTypes.PLAY_ME]: RpgTypes.FOLDER_AUDIO_ME,\r\n  [RpgTypes.PLAY_SE]: RpgTypes.FOLDER_AUDIO_SE,\r\n  [RpgTypes.CHANGE_BATTLE_BGM]: RpgTypes.FOLDER_AUDIO_BGM,\r\n  [RpgTypes.CHANGE_VICTORY_ME]: RpgTypes.FOLDER_AUDIO_ME,\r\n  [RpgTypes.CHANGE_DEFEAT_ME]: RpgTypes.FOLDER_AUDIO_ME,\r\n  [RpgTypes.CHANGE_VEHICLE_BGM]: RpgTypes.FOLDER_AUDIO_ME,\r\n} as const;\r\n","import {\r\n  collectMapEvents,\r\n  isAudioCommand,\r\n  processCommonEvents,\r\n  processTroopEvents,\r\n} from \"@sigureya/rpg-data-tools\";\r\nimport type {\r\n  Data_CommonEvent,\r\n  Data_Troop,\r\n  EventCommand,\r\n  Map_Audios,\r\n  MapEventContainer,\r\n  MapFileInfo,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type { MapAudioList } from \"./types\";\r\nimport type {\r\n  AudioCommandInfoWithLocation,\r\n  AudioResourcePath,\r\n} from \"./eventCommand\";\r\nimport { audioCommandInfo, audioPathFromCommands } from \"./eventCommand\";\r\n\r\nexport const collectAudioCommands = (\r\n  page: { list: EventCommand[] },\r\n  pageIndex: number,\r\n  event: { id: number }\r\n): AudioCommandInfoWithLocation[] => {\r\n  return page.list\r\n    .filter(isAudioCommand)\r\n    .map<AudioCommandInfoWithLocation>((command) => ({\r\n      code: command.code,\r\n      path: audioPathFromCommands(command),\r\n      pageIndex,\r\n      eventId: event.id,\r\n    }));\r\n};\r\n\r\nexport const extractAudioCommandsInfo = (\r\n  list: ReadonlyArray<EventCommand>\r\n): {\r\n  code: number;\r\n  path: AudioResourcePath;\r\n}[] => {\r\n  return list.filter(isAudioCommand).map(audioCommandInfo);\r\n};\r\n\r\nexport const extractAudioCFromCommonEvents = (\r\n  events: ReadonlyArray<Data_CommonEvent>\r\n): AudioCommandInfoWithLocation[] => {\r\n  return processCommonEvents(events, collectAudioCommands).flat(2);\r\n};\r\n\r\nexport const expectAudioFromTroop = (\r\n  troops: ReadonlyArray<Data_Troop>\r\n): AudioCommandInfoWithLocation[] => {\r\n  return processTroopEvents(troops, collectAudioCommands).flat(2);\r\n};\r\ntype MapType = Map_Audios & MapEventContainer<EventCommand>;\r\nexport const extractAudioFromMap = (map: MapType): MapAudioList => {\r\n  return {\r\n    bgm: map.bgm,\r\n    bgs: map.bgs,\r\n    commands: collectMapEvents(map, collectAudioCommands),\r\n  };\r\n};\r\nexport const extractAudioFromMapFileInfo = <Map extends MapType>(\r\n  map: MapFileInfo<Map>\r\n): MapFileInfo<MapAudioList> => {\r\n  return {\r\n    map: extractAudioFromMap(map.map),\r\n    filename: map.filename,\r\n    editingName: map.editingName,\r\n  };\r\n};\r\n","import type { AudioFileParams, System_AudioFiles } from \"@sigureya/rpgtypes\";\r\nimport type { ExtractedSystemAudio, SystemSoundPath } from \"./types\";\r\n/**\r\n * オーディオファイルのリストをパス情報に変換する\r\n * @param sounds オーディオファイルのリスト\r\n * @returns システムサウンドパスリスト\r\n */\r\nexport const systemAudioFiles = (\r\n  system: System_AudioFiles\r\n): ExtractedSystemAudio => {\r\n  return {\r\n    sounds: extractSoundPaths(system.sounds),\r\n    bgm: extractSoundPaths([system.battleBgm, system.titleBgm]),\r\n    me: extractSoundPaths([\r\n      system.defeatMe,\r\n      system.gameoverMe,\r\n      system.victoryMe,\r\n    ]),\r\n  };\r\n};\r\n\r\nconst extractSoundPaths = (sounds: AudioFileParams[]): SystemSoundPath[] => {\r\n  return sounds.map<SystemSoundPath>((sound, index) => ({\r\n    index,\r\n    path: sound.name,\r\n  }));\r\n};\r\n","import { pickString, readNoteEx } from \"@sigureya/rpg-data-tools\";\r\nimport type * as RpgTypes from \"@sigureya/rpgtypes\";\r\nimport type {\r\n  ExtractedText,\r\n  ExtractedTextItem,\r\n  TextExtractable,\r\n} from \"./types\";\r\n\r\nconst createData = (\r\n  key: string,\r\n  text: string,\r\n  data: { id: number }\r\n): ExtractedTextItem => {\r\n  return { key, text: text, id: data.id };\r\n};\r\n\r\nexport const extractTextData = <\r\n  T extends { note: string } & Record<KeyType, string>,\r\n  KeyType extends string & keyof RpgTypes.PickByType<T, string>\r\n>(\r\n  data: T & { id: number },\r\n  keyList: ReadonlyArray<KeyType>\r\n): ExtractedText => {\r\n  return {\r\n    main: pickString<ExtractedTextItem, T>(data, keyList, (key, value) => {\r\n      return createData(key, value, data);\r\n    }),\r\n    note: extractNoteText(data),\r\n  };\r\n};\r\n\r\nexport const extractNoteText = (data: {\r\n  note: string;\r\n  id: number;\r\n}): ExtractedTextItem[] => {\r\n  return readNoteEx(data.note, (key, value) => createData(key, value, data));\r\n};\r\n\r\nexport const extractTextFromActor = (\r\n  actor: TextExtractable<RpgTypes.Data_Actor>\r\n) => {\r\n  return extractTextData(actor, [\"name\", \"nickname\", \"profile\"]);\r\n};\r\n\r\nexport const extractTextFromEnemy = (\r\n  enemy: TextExtractable<RpgTypes.Data_Enemy>\r\n) => {\r\n  return extractTextData(enemy, [\"name\"]);\r\n};\r\n\r\nexport const extractTextFromClass = (\r\n  item: TextExtractable<RpgTypes.Data_Class>\r\n) => {\r\n  return extractTextData(item, [\"name\"]);\r\n};\r\n\r\nexport const extractTextFromSkill = (\r\n  skill: TextExtractable<RpgTypes.Data_Skill>\r\n) => {\r\n  return extractTextData(skill, [\r\n    \"name\",\r\n    \"description\",\r\n    \"message1\",\r\n    \"message2\",\r\n  ]);\r\n};\r\n\r\nexport const extractTextFromItem = (\r\n  item: TextExtractable<RpgTypes.Data_Item>\r\n) => {\r\n  return extractTextData(item, [\"name\", \"description\"]);\r\n};\r\nexport const extractTextFromWeapon = (\r\n  weapon: TextExtractable<RpgTypes.Data_Weapon>\r\n) => {\r\n  return extractTextData(weapon, [\"name\", \"description\"]);\r\n};\r\n\r\nexport const extractTextFromArmor = (\r\n  armor: TextExtractable<RpgTypes.Data_Armor>\r\n) => {\r\n  return extractTextData(armor, [\"name\", \"description\"]);\r\n};\r\n\r\nexport const extractTextFromState = (\r\n  state: TextExtractable<RpgTypes.Data_State>\r\n) => {\r\n  return extractTextData(state, [\r\n    \"name\",\r\n    \"message1\",\r\n    \"message2\",\r\n    \"message3\",\r\n    \"message4\",\r\n  ]);\r\n};\r\n","import type {\r\n  CommandParameter,\r\n  EventCommandGroup_Script,\r\n  TextCommandMapper,\r\n} from \"@sigureya/rpg-data-tools\";\r\nimport {\r\n  mappingCommandList,\r\n  normalizedCommands,\r\n  pickCommandParamString,\r\n  processEventPages,\r\n} from \"@sigureya/rpg-data-tools\";\r\nimport type { EventCommand } from \"@sigureya/rpgtypes\";\r\nimport { type Command_ShowChoices } from \"@sigureya/rpgtypes\";\r\n\r\ntype CommandParam = CommandParameter<string>;\r\nexport const extractTextFromEventCommands = (\r\n  list: ReadonlyArray<EventCommand>\r\n): CommandParam[][] => {\r\n  // メッセージの表示など結合し、1つのコマンドにまとめる\r\n  const normalized = normalizedCommands(list).flat();\r\n  return mappingCommandList(normalized, extractTextMapper);\r\n};\r\nexport const extractTextFromEventPages = (event: {\r\n  pages: { list: EventCommand[] }[];\r\n}): CommandParam[][][] => {\r\n  return processEventPages(event, (page) =>\r\n    extractTextFromEventCommands(page.list)\r\n  );\r\n};\r\n\r\nexport const extractTextMapper: TextCommandMapper<CommandParam[]> = {\r\n  changeName: (command) => [pickCommandParamString(command, 1)],\r\n  changeNickname: (command) => [pickCommandParamString(command, 1)],\r\n  changeProfile: (command) => [pickCommandParamString(command, 1)],\r\n  showChoices: (command) => commandChoice(command),\r\n  showScrollingText: (groop) => {\r\n    return [pickCommandParamString(groop.mergedBody(), 0)];\r\n  },\r\n  showMessage: (data) => {\r\n    const command = data.normalizedCommands();\r\n    const head = pickCommandParamString(command[0], 4);\r\n    const bodyCommand = command[1];\r\n    if (bodyCommand) {\r\n      return [head, pickCommandParamString(bodyCommand, 0)];\r\n    }\r\n    return [head];\r\n  },\r\n  choiceWhen() {\r\n    return [];\r\n  },\r\n  comment(groop) {\r\n    const command = groop.mergedBody();\r\n    return [pickCommandParamString(command, 0)];\r\n  },\r\n  script: (groop) => readScript(groop),\r\n\r\n  other: () => [],\r\n  commentBody: () => [],\r\n};\r\n\r\nexport const readScript = (\r\n  script: EventCommandGroup_Script\r\n): CommandParam[] => {\r\n  return [];\r\n};\r\n\r\nexport const commandChoice = (command: Command_ShowChoices): CommandParam[] => {\r\n  return command.parameters[0].map<CommandParam>((msg, index) => ({\r\n    code: command.code,\r\n    paramIndex: index,\r\n    value: msg,\r\n  }));\r\n};\r\n","import type { CommandParameter } from \"@sigureya/rpg-data-tools\";\r\nimport type {\r\n  Data_CommonEvent,\r\n  Data_Troop,\r\n  EventCommand,\r\n  MapEvent,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type {\r\n  ExtractedCommonEventText,\r\n  ExtractedMapEventText,\r\n  ExtractedTroopText,\r\n} from \"./types\";\r\nimport { extractNoteText } from \"./mainData\";\r\nimport {\r\n  extractTextFromEventCommands,\r\n  extractTextFromEventPages,\r\n} from \"./eventCommand\";\r\nimport type { ExtractedEventText } from \"./eventCommand/\";\r\n\r\nexport const correctTextCommands = (\r\n  page: { list: EventCommand[] },\r\n  pageIndex: number,\r\n  event: { id: number }\r\n): ExtractedEventText => {\r\n  const list: CommandParameter<string>[][] = extractTextFromEventCommands(\r\n    page.list\r\n  );\r\n  return {\r\n    eventId: event.id,\r\n    pageIndex,\r\n    commands: list.flat(),\r\n  };\r\n};\r\n\r\nexport const correctMapEventText = (\r\n  event: Pick<MapEvent, \"note\" | \"pages\" | \"id\">\r\n): ExtractedMapEventText => {\r\n  const commands: CommandParameter<string>[][][] =\r\n    extractTextFromEventPages(event);\r\n  return {\r\n    note: extractNoteText(event),\r\n    eventId: event.id,\r\n    commands: commands.flat(2),\r\n  };\r\n};\r\n\r\nexport const extractTextFromTroop = (\r\n  troop: Pick<Data_Troop, \"pages\" | \"id\">\r\n): ExtractedTroopText => {\r\n  const commands: CommandParameter<string>[][][] =\r\n    extractTextFromEventPages(troop);\r\n  return {\r\n    troopId: troop.id,\r\n    commands: commands.flat(2),\r\n  };\r\n};\r\n\r\nexport const extractTextFromCommonEvent = (\r\n  event: Pick<Data_CommonEvent, \"list\" | \"id\">\r\n): ExtractedCommonEventText => {\r\n  return {\r\n    eventId: event.id,\r\n    commands: extractTextFromEventCommands(event.list).flat(2),\r\n  };\r\n};\r\n","import type * as RpgTypes from \"@sigureya/rpgtypes\";\r\nimport type {\r\n  ExtractedActorImage,\r\n  ExtractedEnemyImage,\r\n  ImageExtractableActor,\r\n} from \"./types\";\r\n\r\nexport const extractImageFromEnemy = (\r\n  enemy: Pick<RpgTypes.Data_Enemy, \"id\" | \"battlerName\">\r\n): ExtractedEnemyImage => {\r\n  return {\r\n    key: \"battlerName\",\r\n    image: enemy.battlerName,\r\n    id: enemy.id,\r\n  };\r\n};\r\n\r\nconst extractActorImage = (\r\n  actor: ImageExtractableActor,\r\n  key: Exclude<keyof typeof actor, \"id\">,\r\n  folder: RpgTypes.ImageFolders\r\n): ExtractedActorImage => ({\r\n  folder: folder,\r\n  key,\r\n  image: actor[key],\r\n  id: actor.id,\r\n});\r\n\r\nexport const extractImageFromActor = (\r\n  actor: ImageExtractableActor\r\n): ExtractedActorImage[] => {\r\n  return [\r\n    extractActorImage(actor, \"faceName\", \"faces\"),\r\n    extractActorImage(actor, \"characterName\", \"characters\"),\r\n    extractActorImage(actor, \"battlerName\", \"sv_actors\"),\r\n  ];\r\n};\r\n","import type {\r\n  Data_System,\r\n  Data_Vehicle,\r\n  ImageFolders,\r\n  PickByType,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type { ExtractedSystemImage } from \"./types\";\r\ntype Vehicle = Pick<Data_Vehicle, \"characterName\">;\r\ninterface SystemVehicles {\r\n  boat: Vehicle;\r\n  ship: Vehicle;\r\n  airship: Vehicle;\r\n}\r\nconst vehicle = (\r\n  system: SystemVehicles,\r\n  key: keyof SystemVehicles\r\n): ExtractedSystemImage => {\r\n  return {\r\n    folder: \"characters\",\r\n    key,\r\n    image: system[key].characterName,\r\n  };\r\n};\r\nconst systemImage = <Key extends keyof PickByType<Data_System, string>>(\r\n  system: Pick<Data_System, Key>,\r\n  key: keyof typeof system,\r\n  folder: ImageFolders\r\n): ExtractedSystemImage => {\r\n  return {\r\n    folder,\r\n    key,\r\n    image: system[key],\r\n  };\r\n};\r\n\r\nexport const extractImageFromSystem = (\r\n  system: Pick<Data_System, \"title1Name\" | \"title2Name\"> & SystemVehicles\r\n): ExtractedSystemImage[] => {\r\n  return [\r\n    systemImage(system, \"title1Name\", \"titles1\"),\r\n    systemImage(system, \"title2Name\", \"titles2\"),\r\n    vehicle(system, \"boat\"),\r\n    vehicle(system, \"ship\"),\r\n    vehicle(system, \"airship\"),\r\n  ];\r\n};\r\n","import type {\r\n  CommandParameter,\r\n  MappingObject2,\r\n} from \"@sigureya/rpg-data-tools\";\r\nimport {\r\n  flatMappingCommandList,\r\n  isImageCommand,\r\n  mappingCommandList,\r\n  pickCommandParamString,\r\n} from \"@sigureya/rpg-data-tools\";\r\nimport type { ImageCommand } from \"./types\";\r\nimport type {\r\n  EventCommand,\r\n  ImageFolders,\r\n  IndexOfCommandParameter,\r\n} from \"@sigureya/rpgtypes\";\r\n\r\n/**\r\n * @deprecated\r\n */\r\nexport const extractImagesFromCommandListOld = (\r\n  commands: ReadonlyArray<EventCommand>\r\n): ImageCommand[][] => {\r\n  return mappingCommandList(commands, mappingTable);\r\n};\r\n\r\nexport const extractImagesFromCommandList = (\r\n  commands: ReadonlyArray<EventCommand>\r\n): ImageCommand[] => {\r\n  return flatMappingCommandList(commands.filter(isImageCommand), mappingTable);\r\n};\r\n\r\nconst imageCommand = <\r\n  Params extends unknown[],\r\n  Index extends IndexOfCommandParameter<\r\n    {\r\n      code: number;\r\n      parameters: Params;\r\n    },\r\n    string\r\n  >\r\n>(\r\n  command: {\r\n    code: number;\r\n    parameters: Params;\r\n  },\r\n  index: Index,\r\n  folderName: ImageFolders\r\n): ImageCommand => {\r\n  return {\r\n    folderName,\r\n    parameter: pickCommandParamString(\r\n      command,\r\n      index\r\n    ) as CommandParameter<string>,\r\n  };\r\n};\r\nconst mappingTable: Pick<\r\n  MappingObject2<ImageCommand[]>,\r\n  | \"changeActorImages\"\r\n  //  | \"setMovementRoute\"\r\n  | \"showPicture\"\r\n  | \"changeBattleBackground\"\r\n  | \"changeParallax\"\r\n  | \"changeVehicleImage\"\r\n  | \"showMessage\"\r\n  | \"other\"\r\n> = {\r\n  showMessage: (command) => {\r\n    return [imageCommand(command.header, 0, \"faces\")];\r\n  },\r\n  changeActorImages: (command) => {\r\n    return [\r\n      imageCommand(command, 1, \"characters\"),\r\n      imageCommand(command, 3, \"faces\"),\r\n      imageCommand(command, 5, \"sv_actors\"),\r\n    ];\r\n  },\r\n  showPicture: (command): [ImageCommand] => {\r\n    return [imageCommand(command, 1, \"pictures\")];\r\n  },\r\n  changeBattleBackground: (command) => {\r\n    return [\r\n      imageCommand(command, 0, \"battlebacks1\"),\r\n      imageCommand(command, 1, \"battlebacks2\"),\r\n    ];\r\n  },\r\n  changeParallax: (command): [ImageCommand] => {\r\n    return [imageCommand(command, 0, \"parallaxes\")];\r\n  },\r\n  changeVehicleImage: (command): [ImageCommand] => {\r\n    return [imageCommand(command, 1, \"characters\")];\r\n  },\r\n  other: () => [],\r\n};\r\n","import { isImageCommand } from \"@sigureya/rpg-data-tools\";\r\nimport type { Data_NamedItem, EventCommand } from \"@sigureya/rpgtypes\";\r\nimport type { ImageCommand, ImageCommandInfo } from \"./eventCommand/\";\r\nimport { extractImagesFromCommandListOld } from \"./eventCommand/\";\r\n\r\nexport const collectImageCommands = (\r\n  page: { list: EventCommand[] },\r\n  pageIndex: number,\r\n  event: Data_NamedItem\r\n): ImageCommandInfo[] => {\r\n  const list: ImageCommand[][] = extractImagesFromCommandListOld(\r\n    page.list.filter(isImageCommand)\r\n  );\r\n  return list.flatMap((xx) => mapImageCommands(xx, pageIndex, event));\r\n};\r\n\r\nconst imageCommandInfo = (\r\n  command: ImageCommand,\r\n  event: Data_NamedItem,\r\n  pageIndex: number\r\n): ImageCommandInfo => ({\r\n  folderName: command.folderName,\r\n  command: command.parameter,\r\n  eventId: event.id,\r\n  pageIndex: pageIndex,\r\n  eventName: event.name,\r\n});\r\n\r\nconst mapImageCommands = (\r\n  list: ImageCommand[],\r\n  pageIndex: number,\r\n  event: Data_NamedItem\r\n) => {\r\n  return list.map((command) => imageCommandInfo(command, event, pageIndex));\r\n};\r\n","import { collectMapEvents } from \"@sigureya/rpg-data-tools\";\r\nimport { collectImageCommands } from \"./collectCommand\";\r\nimport type {\r\n  ImageExtractableMap,\r\n  ExtractedMapImages,\r\n  ImageResourcePath,\r\n} from \"./types\";\r\nimport type { MapEvent_Image } from \"@sigureya/rpgtypes\";\r\nimport { FOLDER_IMG_CHACTERS } from \"@sigureya/rpgtypes\";\r\n\r\nexport const extractImageFromMap = (\r\n  map: ImageExtractableMap\r\n): ExtractedMapImages => {\r\n  return {\r\n    commands: collectMapEvents(map, collectImageCommands),\r\n    background1: {\r\n      folderName: \"battlebacks1\",\r\n      fileName: map.battleback1Name,\r\n    },\r\n    background2: {\r\n      folderName: \"battlebacks2\",\r\n      fileName: map.battleback2Name,\r\n    },\r\n    parallax: {\r\n      folderName: \"parallaxes\",\r\n      fileName: map.parallaxName,\r\n    },\r\n  };\r\n};\r\n\r\nexport const eventPageCharacterImage = (\r\n  pageImage: MapEvent_Image\r\n): ImageResourcePath => {\r\n  return {\r\n    folderName: FOLDER_IMG_CHACTERS,\r\n    fileName: pageImage.characterName,\r\n  };\r\n};\r\n","import * as RpgTypes from \"@sigureya/rpgtypes\";\r\nimport type { Table_IndexOfDesignation as Table_IndexOfDesignation } from \"./privateTypes\";\r\n\r\nexport const VARIABLE_DESIGNATION = 1 as const;\r\n\r\nexport const DESIGNATION_INDEX_TABLE: Table_IndexOfDesignation = {\r\n  [RpgTypes.CHANGE_ENEMY_HP]: 2,\r\n  [RpgTypes.CHANGE_ENEMY_MP]: 2,\r\n  [RpgTypes.TRANSFER_PLAYER]: 0,\r\n  [RpgTypes.SET_VEHICLE_LOCATION]: 1,\r\n  [RpgTypes.GET_LOCATION_INFO]: 2,\r\n  [RpgTypes.BATTLE_PROCESSING]: 0,\r\n} as const;\r\n\r\nexport const VARIABLEID_INDEX_TABLE = {\r\n  [RpgTypes.CHANGE_ENEMY_HP]: [4],\r\n  [RpgTypes.CHANGE_ENEMY_MP]: [4],\r\n  [RpgTypes.TRANSFER_PLAYER]: [1, 2, 3],\r\n  [RpgTypes.SET_VEHICLE_LOCATION]: [2, 3, 4],\r\n  [RpgTypes.GET_LOCATION_INFO]: [0],\r\n  [RpgTypes.BATTLE_PROCESSING]: [1],\r\n} as const;\r\n","import type { VariableDesignationCommand, VariableRead } from \"./types\";\r\nimport type { EventCommand } from \"@sigureya/rpgtypes\";\r\n\r\nimport {\r\n  DESIGNATION_INDEX_TABLE,\r\n  VARIABLE_DESIGNATION,\r\n  VARIABLEID_INDEX_TABLE,\r\n} from \"./piravate\";\r\n\r\nexport const extractVariableReadingInfos = (\r\n  commandList: ReadonlyArray<EventCommand>\r\n): VariableRead[] => {\r\n  return commandList\r\n    .filter(isVariableReadCommand)\r\n    .flatMap(extractVariableReference);\r\n};\r\n\r\nexport const extractVariableReference = (\r\n  command: VariableDesignationCommand\r\n): VariableRead[] => {\r\n  const indexList = VARIABLEID_INDEX_TABLE[command.code];\r\n  if (indexList === undefined) {\r\n    throw new Error(`code${command.code} is not supported`);\r\n  }\r\n  return indexList.map<VariableRead>((index) => ({\r\n    eventCode: command.code,\r\n    index: index,\r\n    variableId: command.parameters[index] as number,\r\n  }));\r\n};\r\n\r\nexport const isVariableReadCommand = (\r\n  command: EventCommand\r\n): command is VariableDesignationCommand => {\r\n  const index =\r\n    DESIGNATION_INDEX_TABLE[\r\n      command.code as keyof typeof DESIGNATION_INDEX_TABLE\r\n    ];\r\n  if (index === undefined) {\r\n    return false;\r\n  }\r\n  return command.parameters[index] === VARIABLE_DESIGNATION;\r\n};\r\n","import * as RpgTypes from \"@sigureya/rpgtypes\";\r\nimport type { Command_VariableWrite, VariableWrite } from \"./types\";\r\n\r\nexport const extractVariableWriting = (\r\n  list: ReadonlyArray<RpgTypes.EventCommand>\r\n): VariableWrite[] => {\r\n  return list.flatMap((command) => {\r\n    if (isVariableWriteCommand(command)) {\r\n      return extractVariableWritsFromEventCommand(command);\r\n    }\r\n    return [];\r\n  });\r\n};\r\n\r\nexport const isVariableWriteCommand = (\r\n  command: RpgTypes.EventCommand\r\n): command is Command_VariableWrite => {\r\n  return (\r\n    command.code === RpgTypes.INPUT_NUMBER ||\r\n    command.code === RpgTypes.SELECT_ITEM ||\r\n    command.code === RpgTypes.GET_LOCATION_INFO ||\r\n    command.code === RpgTypes.CONTROL_VARIABLES\r\n  );\r\n};\r\n\r\nexport const extractVariableWritsFromEventCommand = (\r\n  command: Command_VariableWrite\r\n): VariableWrite[] => {\r\n  if (command.code === RpgTypes.CONTROL_VARIABLES) {\r\n    return extractVariableWritsFromControlVariable(command);\r\n  }\r\n\r\n  return [\r\n    {\r\n      variableId: command.parameters[0],\r\n      code: command.code,\r\n    },\r\n  ];\r\n};\r\n\r\ninterface Command_ControlVariableLike {\r\n  code: typeof RpgTypes.CONTROL_VARIABLES;\r\n  parameters: {\r\n    0: number;\r\n    1: number;\r\n  };\r\n}\r\n\r\nexport const extractVariableWritsFromControlVariable = (\r\n  command: Command_ControlVariableLike\r\n): VariableWrite[] => {\r\n  const start = command.parameters[0];\r\n  const end = command.parameters[1];\r\n  return Array.from({ length: end - start + 1 }, (_, i) => ({\r\n    variableId: i + start,\r\n    code: RpgTypes.CONTROL_VARIABLES,\r\n  }));\r\n};\r\n","import type { MapEvent_PageCondition } from \"@sigureya/rpgtypes\";\r\nimport type { ExtractedPageCondition } from \"./types\";\r\n\r\nexport const extractPageCondition = (\r\n  condtion: MapEvent_PageCondition\r\n): ExtractedPageCondition => {\r\n  return {\r\n    variableId: condtion.variableId,\r\n    valid: condtion.variableValid,\r\n    value: condtion.variableValue,\r\n  };\r\n};\r\n","import type {\r\n  Data_CommonEvent,\r\n  Data_Troop,\r\n  EventCommand,\r\n  MapEventContainer,\r\n  MapEventPage,\r\n} from \"@sigureya/rpgtypes\";\r\nimport type { VariableRead } from \"./eventCommand\";\r\nimport { extractVariableReadingInfos } from \"./eventCommand\";\r\nimport type { ExtractedVariableCommands } from \"./types\";\r\nimport {\r\n  processCommonEvents,\r\n  processMapEvents,\r\n  processTroopEvents,\r\n} from \"@sigureya/rpg-data-tools\";\r\nimport { extractPageCondition } from \"./eventConditions\";\r\n\r\nexport const collectVariableReadCommand = <\r\n  Page extends { list: EventCommand[] }\r\n>(\r\n  page: Page,\r\n  pageIndex: number,\r\n  event: { id: number }\r\n): ExtractedVariableCommands => {\r\n  const list: VariableRead[] = extractVariableReadingInfos(page.list);\r\n  return {\r\n    pageIndex,\r\n    eventId: event.id,\r\n    commands: list,\r\n  };\r\n};\r\n\r\ntype EventPageType = Pick<MapEventPage, \"conditions\" | \"list\">;\r\n\r\ntype EventType = {\r\n  id: number;\r\n  pages: EventPageType[];\r\n};\r\n\r\nexport const extractVariableReadingFromMap = (\r\n  map: MapEventContainer<EventCommand, EventType>\r\n) => {\r\n  return processMapEvents(map, (page, pageIndex, event) => ({\r\n    page: collectVariableReadCommand(page, pageIndex, event),\r\n    conditions: extractPageCondition(page.conditions),\r\n  })).flat(2);\r\n};\r\n\r\nexport const extractVariableReadingFromCommonEvent = (\r\n  event: ReadonlyArray<Data_CommonEvent>\r\n): ExtractedVariableCommands[] => {\r\n  return processCommonEvents(event, collectVariableReadCommand);\r\n};\r\n\r\nexport const extractVariableReadingFromTroop = (\r\n  troops: ReadonlyArray<Data_Troop>\r\n) => {\r\n  return processTroopEvents(troops, collectVariableReadCommand);\r\n};\r\n","import type { EventCommand } from \"@sigureya/rpgtypes\";\r\nimport { COMMON_EVENT } from \"@sigureya/rpgtypes\";\r\n\r\nexport type CommonEventCallCount = Record<number, number>;\r\n\r\nexport const extractCommonEventCalls = (\r\n  list: ReadonlyArray<EventCommand>\r\n): CommonEventCallCount => {\r\n  return list.reduce<Record<number, number>>((acc, command) => {\r\n    if (command.code === COMMON_EVENT) {\r\n      const id: number = command.parameters[0];\r\n      acc[id] = (acc[id] || 0) + 1;\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n","import type { EventCommand, MapEvent, MapEventPage } from \"@sigureya/rpgtypes\";\r\n\r\nimport {\r\n  eventPageCharacterImage,\r\n  extractAudioCommandsInfo,\r\n  extractCommonEventCalls,\r\n  extractImagesFromCommandList,\r\n  extractPageCondition,\r\n  extractTextFromEventCommands,\r\n  extractVariableReadingInfos,\r\n  extractVariableWriting,\r\n} from \"./extract\";\r\nimport type {\r\n  ExtractedCommandInfos,\r\n  ExtractedMapEvent,\r\n  ExtractedMapEventPage,\r\n} from \"./types\";\r\n\r\nexport const extractMapEvent = (event: MapEvent): ExtractedMapEvent => {\r\n  const pages = event.pages.map(extractPageInfo);\r\n  return {\r\n    name: event.name,\r\n    eventId: event.id,\r\n    pages,\r\n  };\r\n};\r\n\r\nexport const extractPageInfo = (page: MapEventPage): ExtractedMapEventPage => {\r\n  return {\r\n    commands: extractEventCommandData(page.list),\r\n    condtion: extractPageCondition(page.conditions),\r\n    image: eventPageCharacterImage(page.image),\r\n  };\r\n};\r\n\r\nexport const extractEventCommandData = (\r\n  list: ReadonlyArray<EventCommand>\r\n): ExtractedCommandInfos => {\r\n  return {\r\n    texts: extractTextFromEventCommands(list).flat(),\r\n    calls: extractCommonEventCalls(list),\r\n    audios: extractAudioCommandsInfo(list),\r\n    variableReading: extractVariableReadingInfos(list),\r\n    variableWriting: extractVariableWriting(list),\r\n    images: extractImagesFromCommandList(list),\r\n  };\r\n};\r\n"],"names":["R","n","o","A","N","C","S","I","L","M","G","B","V","W","Y","e","a","K","l","m","p","g","k","v","x","J","f","h","u","y","Q","q","w","tE","TE","cE","RE","nE","oE","AE","NE","CE","SE","IE","LE","GE","PE","FE","DE","BE","WE","YE","eE","aE","gE","vE","xE","JE","fE","hE","uE","__","s_","t_","$_","EO","_O","OO","TO","t","re","ce","s","i","ae","T","oe","U","ie","me","ue","z","he","de","_","le","Ee","pe","Ce","ge","Ae","Te","Se","O","H","c","_e","Qe","r.SHOW_MESSAGE","r.SHOW_MESSAGE_BODY","r.SHOW_SCROLLING_TEXT","r.SHOW_SCROLLING_TEXT_BODY","r.SHOW_CHOICES","r.SHOW_CHOICES_ITEM","r.COMMENT","r.COMMENT_BODY","r.SCRIPT_EVAL","r.SCRIPT_EVAL_BODY","r.CONDITIONAL_BRANCH","r.CONTROL_SWITCHES","r.CONTROL_VARIABLES","r.CONTROL_SELF_SWITCH","r.CONTROL_TIMER","r.COMMON_EVENT","r.CHANGE_SAVE_ACCESS","r.CHANGE_MENU_ACCESS","r.CHANGE_ENCOUNTER","r.CHANGE_FORMATION_ACCESS","r.CHANGE_NAME","r.CHANGE_PROFILE","r.CHANGE_NICKNAME","r.CHANGE_ACTOR_IMAGES","r.CHANGE_VEHICLE_IMAGE","r.CHANGE_BATTLE_BGM","r.CHANGE_VICTORY_ME","r.CHANGE_DEFEAT_ME","r.PLAY_BGM","r.FADEOUT_BGM","r.PLAY_SE","r.STOP_SE","r.PLAY_ME","r.LABEL","r.LABEL_JUMP","r.CHANGE_WINDOW_COLOR","r.TINT_SCREEN","r.FLASH_SCREEN","r.SHAKE_SCREEN","r.SHOW_PICTURE","r.MOVE_PICTURE","r.ROTATE_PICTURE","r.TINT_PICTURE","r.ERASE_PICTURE","r.BATTLE_PROCESSING","r.WAIT","r.GAME_OVER","r.CHANGE_PARALLAX","r.CHANGE_BATTLE_BACKGROUND","r.PLAY_MOVIE","r.CHANGE_TRANSPARENCY","r.SET_WEATHER_EFFECT","r.CHANGE_GOLD","r.SHOW_ANIMATION","r.TRANSFER_PLAYER","r.SET_VEHICLE_LOCATION","r.SET_EVENT_LOCATION","Ne","Ie","et","tt","nt","P","ot","Re","r.PLAY_BGS","r.CHANGE_VEHICLE_BGM","it","Ge","mt","Pe","_t","isAudioResource","path","RpgTypes.FOLDER_AUDIO_SE","RpgTypes.FOLDER_AUDIO_BGM","RpgTypes.FOLDER_AUDIO_BGS","RpgTypes.FOLDER_AUDIO_ME","audioCommandInfo","command","audioPathFromCommands","folderName","FOLDER_NAME_TABLE","RpgTypes.PLAY_BGM","RpgTypes.PLAY_BGS","RpgTypes.PLAY_ME","RpgTypes.PLAY_SE","RpgTypes.CHANGE_BATTLE_BGM","RpgTypes.CHANGE_VICTORY_ME","RpgTypes.CHANGE_DEFEAT_ME","RpgTypes.CHANGE_VEHICLE_BGM","collectAudioCommands","page","pageIndex","event","isAudioCommand","extractAudioCommandsInfo","list","extractAudioCFromCommonEvents","events","processCommonEvents","expectAudioFromTroop","troops","processTroopEvents","extractAudioFromMap","map","collectMapEvents","extractAudioFromMapFileInfo","systemAudioFiles","system","extractSoundPaths","sounds","sound","index","createData","key","text","data","extractTextData","keyList","pickString","value","extractNoteText","readNoteEx","extractTextFromActor","actor","extractTextFromEnemy","enemy","extractTextFromClass","item","extractTextFromSkill","skill","extractTextFromItem","extractTextFromWeapon","weapon","extractTextFromArmor","armor","extractTextFromState","state","extractTextFromEventCommands","normalized","normalizedCommands","mappingCommandList","extractTextMapper","extractTextFromEventPages","processEventPages","pickCommandParamString","commandChoice","groop","head","bodyCommand","readScript","script","msg","correctTextCommands","correctMapEventText","commands","extractTextFromTroop","troop","extractTextFromCommonEvent","extractImageFromEnemy","extractActorImage","folder","extractImageFromActor","vehicle","systemImage","extractImageFromSystem","extractImagesFromCommandListOld","mappingTable","extractImagesFromCommandList","flatMappingCommandList","isImageCommand","imageCommand","collectImageCommands","xx","mapImageCommands","imageCommandInfo","extractImageFromMap","eventPageCharacterImage","pageImage","FOLDER_IMG_CHACTERS","VARIABLE_DESIGNATION","DESIGNATION_INDEX_TABLE","RpgTypes.CHANGE_ENEMY_HP","RpgTypes.CHANGE_ENEMY_MP","RpgTypes.TRANSFER_PLAYER","RpgTypes.SET_VEHICLE_LOCATION","RpgTypes.GET_LOCATION_INFO","RpgTypes.BATTLE_PROCESSING","VARIABLEID_INDEX_TABLE","extractVariableReadingInfos","commandList","isVariableReadCommand","extractVariableReference","indexList","extractVariableWriting","isVariableWriteCommand","extractVariableWritsFromEventCommand","RpgTypes.INPUT_NUMBER","RpgTypes.SELECT_ITEM","RpgTypes.CONTROL_VARIABLES","extractVariableWritsFromControlVariable","start","end","extractPageCondition","condtion","collectVariableReadCommand","extractVariableReadingFromMap","processMapEvents","extractVariableReadingFromCommonEvent","extractVariableReadingFromTroop","extractCommonEventCalls","acc","COMMON_EVENT","id","extractMapEvent","pages","extractPageInfo","extractEventCommandData"],"mappings":"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","x_google_ignoreList":[0,1]}